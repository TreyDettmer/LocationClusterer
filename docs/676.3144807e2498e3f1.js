var VY=Object.defineProperty,AB=Object.getOwnPropertySymbols,UY=Object.prototype.hasOwnProperty,WY=Object.prototype.propertyIsEnumerable,HR=(to,ea,ft)=>ea in to?VY(to,ea,{enumerable:!0,configurable:!0,writable:!0,value:ft}):to[ea]=ft,_d=(to,ea)=>{for(var ft in ea||(ea={}))UY.call(ea,ft)&&HR(to,ft,ea[ft]);if(AB)for(var ft of AB(ea))WY.call(ea,ft)&&HR(to,ft,ea[ft]);return to},De=(to,ea,ft)=>(HR(to,"symbol"!=typeof ea?ea+"":ea,ft),ft);(()=>{var to={1006:function(be,Ve){var xe;!function(Re){"use strict";var Ne=Math.cosh||function(Y){return Math.abs(Y)<1e-9?1-Y:.5*(Math.exp(Y)+Math.exp(-Y))},Se=Math.sinh||function(Y){return Math.abs(Y)<1e-9?Y:.5*(Math.exp(Y)-Math.exp(-Y))},vt=function(){throw SyntaxError("Invalid Param")};function tt(Y,re){var ie=Math.abs(Y),ge=Math.abs(re);return 0===Y?Math.log(ge):0===re?Math.log(ie):ie<3e3&&ge<3e3?.5*Math.log(Y*Y+re*re):(Y/=2,re/=2,.5*Math.log(Y*Y+re*re)+Math.LN2)}function me(Y,re){if(!(this instanceof me))return new me(Y,re);var ie=function(Y,re){var ie={re:0,im:0};if(null==Y)ie.re=ie.im=0;else if(void 0!==re)ie.re=Y,ie.im=re;else switch(typeof Y){case"object":if("im"in Y&&"re"in Y)ie.re=Y.re,ie.im=Y.im;else if("abs"in Y&&"arg"in Y){if(!Number.isFinite(Y.abs)&&Number.isFinite(Y.arg))return me.INFINITY;ie.re=Y.abs*Math.cos(Y.arg),ie.im=Y.abs*Math.sin(Y.arg)}else if("r"in Y&&"phi"in Y){if(!Number.isFinite(Y.r)&&Number.isFinite(Y.phi))return me.INFINITY;ie.re=Y.r*Math.cos(Y.phi),ie.im=Y.r*Math.sin(Y.phi)}else 2===Y.length?(ie.re=Y[0],ie.im=Y[1]):vt();break;case"string":ie.im=ie.re=0;var ge=Y.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),Be=1,Ke=0;null===ge&&vt();for(var nt=0;nt<ge.length;nt++){var Tt=ge[nt];" "===Tt||"\t"===Tt||"\n"===Tt||("+"===Tt?Be++:"-"===Tt?Ke++:"i"===Tt||"I"===Tt?(Be+Ke===0&&vt()," "===ge[nt+1]||isNaN(ge[nt+1])?ie.im+=parseFloat((Ke%2?"-":"")+"1"):(ie.im+=parseFloat((Ke%2?"-":"")+ge[nt+1]),nt++),Be=Ke=0):((Be+Ke===0||isNaN(Tt))&&vt(),"i"===ge[nt+1]||"I"===ge[nt+1]?(ie.im+=parseFloat((Ke%2?"-":"")+Tt),nt++):ie.re+=parseFloat((Ke%2?"-":"")+Tt),Be=Ke=0))}Be+Ke>0&&vt();break;case"number":ie.im=0,ie.re=Y;break;default:vt()}return isNaN(ie.re)||isNaN(ie.im),ie}(Y,re);this.re=ie.re,this.im=ie.im}me.prototype={re:0,im:0,sign:function(){var Y=this.abs();return new me(this.re/Y,this.im/Y)},add:function(Y,re){var ie=new me(Y,re);return this.isInfinite()&&ie.isInfinite()?me.NAN:this.isInfinite()||ie.isInfinite()?me.INFINITY:new me(this.re+ie.re,this.im+ie.im)},sub:function(Y,re){var ie=new me(Y,re);return this.isInfinite()&&ie.isInfinite()?me.NAN:this.isInfinite()||ie.isInfinite()?me.INFINITY:new me(this.re-ie.re,this.im-ie.im)},mul:function(Y,re){var ie=new me(Y,re);return this.isInfinite()&&ie.isZero()||this.isZero()&&ie.isInfinite()?me.NAN:this.isInfinite()||ie.isInfinite()?me.INFINITY:0===ie.im&&0===this.im?new me(this.re*ie.re,0):new me(this.re*ie.re-this.im*ie.im,this.re*ie.im+this.im*ie.re)},div:function(Y,re){var ie=new me(Y,re);if(this.isZero()&&ie.isZero()||this.isInfinite()&&ie.isInfinite())return me.NAN;if(this.isInfinite()||ie.isZero())return me.INFINITY;if(this.isZero()||ie.isInfinite())return me.ZERO;Y=this.re,re=this.im;var Ke,nt,ge=ie.re,Be=ie.im;return 0===Be?new me(Y/ge,re/ge):Math.abs(ge)<Math.abs(Be)?new me((Y*(nt=ge/Be)+re)/(Ke=ge*nt+Be),(re*nt-Y)/Ke):new me((Y+re*(nt=Be/ge))/(Ke=Be*nt+ge),(re-Y*nt)/Ke)},pow:function(Y,re){var ie=new me(Y,re);if(Y=this.re,re=this.im,ie.isZero())return me.ONE;if(0===ie.im){if(0===re&&Y>0)return new me(Math.pow(Y,ie.re),0);if(0===Y)switch((ie.re%4+4)%4){case 0:return new me(Math.pow(re,ie.re),0);case 1:return new me(0,Math.pow(re,ie.re));case 2:return new me(-Math.pow(re,ie.re),0);case 3:return new me(0,-Math.pow(re,ie.re))}}if(0===Y&&0===re&&ie.re>0&&ie.im>=0)return me.ZERO;var ge=Math.atan2(re,Y),Be=tt(Y,re);return Y=Math.exp(ie.re*Be-ie.im*ge),re=ie.im*Be+ie.re*ge,new me(Y*Math.cos(re),Y*Math.sin(re))},sqrt:function(){var ge,Be,Y=this.re,re=this.im,ie=this.abs();if(Y>=0){if(0===re)return new me(Math.sqrt(Y),0);ge=.5*Math.sqrt(2*(ie+Y))}else ge=Math.abs(re)/Math.sqrt(2*(ie-Y));return Be=Y<=0?.5*Math.sqrt(2*(ie-Y)):Math.abs(re)/Math.sqrt(2*(ie+Y)),new me(ge,re<0?-Be:Be)},exp:function(){var Y=Math.exp(this.re);return new me(Y*Math.cos(this.im),Y*Math.sin(this.im))},expm1:function(){var Y=this.re,re=this.im;return new me(Math.expm1(Y)*Math.cos(re)+function(Y){var re=Math.PI/4;if(-re>Y||Y>re)return Math.cos(Y)-1;var ie=Y*Y;return ie*(ie*(ie*(ie*(ie*(ie*(ie*(ie/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-.5)}(re),Math.exp(Y)*Math.sin(re))},log:function(){var Y=this.re,re=this.im;return new me(tt(Y,re),Math.atan2(re,Y))},abs:function(){return Y=this.re,re=this.im,ie=Math.abs(Y),ge=Math.abs(re),ie<3e3&&ge<3e3?Math.sqrt(ie*ie+ge*ge):(ie<ge?(ie=ge,ge=Y/re):ge=re/Y,ie*Math.sqrt(1+ge*ge));var Y,re,ie,ge},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var Y=this.re,re=this.im;return new me(Math.sin(Y)*Ne(re),Math.cos(Y)*Se(re))},cos:function(){var Y=this.re,re=this.im;return new me(Math.cos(Y)*Ne(re),-Math.sin(Y)*Se(re))},tan:function(){var Y=2*this.re,re=2*this.im,ie=Math.cos(Y)+Ne(re);return new me(Math.sin(Y)/ie,Se(re)/ie)},cot:function(){var Y=2*this.re,re=2*this.im,ie=Math.cos(Y)-Ne(re);return new me(-Math.sin(Y)/ie,Se(re)/ie)},sec:function(){var Y=this.re,re=this.im,ie=.5*Ne(2*re)+.5*Math.cos(2*Y);return new me(Math.cos(Y)*Ne(re)/ie,Math.sin(Y)*Se(re)/ie)},csc:function(){var Y=this.re,re=this.im,ie=.5*Ne(2*re)-.5*Math.cos(2*Y);return new me(Math.sin(Y)*Ne(re)/ie,-Math.cos(Y)*Se(re)/ie)},asin:function(){var Y=this.re,re=this.im,ie=new me(re*re-Y*Y+1,-2*Y*re).sqrt(),ge=new me(ie.re-re,ie.im+Y).log();return new me(ge.im,-ge.re)},acos:function(){var Y=this.re,re=this.im,ie=new me(re*re-Y*Y+1,-2*Y*re).sqrt(),ge=new me(ie.re-re,ie.im+Y).log();return new me(Math.PI/2-ge.im,ge.re)},atan:function(){var Y=this.re,re=this.im;if(0===Y){if(1===re)return new me(0,1/0);if(-1===re)return new me(0,-1/0)}var ie=Y*Y+(1-re)*(1-re),ge=new me((1-re*re-Y*Y)/ie,-2*Y/ie).log();return new me(-.5*ge.im,.5*ge.re)},acot:function(){var Y=this.re,re=this.im;if(0===re)return new me(Math.atan2(1,Y),0);var ie=Y*Y+re*re;return 0!==ie?new me(Y/ie,-re/ie).atan():new me(0!==Y?Y/0:0,0!==re?-re/0:0).atan()},asec:function(){var Y=this.re,re=this.im;if(0===Y&&0===re)return new me(0,1/0);var ie=Y*Y+re*re;return 0!==ie?new me(Y/ie,-re/ie).acos():new me(0!==Y?Y/0:0,0!==re?-re/0:0).acos()},acsc:function(){var Y=this.re,re=this.im;if(0===Y&&0===re)return new me(Math.PI/2,1/0);var ie=Y*Y+re*re;return 0!==ie?new me(Y/ie,-re/ie).asin():new me(0!==Y?Y/0:0,0!==re?-re/0:0).asin()},sinh:function(){var Y=this.re,re=this.im;return new me(Se(Y)*Math.cos(re),Ne(Y)*Math.sin(re))},cosh:function(){var Y=this.re,re=this.im;return new me(Ne(Y)*Math.cos(re),Se(Y)*Math.sin(re))},tanh:function(){var Y=2*this.re,re=2*this.im,ie=Ne(Y)+Math.cos(re);return new me(Se(Y)/ie,Math.sin(re)/ie)},coth:function(){var Y=2*this.re,re=2*this.im,ie=Ne(Y)-Math.cos(re);return new me(Se(Y)/ie,-Math.sin(re)/ie)},csch:function(){var Y=this.re,re=this.im,ie=Math.cos(2*re)-Ne(2*Y);return new me(-2*Se(Y)*Math.cos(re)/ie,2*Ne(Y)*Math.sin(re)/ie)},sech:function(){var Y=this.re,re=this.im,ie=Math.cos(2*re)+Ne(2*Y);return new me(2*Ne(Y)*Math.cos(re)/ie,-2*Se(Y)*Math.sin(re)/ie)},asinh:function(){var Y=this.im;this.im=-this.re,this.re=Y;var re=this.asin();return this.re=-this.im,this.im=Y,Y=re.re,re.re=-re.im,re.im=Y,re},acosh:function(){var Y=this.acos();if(Y.im<=0){var re=Y.re;Y.re=-Y.im,Y.im=re}else re=Y.im,Y.im=-Y.re,Y.re=re;return Y},atanh:function(){var Y=this.re,re=this.im,ie=Y>1&&0===re,ge=1-Y,Be=1+Y,Ke=ge*ge+re*re,nt=0!==Ke?new me((Be*ge-re*re)/Ke,(re*ge+Be*re)/Ke):new me(-1!==Y?Y/0:0,0!==re?re/0:0),Tt=nt.re;return nt.re=tt(nt.re,nt.im)/2,nt.im=Math.atan2(nt.im,Tt)/2,ie&&(nt.im=-nt.im),nt},acoth:function(){var Y=this.re,re=this.im;if(0===Y&&0===re)return new me(0,Math.PI/2);var ie=Y*Y+re*re;return 0!==ie?new me(Y/ie,-re/ie).atanh():new me(0!==Y?Y/0:0,0!==re?-re/0:0).atanh()},acsch:function(){var Y=this.re,re=this.im;if(0===re)return new me(0!==Y?Math.log(Y+Math.sqrt(Y*Y+1)):1/0,0);var ie=Y*Y+re*re;return 0!==ie?new me(Y/ie,-re/ie).asinh():new me(0!==Y?Y/0:0,0!==re?-re/0:0).asinh()},asech:function(){var Y=this.re,re=this.im;if(this.isZero())return me.INFINITY;var ie=Y*Y+re*re;return 0!==ie?new me(Y/ie,-re/ie).acosh():new me(0!==Y?Y/0:0,0!==re?-re/0:0).acosh()},inverse:function(){if(this.isZero())return me.INFINITY;if(this.isInfinite())return me.ZERO;var Y=this.re,re=this.im,ie=Y*Y+re*re;return new me(Y/ie,-re/ie)},conjugate:function(){return new me(this.re,-this.im)},neg:function(){return new me(-this.re,-this.im)},ceil:function(Y){return Y=Math.pow(10,Y||0),new me(Math.ceil(this.re*Y)/Y,Math.ceil(this.im*Y)/Y)},floor:function(Y){return Y=Math.pow(10,Y||0),new me(Math.floor(this.re*Y)/Y,Math.floor(this.im*Y)/Y)},round:function(Y){return Y=Math.pow(10,Y||0),new me(Math.round(this.re*Y)/Y,Math.round(this.im*Y)/Y)},equals:function(Y,re){var ie=new me(Y,re);return Math.abs(ie.re-this.re)<=me.EPSILON&&Math.abs(ie.im-this.im)<=me.EPSILON},clone:function(){return new me(this.re,this.im)},toString:function(){var Y=this.re,re=this.im,ie="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(Y)<me.EPSILON&&(Y=0),Math.abs(re)<me.EPSILON&&(re=0),0===re?ie+Y:(0!==Y?(ie+=Y,ie+=" ",re<0?(re=-re,ie+="-"):ie+="+",ie+=" "):re<0&&(re=-re,ie+="-"),1!==re&&(ie+=re),ie+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return 0===this.im?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return 0===this.im&&0===this.re},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},me.ZERO=new me(0,0),me.ONE=new me(1,0),me.I=new me(0,1),me.PI=new me(Math.PI,0),me.E=new me(Math.E,0),me.INFINITY=new me(1/0,1/0),me.NAN=new me(NaN,NaN),me.EPSILON=1e-15,void 0!==(xe=function(){return me}.apply(Ve,[]))&&(be.exports=xe)}()},4613:function(be,Ve){var xe;!function(Re){"use strict";var Se={s:1,n:0,d:1};function Ie(ge,Be){if(isNaN(ge=parseInt(ge,10)))throw ie.InvalidParameter;return ge*Be}function Ge(ge,Be){if(0===Be)throw ie.DivisionByZero;var Ke=Object.create(ie.prototype);Ke.s=ge<0?-1:1;var nt=re(ge=ge<0?-ge:ge,Be);return Ke.n=ge/nt,Ke.d=Be/nt,Ke}function vt(ge){for(var Be={},Ke=ge,nt=2,Tt=4;Tt<=Ke;){for(;Ke%nt==0;)Ke/=nt,Be[nt]=(Be[nt]||0)+1;Tt+=1+2*nt++}return Ke!==ge?Ke>1&&(Be[Ke]=(Be[Ke]||0)+1):Be[ge]=(Be[ge]||0)+1,Be}var tt=function(ge,Be){var Cn,Ke=0,nt=1,Tt=1,Yt=0,$t=0,mn=0,on=1,kn=1,Ye=0,Ze=1,ve=1,Et=1,xt=1e7;if(null!=ge)if(void 0!==Be){if(Tt=(Ke=ge)*(nt=Be),Ke%1!=0||nt%1!=0)throw ie.NonIntegerParameter}else switch(typeof ge){case"object":if("d"in ge&&"n"in ge)Ke=ge.n,nt=ge.d,"s"in ge&&(Ke*=ge.s);else{if(!(0 in ge))throw ie.InvalidParameter;Ke=ge[0],1 in ge&&(nt=ge[1])}Tt=Ke*nt;break;case"number":if(ge<0&&(Tt=ge,ge=-ge),ge%1==0)Ke=ge;else if(ge>0){for(ge>=1&&(ge/=kn=Math.pow(10,Math.floor(1+Math.log(ge)/Math.LN10)));Ze<=xt&&Et<=xt;){if(ge===(Cn=(Ye+ve)/(Ze+Et))){Ze+Et<=xt?(Ke=Ye+ve,nt=Ze+Et):Et>Ze?(Ke=ve,nt=Et):(Ke=Ye,nt=Ze);break}ge>Cn?(Ye+=ve,Ze+=Et):(ve+=Ye,Et+=Ze),Ze>xt?(Ke=ve,nt=Et):(Ke=Ye,nt=Ze)}Ke*=kn}else(isNaN(ge)||isNaN(Be))&&(nt=Ke=NaN);break;case"string":if(null===(Ze=ge.match(/\d+|./g)))throw ie.InvalidParameter;if("-"===Ze[Ye]?(Tt=-1,Ye++):"+"===Ze[Ye]&&Ye++,Ze.length===Ye+1?$t=Ie(Ze[Ye++],Tt):"."===Ze[Ye+1]||"."===Ze[Ye]?("."!==Ze[Ye]&&(Yt=Ie(Ze[Ye++],Tt)),(1+ ++Ye===Ze.length||"("===Ze[Ye+1]&&")"===Ze[Ye+3]||"'"===Ze[Ye+1]&&"'"===Ze[Ye+3])&&($t=Ie(Ze[Ye],Tt),on=Math.pow(10,Ze[Ye].length),Ye++),("("===Ze[Ye]&&")"===Ze[Ye+2]||"'"===Ze[Ye]&&"'"===Ze[Ye+2])&&(mn=Ie(Ze[Ye+1],Tt),kn=Math.pow(10,Ze[Ye+1].length)-1,Ye+=3)):"/"===Ze[Ye+1]||":"===Ze[Ye+1]?($t=Ie(Ze[Ye],Tt),on=Ie(Ze[Ye+2],1),Ye+=3):"/"===Ze[Ye+3]&&" "===Ze[Ye+1]&&(Yt=Ie(Ze[Ye],Tt),$t=Ie(Ze[Ye+2],Tt),on=Ie(Ze[Ye+4],1),Ye+=5),Ze.length<=Ye){Tt=Ke=mn+(nt=on*kn)*Yt+kn*$t;break}default:throw ie.InvalidParameter}if(0===nt)throw ie.DivisionByZero;Se.s=Tt<0?-1:1,Se.n=Math.abs(Ke),Se.d=Math.abs(nt)};function re(ge,Be){if(!ge)return Be;if(!Be)return ge;for(;;){if(!(ge%=Be))return Be;if(!(Be%=ge))return ge}}function ie(ge,Be){if(tt(ge,Be),!(this instanceof ie))return Ge(Se.s*Se.n,Se.d);ge=re(Se.d,Se.n),this.s=Se.s,this.n=Se.n/ge,this.d=Se.d/ge}ie.DivisionByZero=new Error("Division by Zero"),ie.InvalidParameter=new Error("Invalid argument"),ie.NonIntegerParameter=new Error("Parameters must be integer"),ie.prototype={s:1,n:0,d:1,abs:function(){return Ge(this.n,this.d)},neg:function(){return Ge(-this.s*this.n,this.d)},add:function(ge,Be){return tt(ge,Be),Ge(this.s*this.n*Se.d+Se.s*this.d*Se.n,this.d*Se.d)},sub:function(ge,Be){return tt(ge,Be),Ge(this.s*this.n*Se.d-Se.s*this.d*Se.n,this.d*Se.d)},mul:function(ge,Be){return tt(ge,Be),Ge(this.s*Se.s*this.n*Se.n,this.d*Se.d)},div:function(ge,Be){return tt(ge,Be),Ge(this.s*Se.s*this.n*Se.d,this.d*Se.n)},clone:function(){return Ge(this.s*this.n,this.d)},mod:function(ge,Be){if(isNaN(this.n)||isNaN(this.d))return new ie(NaN);if(void 0===ge)return Ge(this.s*this.n%this.d,1);if(tt(ge,Be),0===Se.n&&0===this.d)throw ie.DivisionByZero;return Ge(this.s*(Se.d*this.n)%(Se.n*this.d),Se.d*this.d)},gcd:function(ge,Be){return tt(ge,Be),Ge(re(Se.n,this.n)*re(Se.d,this.d),Se.d*this.d)},lcm:function(ge,Be){return tt(ge,Be),0===Se.n&&0===this.n?Ge(0,1):Ge(Se.n*this.n,re(Se.n,this.n)*re(Se.d,this.d))},ceil:function(ge){return ge=Math.pow(10,ge||0),isNaN(this.n)||isNaN(this.d)?new ie(NaN):Ge(Math.ceil(ge*this.s*this.n/this.d),ge)},floor:function(ge){return ge=Math.pow(10,ge||0),isNaN(this.n)||isNaN(this.d)?new ie(NaN):Ge(Math.floor(ge*this.s*this.n/this.d),ge)},round:function(ge){return ge=Math.pow(10,ge||0),isNaN(this.n)||isNaN(this.d)?new ie(NaN):Ge(Math.round(ge*this.s*this.n/this.d),ge)},inverse:function(){return Ge(this.s*this.d,this.n)},pow:function(ge,Be){if(tt(ge,Be),1===Se.d)return Se.s<0?Ge(Math.pow(this.s*this.d,Se.n),Math.pow(this.n,Se.n)):Ge(Math.pow(this.s*this.n,Se.n),Math.pow(this.d,Se.n));if(this.s<0)return null;var Ke=vt(this.n),nt=vt(this.d),Tt=1,Yt=1;for(var $t in Ke)if("1"!==$t){if("0"===$t){Tt=0;break}if(Ke[$t]*=Se.n,Ke[$t]%Se.d!=0)return null;Ke[$t]/=Se.d,Tt*=Math.pow($t,Ke[$t])}for(var $t in nt)if("1"!==$t){if(nt[$t]*=Se.n,nt[$t]%Se.d!=0)return null;nt[$t]/=Se.d,Yt*=Math.pow($t,nt[$t])}return Se.s<0?Ge(Yt,Tt):Ge(Tt,Yt)},equals:function(ge,Be){return tt(ge,Be),this.s*this.n*Se.d==Se.s*Se.n*this.d},compare:function(ge,Be){tt(ge,Be);var Ke=this.s*this.n*Se.d-Se.s*Se.n*this.d;return(0<Ke)-(Ke<0)},simplify:function(ge){if(isNaN(this.n)||isNaN(this.d))return this;ge=ge||.001;for(var Be=this.abs(),Ke=Be.toContinued(),nt=1;nt<Ke.length;nt++){for(var Tt=Ge(Ke[nt-1],1),Yt=nt-2;Yt>=0;Yt--)Tt=Tt.inverse().add(Ke[Yt]);if(Tt.sub(Be).abs().valueOf()<ge)return Tt.mul(this.s)}return this},divisible:function(ge,Be){return tt(ge,Be),!(!(Se.n*this.d)||this.n*Se.d%(Se.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(ge){var Be,Ke="",nt=this.n,Tt=this.d;return this.s<0&&(Ke+="-"),1===Tt?Ke+=nt:(ge&&(Be=Math.floor(nt/Tt))>0&&(Ke+=Be,Ke+=" ",nt%=Tt),Ke+=nt,Ke+="/",Ke+=Tt),Ke},toLatex:function(ge){var Be,Ke="",nt=this.n,Tt=this.d;return this.s<0&&(Ke+="-"),1===Tt?Ke+=nt:(ge&&(Be=Math.floor(nt/Tt))>0&&(Ke+=Be,nt%=Tt),Ke+="\\frac{",Ke+=nt,Ke+="}{",Ke+=Tt,Ke+="}"),Ke},toContinued:function(){var ge,Be=this.n,Ke=this.d,nt=[];if(isNaN(Be)||isNaN(Ke))return nt;do{nt.push(Math.floor(Be/Ke)),ge=Be%Ke,Be=Ke,Ke=ge}while(1!==Be);return nt},toString:function(ge){var Be=this.n,Ke=this.d;if(isNaN(Be)||isNaN(Ke))return"NaN";ge=ge||15;var nt=function me(ge,Be){for(;Be%2==0;Be/=2);for(;Be%5==0;Be/=5);if(1===Be)return 0;for(var Ke=10%Be,nt=1;1!==Ke;nt++)if(Ke=10*Ke%Be,nt>2e3)return 0;return nt}(0,Ke),Tt=function Y(ge,Be,Ke){for(var nt=1,Tt=function ue(ge,Be,Ke){for(var nt=1;Be>0;ge=ge*ge%Ke,Be>>=1)1&Be&&(nt=nt*ge%Ke);return nt}(10,Ke,Be),Yt=0;Yt<300;Yt++){if(nt===Tt)return Yt;nt=10*nt%Be,Tt=10*Tt%Be}return 0}(0,Ke,nt),Yt=this.s<0?"-":"";if(Yt+=Be/Ke|0,Be%=Ke,(Be*=10)&&(Yt+="."),nt){for(var $t=Tt;$t--;)Yt+=Be/Ke|0,Be%=Ke,Be*=10;for(Yt+="(",$t=nt;$t--;)Yt+=Be/Ke|0,Be%=Ke,Be*=10;Yt+=")"}else for($t=ge;Be&&$t--;)Yt+=Be/Ke|0,Be%=Ke,Be*=10;return Yt}},void 0!==(xe=function(){return ie}.apply(Ve,[]))&&(be.exports=xe)}()},9286:be=>{be.exports=function Ve(te,xe){"use strict";var ge,Be,Re=/(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,Ne=/(^[ ]*|[ ]*$)/g,Se=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,Ie=/^0x[0-9a-f]+$/i,Ge=/^0/,vt=function(Tt){return Ve.insensitive&&(""+Tt).toLowerCase()||""+Tt},tt=vt(te).replace(Ne,"")||"",ue=vt(xe).replace(Ne,"")||"",me=tt.replace(Re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),Y=ue.replace(Re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),re=parseInt(tt.match(Ie),16)||1!==me.length&&tt.match(Se)&&Date.parse(tt),ie=parseInt(ue.match(Ie),16)||re&&ue.match(Se)&&Date.parse(ue)||null;if(ie){if(re<ie)return-1;if(re>ie)return 1}for(var Ke=0,nt=Math.max(me.length,Y.length);Ke<nt;Ke++){if(ge=!(me[Ke]||"").match(Ge)&&parseFloat(me[Ke])||me[Ke]||0,Be=!(Y[Ke]||"").match(Ge)&&parseFloat(Y[Ke])||Y[Ke]||0,isNaN(ge)!==isNaN(Be))return isNaN(ge)?1:-1;if(typeof ge!=typeof Be&&(ge+="",Be+=""),ge<Be)return-1;if(ge>Be)return 1}return 0}},4994:(be,Ve,te)=>{var xe=te(4312),Re=te(6421),Ne=te(5764),Se=te(8685),Ie=te(6676);function Ge(vt){var tt=-1,ue=null==vt?0:vt.length;for(this.clear();++tt<ue;){var me=vt[tt];this.set(me[0],me[1])}}Ge.prototype.clear=xe,Ge.prototype.delete=Re,Ge.prototype.get=Ne,Ge.prototype.has=Se,Ge.prototype.set=Ie,be.exports=Ge},9215:(be,Ve,te)=>{var xe=te(1840),Re=te(4378),Ne=te(4981),Se=te(7343),Ie=te(8895);function Ge(vt){var tt=-1,ue=null==vt?0:vt.length;for(this.clear();++tt<ue;){var me=vt[tt];this.set(me[0],me[1])}}Ge.prototype.clear=xe,Ge.prototype.delete=Re,Ge.prototype.get=Ne,Ge.prototype.has=Se,Ge.prototype.set=Ie,be.exports=Ge},1501:(be,Ve,te)=>{var Ne=te(3436)(te(2119),"Map");be.exports=Ne},9850:(be,Ve,te)=>{var xe=te(638),Re=te(1184),Ne=te(866),Se=te(3771),Ie=te(1772);function Ge(vt){var tt=-1,ue=null==vt?0:vt.length;for(this.clear();++tt<ue;){var me=vt[tt];this.set(me[0],me[1])}}Ge.prototype.clear=xe,Ge.prototype.delete=Re,Ge.prototype.get=Ne,Ge.prototype.has=Se,Ge.prototype.set=Ie,be.exports=Ge},6323:(be,Ve,te)=>{var Ne=te(3436)(te(2119),"Set");be.exports=Ne},8849:(be,Ve,te)=>{var xe=te(9850),Re=te(4600),Ne=te(1387);function Se(Ie){var Ge=-1,vt=null==Ie?0:Ie.length;for(this.__data__=new xe;++Ge<vt;)this.add(Ie[Ge])}Se.prototype.add=Se.prototype.push=Re,Se.prototype.has=Ne,be.exports=Se},443:(be,Ve,te)=>{var xe=te(2119);be.exports=xe.Symbol},1253:(be,Ve,te)=>{var xe=te(4164);be.exports=function Re(Ne,Se){return!(null==Ne||!Ne.length)&&xe(Ne,Se,0)>-1}},7609:be=>{be.exports=function Ve(te,xe,Re){for(var Ne=-1,Se=null==te?0:te.length;++Ne<Se;)if(Re(xe,te[Ne]))return!0;return!1}},2271:(be,Ve,te)=>{var xe=te(5334),Re=te(7151),Ne=te(1503),Se=te(891),Ie=te(8442),Ge=te(8159),tt=Object.prototype.hasOwnProperty;be.exports=function ue(me,Y){var re=Ne(me),ie=!re&&Re(me),ge=!re&&!ie&&Se(me),Be=!re&&!ie&&!ge&&Ge(me),Ke=re||ie||ge||Be,nt=Ke?xe(me.length,String):[],Tt=nt.length;for(var Yt in me)(Y||tt.call(me,Yt))&&(!Ke||!("length"==Yt||ge&&("offset"==Yt||"parent"==Yt)||Be&&("buffer"==Yt||"byteLength"==Yt||"byteOffset"==Yt)||Ie(Yt,Tt)))&&nt.push(Yt);return nt}},4633:be=>{be.exports=function Ve(te,xe){for(var Re=-1,Ne=null==te?0:te.length,Se=Array(Ne);++Re<Ne;)Se[Re]=xe(te[Re],Re,te);return Se}},4125:(be,Ve,te)=>{var xe=te(8826);be.exports=function Re(Ne){var Se=Ne.length;return Se?Ne[xe(0,Se-1)]:void 0}},8906:(be,Ve,te)=>{var xe=te(9454),Re=te(9905);be.exports=function Ne(Se){return Re(xe(Se))}},3503:(be,Ve,te)=>{var xe=te(217);be.exports=function Re(Ne,Se){for(var Ie=Ne.length;Ie--;)if(xe(Ne[Ie][0],Se))return Ie;return-1}},5317:be=>{be.exports=function Ve(te,xe,Re,Ne){for(var Se=te.length,Ie=Re+(Ne?1:-1);Ne?Ie--:++Ie<Se;)if(xe(te[Ie],Ie,te))return Ie;return-1}},3337:(be,Ve,te)=>{var xe=te(443),Re=te(1318),Ne=te(2902),Ge=xe?xe.toStringTag:void 0;be.exports=function vt(tt){return null==tt?void 0===tt?"[object Undefined]":"[object Null]":Ge&&Ge in Object(tt)?Re(tt):Ne(tt)}},4164:(be,Ve,te)=>{var xe=te(5317),Re=te(968),Ne=te(4977);be.exports=function Se(Ie,Ge,vt){return Ge==Ge?Ne(Ie,Ge,vt):xe(Ie,Re,vt)}},186:(be,Ve,te)=>{var xe=te(3337),Re=te(2671);be.exports=function Se(Ie){return Re(Ie)&&"[object Arguments]"==xe(Ie)}},968:be=>{be.exports=function Ve(te){return te!=te}},7304:(be,Ve,te)=>{var xe=te(5946),Re=te(1943),Ne=te(5940),Se=te(2827),Ge=/^\[object .+?Constructor\]$/,Y=RegExp("^"+Function.prototype.toString.call(Object.prototype.hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");be.exports=function re(ie){return!(!Ne(ie)||Re(ie))&&(xe(ie)?Y:Ge).test(Se(ie))}},1083:(be,Ve,te)=>{var xe=te(3337),Re=te(6231),Ne=te(2671),xt={};xt["[object Float32Array]"]=xt["[object Float64Array]"]=xt["[object Int8Array]"]=xt["[object Int16Array]"]=xt["[object Int32Array]"]=xt["[object Uint8Array]"]=xt["[object Uint8ClampedArray]"]=xt["[object Uint16Array]"]=xt["[object Uint32Array]"]=!0,xt["[object Arguments]"]=xt["[object Array]"]=xt["[object ArrayBuffer]"]=xt["[object Boolean]"]=xt["[object DataView]"]=xt["[object Date]"]=xt["[object Error]"]=xt["[object Function]"]=xt["[object Map]"]=xt["[object Number]"]=xt["[object Object]"]=xt["[object RegExp]"]=xt["[object Set]"]=xt["[object String]"]=xt["[object WeakMap]"]=!1,be.exports=function Cn(In){return Ne(In)&&Re(In.length)&&!!xt[xe(In)]}},1172:(be,Ve,te)=>{var xe=te(5488),Re=te(5491),Se=Object.prototype.hasOwnProperty;be.exports=function Ie(Ge){if(!xe(Ge))return Re(Ge);var vt=[];for(var tt in Object(Ge))Se.call(Ge,tt)&&"constructor"!=tt&&vt.push(tt);return vt}},8826:be=>{var Ve=Math.floor,te=Math.random;be.exports=function xe(Re,Ne){return Re+Ve(te()*(Ne-Re+1))}},1435:(be,Ve,te)=>{var xe=te(4125),Re=te(377);be.exports=function Ne(Se){return xe(Re(Se))}},7522:(be,Ve,te)=>{var xe=te(9905),Re=te(377);be.exports=function Ne(Se){return xe(Re(Se))}},5334:be=>{be.exports=function Ve(te,xe){for(var Re=-1,Ne=Array(te);++Re<te;)Ne[Re]=xe(Re);return Ne}},5647:be=>{be.exports=function Ve(te){return function(xe){return te(xe)}}},707:(be,Ve,te)=>{var xe=te(8849),Re=te(1253),Ne=te(7609),Se=te(5972),Ie=te(4575),Ge=te(4174);be.exports=function tt(ue,me,Y){var re=-1,ie=Re,ge=ue.length,Be=!0,Ke=[],nt=Ke;if(Y)Be=!1,ie=Ne;else if(ge>=200){var Tt=me?null:Ie(ue);if(Tt)return Ge(Tt);Be=!1,ie=Se,nt=new xe}else nt=me?[]:Ke;e:for(;++re<ge;){var Yt=ue[re],$t=me?me(Yt):Yt;if(Yt=Y||0!==Yt?Yt:0,Be&&$t==$t){for(var mn=nt.length;mn--;)if(nt[mn]===$t)continue e;me&&nt.push($t),Ke.push(Yt)}else ie(nt,$t,Y)||(nt!==Ke&&nt.push($t),Ke.push(Yt))}return Ke}},9179:(be,Ve,te)=>{var xe=te(4633);be.exports=function Re(Ne,Se){return xe(Se,function(Ie){return Ne[Ie]})}},5972:be=>{be.exports=function Ve(te,xe){return te.has(xe)}},9454:be=>{be.exports=function Ve(te,xe){var Re=-1,Ne=te.length;for(xe||(xe=Array(Ne));++Re<Ne;)xe[Re]=te[Re];return xe}},4610:(be,Ve,te)=>{var xe=te(2119);be.exports=xe["__core-js_shared__"]},4575:(be,Ve,te)=>{var xe=te(6323),Re=te(2552),Ne=te(4174),Ie=xe&&1/Ne(new xe([,-0]))[1]==1/0?function(Ge){return new xe(Ge)}:Re;be.exports=Ie},9122:be=>{var Ve="object"==typeof global&&global&&global.Object===Object&&global;be.exports=Ve},4537:(be,Ve,te)=>{var xe=te(3819);be.exports=function Re(Ne,Se){var Ie=Ne.__data__;return xe(Se)?Ie["string"==typeof Se?"string":"hash"]:Ie.map}},3436:(be,Ve,te)=>{var xe=te(7304),Re=te(1990);be.exports=function Ne(Se,Ie){var Ge=Re(Se,Ie);return xe(Ge)?Ge:void 0}},1318:(be,Ve,te)=>{var xe=te(443),Re=Object.prototype,Ne=Re.hasOwnProperty,Se=Re.toString,Ie=xe?xe.toStringTag:void 0;be.exports=function Ge(vt){var tt=Ne.call(vt,Ie),ue=vt[Ie];try{vt[Ie]=void 0;var me=!0}catch(re){}var Y=Se.call(vt);return me&&(tt?vt[Ie]=ue:delete vt[Ie]),Y}},1990:be=>{be.exports=function Ve(te,xe){return null==te?void 0:te[xe]}},4312:(be,Ve,te)=>{var xe=te(862);be.exports=function Re(){this.__data__=xe?xe(null):{},this.size=0}},6421:be=>{be.exports=function Ve(te){var xe=this.has(te)&&delete this.__data__[te];return this.size-=xe?1:0,xe}},5764:(be,Ve,te)=>{var xe=te(862),Se=Object.prototype.hasOwnProperty;be.exports=function Ie(Ge){var vt=this.__data__;if(xe){var tt=vt[Ge];return"__lodash_hash_undefined__"===tt?void 0:tt}return Se.call(vt,Ge)?vt[Ge]:void 0}},8685:(be,Ve,te)=>{var xe=te(862),Ne=Object.prototype.hasOwnProperty;be.exports=function Se(Ie){var Ge=this.__data__;return xe?void 0!==Ge[Ie]:Ne.call(Ge,Ie)}},6676:(be,Ve,te)=>{var xe=te(862);be.exports=function Ne(Se,Ie){var Ge=this.__data__;return this.size+=this.has(Se)?0:1,Ge[Se]=xe&&void 0===Ie?"__lodash_hash_undefined__":Ie,this}},8442:be=>{var te=/^(?:0|[1-9]\d*)$/;be.exports=function xe(Re,Ne){var Se=typeof Re;return!!(Ne=null==Ne?9007199254740991:Ne)&&("number"==Se||"symbol"!=Se&&te.test(Re))&&Re>-1&&Re%1==0&&Re<Ne}},3819:be=>{be.exports=function Ve(te){var xe=typeof te;return"string"==xe||"number"==xe||"symbol"==xe||"boolean"==xe?"__proto__"!==te:null===te}},1943:(be,Ve,te)=>{var Se,xe=te(4610),Re=(Se=/[^.]+$/.exec(xe&&xe.keys&&xe.keys.IE_PROTO||""))?"Symbol(src)_1."+Se:"";be.exports=function Ne(Se){return!!Re&&Re in Se}},5488:be=>{var Ve=Object.prototype;be.exports=function te(xe){var Re=xe&&xe.constructor;return xe===("function"==typeof Re&&Re.prototype||Ve)}},1840:be=>{be.exports=function Ve(){this.__data__=[],this.size=0}},4378:(be,Ve,te)=>{var xe=te(3503),Ne=Array.prototype.splice;be.exports=function Se(Ie){var Ge=this.__data__,vt=xe(Ge,Ie);return!(vt<0||(vt==Ge.length-1?Ge.pop():Ne.call(Ge,vt,1),--this.size,0))}},4981:(be,Ve,te)=>{var xe=te(3503);be.exports=function Re(Ne){var Se=this.__data__,Ie=xe(Se,Ne);return Ie<0?void 0:Se[Ie][1]}},7343:(be,Ve,te)=>{var xe=te(3503);be.exports=function Re(Ne){return xe(this.__data__,Ne)>-1}},8895:(be,Ve,te)=>{var xe=te(3503);be.exports=function Re(Ne,Se){var Ie=this.__data__,Ge=xe(Ie,Ne);return Ge<0?(++this.size,Ie.push([Ne,Se])):Ie[Ge][1]=Se,this}},638:(be,Ve,te)=>{var xe=te(4994),Re=te(9215),Ne=te(1501);be.exports=function Se(){this.size=0,this.__data__={hash:new xe,map:new(Ne||Re),string:new xe}}},1184:(be,Ve,te)=>{var xe=te(4537);be.exports=function Re(Ne){var Se=xe(this,Ne).delete(Ne);return this.size-=Se?1:0,Se}},866:(be,Ve,te)=>{var xe=te(4537);be.exports=function Re(Ne){return xe(this,Ne).get(Ne)}},3771:(be,Ve,te)=>{var xe=te(4537);be.exports=function Re(Ne){return xe(this,Ne).has(Ne)}},1772:(be,Ve,te)=>{var xe=te(4537);be.exports=function Re(Ne,Se){var Ie=xe(this,Ne),Ge=Ie.size;return Ie.set(Ne,Se),this.size+=Ie.size==Ge?0:1,this}},862:(be,Ve,te)=>{var Re=te(3436)(Object,"create");be.exports=Re},5491:(be,Ve,te)=>{var Re=te(9385)(Object.keys,Object);be.exports=Re},3597:(be,Ve,te)=>{be=te.nmd(be);var xe=te(9122),Re=Ve&&!Ve.nodeType&&Ve,Ne=Re&&be&&!be.nodeType&&be,Ie=Ne&&Ne.exports===Re&&xe.process,Ge=function(){try{return Ne&&Ne.require&&Ne.require("util").types||Ie&&Ie.binding&&Ie.binding("util")}catch(tt){}}();be.exports=Ge},2902:be=>{var te=Object.prototype.toString;be.exports=function xe(Re){return te.call(Re)}},9385:be=>{be.exports=function Ve(te,xe){return function(Re){return te(xe(Re))}}},2119:(be,Ve,te)=>{var xe=te(9122),Re="object"==typeof self&&self&&self.Object===Object&&self,Ne=xe||Re||Function("return this")();be.exports=Ne},4600:be=>{be.exports=function te(xe){return this.__data__.set(xe,"__lodash_hash_undefined__"),this}},1387:be=>{be.exports=function Ve(te){return this.__data__.has(te)}},4174:be=>{be.exports=function Ve(te){var xe=-1,Re=Array(te.size);return te.forEach(function(Ne){Re[++xe]=Ne}),Re}},9905:(be,Ve,te)=>{var xe=te(8826);be.exports=function Re(Ne,Se){var Ie=-1,Ge=Ne.length,vt=Ge-1;for(Se=void 0===Se?Ge:Se;++Ie<Se;){var tt=xe(Ie,vt),ue=Ne[tt];Ne[tt]=Ne[Ie],Ne[Ie]=ue}return Ne.length=Se,Ne}},4977:be=>{be.exports=function Ve(te,xe,Re){for(var Ne=Re-1,Se=te.length;++Ne<Se;)if(te[Ne]===xe)return Ne;return-1}},2827:be=>{var te=Function.prototype.toString;be.exports=function xe(Re){if(null!=Re){try{return te.call(Re)}catch(Ne){}try{return Re+""}catch(Ne){}}return""}},217:be=>{be.exports=function Ve(te,xe){return te===xe||te!=te&&xe!=xe}},7151:(be,Ve,te)=>{var xe=te(186),Re=te(2671),Ne=Object.prototype,Se=Ne.hasOwnProperty,Ie=Ne.propertyIsEnumerable,Ge=xe(function(){return arguments}())?xe:function(vt){return Re(vt)&&Se.call(vt,"callee")&&!Ie.call(vt,"callee")};be.exports=Ge},1503:be=>{be.exports=Array.isArray},6507:(be,Ve,te)=>{var xe=te(5946),Re=te(6231);be.exports=function Ne(Se){return null!=Se&&Re(Se.length)&&!xe(Se)}},891:(be,Ve,te)=>{be=te.nmd(be);var xe=te(2119),Re=te(3580),Ne=Ve&&!Ve.nodeType&&Ve,Se=Ne&&be&&!be.nodeType&&be,Ge=Se&&Se.exports===Ne?xe.Buffer:void 0;be.exports=(Ge?Ge.isBuffer:void 0)||Re},5946:(be,Ve,te)=>{var xe=te(3337),Re=te(5940);be.exports=function vt(tt){if(!Re(tt))return!1;var ue=xe(tt);return"[object Function]"==ue||"[object GeneratorFunction]"==ue||"[object AsyncFunction]"==ue||"[object Proxy]"==ue}},6231:be=>{be.exports=function te(xe){return"number"==typeof xe&&xe>-1&&xe%1==0&&xe<=9007199254740991}},5940:be=>{be.exports=function Ve(te){var xe=typeof te;return null!=te&&("object"==xe||"function"==xe)}},2671:be=>{be.exports=function Ve(te){return null!=te&&"object"==typeof te}},8159:(be,Ve,te)=>{var xe=te(1083),Re=te(5647),Ne=te(3597),Se=Ne&&Ne.isTypedArray,Ie=Se?Re(Se):xe;be.exports=Ie},118:(be,Ve,te)=>{var xe=te(2271),Re=te(1172),Ne=te(6507);be.exports=function Se(Ie){return Ne(Ie)?xe(Ie):Re(Ie)}},2552:be=>{be.exports=function Ve(){}},8799:(be,Ve,te)=>{var xe=te(4125),Re=te(1435),Ne=te(1503);be.exports=function Se(Ie){return(Ne(Ie)?xe:Re)(Ie)}},9336:(be,Ve,te)=>{var xe=te(8906),Re=te(7522),Ne=te(1503);be.exports=function Se(Ie){return(Ne(Ie)?xe:Re)(Ie)}},3580:be=>{be.exports=function Ve(){return!1}},836:(be,Ve,te)=>{var xe=te(707);be.exports=function Re(Ne){return Ne&&Ne.length?xe(Ne):[]}},377:(be,Ve,te)=>{var xe=te(9179),Re=te(118);be.exports=function Ne(Se){return null==Se?[]:xe(Se,Re(Se))}},7658:be=>{be.exports=te;var Ve=null;try{Ve=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(Ze){}function te(Ze,ve,Et){this.low=0|Ze,this.high=0|ve,this.unsigned=!!Et}function xe(Ze){return!0===(Ze&&Ze.__isLong__)}Object.defineProperty(te.prototype,"__isLong__",{value:!0}),te.isLong=xe;var Re={},Ne={};function Se(Ze,ve){var Et,xt,Cn;return ve?(Cn=0<=(Ze>>>=0)&&Ze<256)&&(xt=Ne[Ze])?xt:(Et=Ge(Ze,(0|Ze)<0?-1:0,!0),Cn&&(Ne[Ze]=Et),Et):(Cn=-128<=(Ze|=0)&&Ze<128)&&(xt=Re[Ze])?xt:(Et=Ge(Ze,Ze<0?-1:0,!1),Cn&&(Re[Ze]=Et),Et)}function Ie(Ze,ve){if(isNaN(Ze))return ve?nt:Ke;if(ve){if(Ze<0)return nt;if(Ze>=ie)return on}else{if(Ze<=-ge)return kn;if(Ze+1>=ge)return mn}return Ze<0?Ie(-Ze,ve).neg():Ge(Ze%re|0,Ze/re|0,ve)}function Ge(Ze,ve,Et){return new te(Ze,ve,Et)}te.fromInt=Se,te.fromNumber=Ie,te.fromBits=Ge;var vt=Math.pow;function tt(Ze,ve,Et){if(0===Ze.length)throw Error("empty string");if("NaN"===Ze||"Infinity"===Ze||"+Infinity"===Ze||"-Infinity"===Ze)return Ke;if("number"==typeof ve?(Et=ve,ve=!1):ve=!!ve,(Et=Et||10)<2||36<Et)throw RangeError("radix");var xt;if((xt=Ze.indexOf("-"))>0)throw Error("interior hyphen");if(0===xt)return tt(Ze.substring(1),ve,Et).neg();for(var Cn=Ie(vt(Et,8)),In=Ke,Zn=0;Zn<Ze.length;Zn+=8){var Er=Math.min(8,Ze.length-Zn),kr=parseInt(Ze.substring(Zn,Zn+Er),Et);if(Er<8){var or=Ie(vt(Et,Er));In=In.mul(or).add(Ie(kr))}else In=(In=In.mul(Cn)).add(Ie(kr))}return In.unsigned=ve,In}function ue(Ze,ve){return"number"==typeof Ze?Ie(Ze,ve):"string"==typeof Ze?tt(Ze,ve):Ge(Ze.low,Ze.high,"boolean"==typeof ve?ve:Ze.unsigned)}te.fromString=tt,te.fromValue=ue;var re=4294967296,ie=re*re,ge=ie/2,Be=Se(1<<24),Ke=Se(0);te.ZERO=Ke;var nt=Se(0,!0);te.UZERO=nt;var Tt=Se(1);te.ONE=Tt;var Yt=Se(1,!0);te.UONE=Yt;var $t=Se(-1);te.NEG_ONE=$t;var mn=Ge(-1,2147483647,!1);te.MAX_VALUE=mn;var on=Ge(-1,-1,!0);te.MAX_UNSIGNED_VALUE=on;var kn=Ge(0,-2147483648,!1);te.MIN_VALUE=kn;var Ye=te.prototype;Ye.toInt=function(){return this.unsigned?this.low>>>0:this.low},Ye.toNumber=function(){return this.unsigned?(this.high>>>0)*re+(this.low>>>0):this.high*re+(this.low>>>0)},Ye.toString=function(ve){if((ve=ve||10)<2||36<ve)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(kn)){var Et=Ie(ve),xt=this.div(Et),Cn=xt.mul(Et).sub(this);return xt.toString(ve)+Cn.toInt().toString(ve)}return"-"+this.neg().toString(ve)}for(var In=Ie(vt(ve,6),this.unsigned),Zn=this,Er="";;){var kr=Zn.div(In),ur=(Zn.sub(kr.mul(In)).toInt()>>>0).toString(ve);if((Zn=kr).isZero())return ur+Er;for(;ur.length<6;)ur="0"+ur;Er=""+ur+Er}},Ye.getHighBits=function(){return this.high},Ye.getHighBitsUnsigned=function(){return this.high>>>0},Ye.getLowBits=function(){return this.low},Ye.getLowBitsUnsigned=function(){return this.low>>>0},Ye.getNumBitsAbs=function(){if(this.isNegative())return this.eq(kn)?64:this.neg().getNumBitsAbs();for(var ve=0!=this.high?this.high:this.low,Et=31;Et>0&&0==(ve&1<<Et);Et--);return 0!=this.high?Et+33:Et+1},Ye.isZero=function(){return 0===this.high&&0===this.low},Ye.eqz=Ye.isZero,Ye.isNegative=function(){return!this.unsigned&&this.high<0},Ye.isPositive=function(){return this.unsigned||this.high>=0},Ye.isOdd=function(){return 1==(1&this.low)},Ye.isEven=function(){return 0==(1&this.low)},Ye.equals=function(ve){return xe(ve)||(ve=ue(ve)),(this.unsigned===ve.unsigned||this.high>>>31!=1||ve.high>>>31!=1)&&this.high===ve.high&&this.low===ve.low},Ye.eq=Ye.equals,Ye.notEquals=function(ve){return!this.eq(ve)},Ye.neq=Ye.notEquals,Ye.ne=Ye.notEquals,Ye.lessThan=function(ve){return this.comp(ve)<0},Ye.lt=Ye.lessThan,Ye.lessThanOrEqual=function(ve){return this.comp(ve)<=0},Ye.lte=Ye.lessThanOrEqual,Ye.le=Ye.lessThanOrEqual,Ye.greaterThan=function(ve){return this.comp(ve)>0},Ye.gt=Ye.greaterThan,Ye.greaterThanOrEqual=function(ve){return this.comp(ve)>=0},Ye.gte=Ye.greaterThanOrEqual,Ye.ge=Ye.greaterThanOrEqual,Ye.compare=function(ve){if(xe(ve)||(ve=ue(ve)),this.eq(ve))return 0;var Et=this.isNegative(),xt=ve.isNegative();return Et&&!xt?-1:!Et&&xt?1:this.unsigned?ve.high>>>0>this.high>>>0||ve.high===this.high&&ve.low>>>0>this.low>>>0?-1:1:this.sub(ve).isNegative()?-1:1},Ye.comp=Ye.compare,Ye.negate=function(){return!this.unsigned&&this.eq(kn)?kn:this.not().add(Tt)},Ye.neg=Ye.negate,Ye.add=function(ve){xe(ve)||(ve=ue(ve));var ur=0,ks=0,lr=0,Zr=0;return lr+=(Zr+=(65535&this.low)+(65535&ve.low))>>>16,ks+=(lr+=(this.low>>>16)+(ve.low>>>16))>>>16,ur+=(ks+=(65535&this.high)+(65535&ve.high))>>>16,ur+=(this.high>>>16)+(ve.high>>>16),Ge((lr&=65535)<<16|(Zr&=65535),(ur&=65535)<<16|(ks&=65535),this.unsigned)},Ye.subtract=function(ve){return xe(ve)||(ve=ue(ve)),this.add(ve.neg())},Ye.sub=Ye.subtract,Ye.multiply=function(ve){if(this.isZero())return Ke;if(xe(ve)||(ve=ue(ve)),Ve)return Ge(Ve.mul(this.low,this.high,ve.low,ve.high),Ve.get_high(),this.unsigned);if(ve.isZero())return Ke;if(this.eq(kn))return ve.isOdd()?kn:Ke;if(ve.eq(kn))return this.isOdd()?kn:Ke;if(this.isNegative())return ve.isNegative()?this.neg().mul(ve.neg()):this.neg().mul(ve).neg();if(ve.isNegative())return this.mul(ve.neg()).neg();if(this.lt(Be)&&ve.lt(Be))return Ie(this.toNumber()*ve.toNumber(),this.unsigned);var Cn=65535&this.high,In=this.low>>>16,Zn=65535&this.low,kr=65535&ve.high,or=ve.low>>>16,ur=65535&ve.low,ks=0,lr=0,Zr=0,xr=0;return Zr+=(xr+=Zn*ur)>>>16,lr+=(Zr+=In*ur)>>>16,Zr&=65535,lr+=(Zr+=Zn*or)>>>16,ks+=(lr+=Cn*ur)>>>16,lr&=65535,ks+=(lr+=In*or)>>>16,lr&=65535,ks+=(lr+=Zn*kr)>>>16,ks+=(this.high>>>16)*ur+Cn*or+In*kr+Zn*(ve.high>>>16),Ge((Zr&=65535)<<16|(xr&=65535),(ks&=65535)<<16|(lr&=65535),this.unsigned)},Ye.mul=Ye.multiply,Ye.divide=function(ve){if(xe(ve)||(ve=ue(ve)),ve.isZero())throw Error("division by zero");var xt,Cn,In;if(Ve)return this.unsigned||-2147483648!==this.high||-1!==ve.low||-1!==ve.high?Ge((this.unsigned?Ve.div_u:Ve.div_s)(this.low,this.high,ve.low,ve.high),Ve.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?nt:Ke;if(this.unsigned){if(ve.unsigned||(ve=ve.toUnsigned()),ve.gt(this))return nt;if(ve.gt(this.shru(1)))return Yt;In=nt}else{if(this.eq(kn))return ve.eq(Tt)||ve.eq($t)?kn:ve.eq(kn)?Tt:(xt=this.shr(1).div(ve).shl(1)).eq(Ke)?ve.isNegative()?Tt:$t:(Cn=this.sub(ve.mul(xt)),In=xt.add(Cn.div(ve)));if(ve.eq(kn))return this.unsigned?nt:Ke;if(this.isNegative())return ve.isNegative()?this.neg().div(ve.neg()):this.neg().div(ve).neg();if(ve.isNegative())return this.div(ve.neg()).neg();In=Ke}for(Cn=this;Cn.gte(ve);){xt=Math.max(1,Math.floor(Cn.toNumber()/ve.toNumber()));for(var Er=Math.ceil(Math.log(xt)/Math.LN2),kr=Er<=48?1:vt(2,Er-48),or=Ie(xt),ur=or.mul(ve);ur.isNegative()||ur.gt(Cn);)ur=(or=Ie(xt-=kr,this.unsigned)).mul(ve);or.isZero()&&(or=Tt),In=In.add(or),Cn=Cn.sub(ur)}return In},Ye.div=Ye.divide,Ye.modulo=function(ve){return xe(ve)||(ve=ue(ve)),Ve?Ge((this.unsigned?Ve.rem_u:Ve.rem_s)(this.low,this.high,ve.low,ve.high),Ve.get_high(),this.unsigned):this.sub(this.div(ve).mul(ve))},Ye.mod=Ye.modulo,Ye.rem=Ye.modulo,Ye.not=function(){return Ge(~this.low,~this.high,this.unsigned)},Ye.and=function(ve){return xe(ve)||(ve=ue(ve)),Ge(this.low&ve.low,this.high&ve.high,this.unsigned)},Ye.or=function(ve){return xe(ve)||(ve=ue(ve)),Ge(this.low|ve.low,this.high|ve.high,this.unsigned)},Ye.xor=function(ve){return xe(ve)||(ve=ue(ve)),Ge(this.low^ve.low,this.high^ve.high,this.unsigned)},Ye.shiftLeft=function(ve){return xe(ve)&&(ve=ve.toInt()),0==(ve&=63)?this:ve<32?Ge(this.low<<ve,this.high<<ve|this.low>>>32-ve,this.unsigned):Ge(0,this.low<<ve-32,this.unsigned)},Ye.shl=Ye.shiftLeft,Ye.shiftRight=function(ve){return xe(ve)&&(ve=ve.toInt()),0==(ve&=63)?this:ve<32?Ge(this.low>>>ve|this.high<<32-ve,this.high>>ve,this.unsigned):Ge(this.high>>ve-32,this.high>=0?0:-1,this.unsigned)},Ye.shr=Ye.shiftRight,Ye.shiftRightUnsigned=function(ve){if(xe(ve)&&(ve=ve.toInt()),0==(ve&=63))return this;var Et=this.high;return ve<32?Ge(this.low>>>ve|Et<<32-ve,Et>>>ve,this.unsigned):Ge(32===ve?Et:Et>>>ve-32,0,this.unsigned)},Ye.shru=Ye.shiftRightUnsigned,Ye.shr_u=Ye.shiftRightUnsigned,Ye.toSigned=function(){return this.unsigned?Ge(this.low,this.high,!1):this},Ye.toUnsigned=function(){return this.unsigned?this:Ge(this.low,this.high,!0)},Ye.toBytes=function(ve){return ve?this.toBytesLE():this.toBytesBE()},Ye.toBytesLE=function(){var ve=this.high,Et=this.low;return[255&Et,Et>>>8&255,Et>>>16&255,Et>>>24,255&ve,ve>>>8&255,ve>>>16&255,ve>>>24]},Ye.toBytesBE=function(){var ve=this.high,Et=this.low;return[ve>>>24,ve>>>16&255,ve>>>8&255,255&ve,Et>>>24,Et>>>16&255,Et>>>8&255,255&Et]},te.fromBytes=function(ve,Et,xt){return xt?te.fromBytesLE(ve,Et):te.fromBytesBE(ve,Et)},te.fromBytesLE=function(ve,Et){return new te(ve[0]|ve[1]<<8|ve[2]<<16|ve[3]<<24,ve[4]|ve[5]<<8|ve[6]<<16|ve[7]<<24,Et)},te.fromBytesBE=function(ve,Et){return new te(ve[4]<<24|ve[5]<<16|ve[6]<<8|ve[7],ve[0]<<24|ve[1]<<16|ve[2]<<8|ve[3],Et)}},56:(be,Ve,te)=>{"use strict";te.r(Ve),te.d(Ve,{ClassificationCriterion:()=>Ig,ColumnTransformer:()=>$C,DecisionTree:()=>sI,DecisionTreeBase:()=>Sb,DecisionTreeClassifier:()=>OD,DecisionTreeRegressor:()=>FD,DummyClassifier:()=>kO,DummyRegressor:()=>VM,ElasticNet:()=>Ci,GaussianNB:()=>ED,KFold:()=>iI,KMeans:()=>LC,KNeighborsClassifier:()=>ID,KNeighborsRegressor:()=>JC,LabelEncoder:()=>MC,LassoRegression:()=>Vl,LinearRegression:()=>Td,LinearSVC:()=>_D,LinearSVR:()=>TD,LogisticRegression:()=>Ad,MaxAbsScaler:()=>yD,MinMaxScaler:()=>ud,Normalizer:()=>DC,OneHotEncoder:()=>Mu,OrdinalEncoder:()=>xD,Pipeline:()=>ld,RegressionCriterion:()=>_g,RidgeRegression:()=>ao,RobustScaler:()=>FC,Serialize:()=>Wn,SimpleImputer:()=>kC,Splitter:()=>rI,StandardScaler:()=>vD,VotingClassifier:()=>yb,VotingRegressor:()=>vb,crossValScore:()=>zD,dataUrls:()=>BC,fromJSON:()=>Mn,fromObject:()=>zl,getBackend:()=>Ie,makeLowRankMatrix:()=>aI,makePipeline:()=>RC,makeRegression:()=>LD,makeVotingClassifier:()=>zC,makeVotingRegressor:()=>PC,metrics:()=>xe,setBackend:()=>Se,trainTestSplit:()=>PD});var xe={};te.r(xe),te.d(xe,{accuracyScore:()=>no,confusionMatrix:()=>Ga,hingeLoss:()=>zo,huberLoss:()=>Kg,logLoss:()=>Wa,meanAbsoluteError:()=>Bl,meanSquaredError:()=>Pl,meanSquaredLogError:()=>Gs,precisionScore:()=>Fe,r2Score:()=>Tu,recallScore:()=>Hg,rocAucScore:()=>Pe,zeroOneLoss:()=>Au});var Re=te(5861);let Ne=null;function Se(o){Ne=o}function Ie(){if(null===Ne)throw Error("\n============================\nHowdy \u{1f44b}\u{1f44b}. Looks like you are running scikit but you haven't set a Tensorflow backend. \nTo do so, simply import (or require) your tensorflow library, and call setBackend like so,\n\nimport * as tf from '@tensorflow/tfjs'\nimport * as sk from 'scikitjs'\nsk.setBackend(tf)\n\nThat will let scikit know you wish to use a tensorflow library to perform your calculations.\n============================\n    ");return Ne}function ue(o,u){if(!o)throw new Error(u)}function me(o,u){let l=o;if(ie(o))return"string"===u?[]:[o.length];if(!Array.isArray(o))return[];const f=[];for(;Array.isArray(l)||ie(l)&&"string"!==u;)f.push(l.length),l=l[0];return Array.isArray(o)&&Y(o,f,[]),f}function Y(o,u,l){if(l=l||[],!Array.isArray(o)&&!ie(o))return void ue(0===u.length,`Element arr[${l.join("][")}] is a primitive, but should be an array/TypedArray of ${u[0]} elements`);ue(u.length>0,`Element arr[${l.join("][")}] should be a primitive, but is an array of ${o.length} elements`),ue(o.length===u[0],`Element arr[${l.join("][")}] should have ${u[0]} elements, but has ${o.length} elements`);const f=u.slice(1);for(let h=0;h<o.length;++h)Y(o[h],f,l.concat(h))}function re(o){return Array.isArray(o)?re(o[0]):o instanceof Float32Array?"float32":o instanceof Int32Array||o instanceof Uint8Array?"int32":function tt(o){return"number"==typeof o}(o)?"float32":function Ge(o){return"string"==typeof o||o instanceof String}(o)?"string":function vt(o){return"boolean"==typeof o}(o)?"bool":null}function ie(o){return o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array}function Ke(o){return o instanceof Ie().Tensor}function nt(o){return"object"==typeof o&&!(!o||!o.iloc||o.applyMap)}function Tt(o){return"object"==typeof o&&!!(o&&o.iloc&&o.applyMap)}function Yt(o){return!!nt(o)||(Ke(o)?1===o.rank:function ge(o){const u=me(o),l=re(o);return 1===u.length&&null!==l}(o))}function $t(o){return!!Tt(o)||(Ke(o)?2===o.rank:function Be(o){const u=me(o),l=re(o);return 2===u.length&&null!==l}(o))}function Ye(o,u){let l=Ie();if(nt(o))return u?o.tensor.asType(u):o.tensor;if(Ke(o)){if(1===o.shape.length)return u&&o.dtype!=u?o.asType(u):o;throw new Error("ParamError: if data is a Tensor it must be a Tensor1D. If you really meant to reshape this tensor than use tf.reshape")}return u?l.tensor1d(o,u):l.tensor1d(o)}function Ze(o,u){const l=Ye(o,u);if("string"===l.dtype)throw new Error("ParamError: data has string dtype, can't convert to numeric Tensor");return l}function ve(o,u){let l=Ie();if(Tt(o))return u?o.tensor.asType(u):o.tensor;if(Ke(o)){if(2===o.shape.length)return u&&o.dtype!=u?o.asType(u):o;throw new Error("ParamError: if data is a Tensor it must be a Tensor2D. If you really meant to reshape this tensor than use tf.reshape")}if(Array.isArray(o)&&ie(o[0])){const f=me(o),h=o.map(p=>Array.from(p));return u?l.tensor2d(h,f,u):l.tensor2d(h,f)}return u?l.tensor2d(o,void 0,u):l.tensor2d(o,void 0)}function xt(o,u){const l=ve(o,u);if("string"===l.dtype)throw new Error("ParamError: data has string dtype, can't convert to numeric Tensor");return l}function Cn(o,u){const l=function Et(o,u){try{return Ye(o,u)}catch(l){try{return ve(o,u)}catch(f){throw new Error('ParamError: Can"t convert data into 1D or 2D tensor')}}}(o,u);if("string"===l.dtype)throw new Error("ParamError: data has string dtype, can't convert to numeric Tensor");return l}function or(o){return Tt(o)?o.values:Ke(o)?o.arraySync():o}function ur(o){return nt(o)?o.values:Ke(o)?o.arraySync():o}function lr(o){return ue(function mn(o){return Yt(o)||$t(o)}(o),"X isn't a Scikit2D or Scikit1D object"),Ke(o)?o.shape[0]:Tt(o)||nt(o)?o.size:o.length}function Zr(o,u,l){let f=Ie(),h=new Map,p=[],b=f.randomUniform([u],0,o,"float32",l).dataSync();for(let w=0;w<b.length;w++){b[w]=b[w]*(o-w)/o;let N=Math.floor(b[w]),S=o-w-1;void 0===h.get(N)&&h.set(N,N),void 0===h.get(S)&&h.set(S,S);let x=h.get(S);h.set(S,h.get(N)),h.set(N,x),p.push(h.get(S))}return p}var hf=te(836),_u=te.n(hf);function Ms(o,u){ue(Yt(o),"Labels can't be converted to a 1D Tensor"),ue(Yt(u),"Predictions can't be converted to a 1D Tensor");let l=Ze(o),f=Ze(u);return ue(l.size>0,"Must have 1 label or more"),ue(f.size>0,"Must have 1 prediction or more"),ue(l.size===f.size,"Not the same size arrays"),{labelsT:l,predictionsT:f}}function no(o,u){const{labelsT:l,predictionsT:f}=Ms(o,u);return l.equal(f).sum().div(l.size).dataSync()[0]}function Fe(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.metrics.precision(f,h).dataSync()[0]}function Hg(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.metrics.recall(f,h).dataSync()[0]}function Tu(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u),p=l.metrics.meanSquaredError(f,h),b=l.metrics.meanSquaredError(f,f.mean());return l.sub(1,p.div(b)).dataSync()[0]}function Bl(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.metrics.meanAbsoluteError(f,h).dataSync()[0]}function Pl(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.metrics.meanSquaredError(f,h).dataSync()[0]}function Gs(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.square(f.log1p().sub(h.log1p())).sum().div(f.size).dataSync()[0]}function zo(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.losses.hingeLoss(f,h).dataSync()[0]}function Kg(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.losses.huberLoss(f,h).dataSync()[0]}function Wa(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.losses.logLoss(f,h).dataSync()[0]}function Au(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u);return l.sub(1,no(f,h)).dataSync()[0]}function Ga(o,u){let l=Ie();const{labelsT:f,predictionsT:h}=Ms(o,u),p=_u()(f.dataSync());return l.math.confusionMatrix(f,h,p.length).arraySync()}function Pe(o,u){const{labelsT:l,predictionsT:f}=Ms(o,u);let h=l.arraySync(),p=f.arraySync();h.push(1),p.push(1);let b=0;for(let w=0;w<h.length-1;w++)b+=h[w]*p[w+1]-h[w+1]*p[w];return b-=1,Math.abs(b)/2}for(var et="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",ht="undefined"==typeof Uint8Array?[]:new Uint8Array(256),q=0;q<et.length;q++)ht[et.charCodeAt(q)]=q;const ze=["KNeighborsRegressor","LinearRegression","LassoRegression","RidgeRegression","ElasticNet","LogisticRegression","DummyRegressor","DummyClassifier","MinMaxScaler","StandardScaler","MaxAbsScaler","SimpleImputer","OneHotEncoder","LabelEncoder","OrdinalEncoder","Normalizer","Pipeline","ColumnTransformer","RobustScaler","KMeans","VotingRegressor","VotingClassifier","LinearSVC","LinearSVR","GaussianNB","DecisionTreeClassifier","DecisionTreeRegressor","ClassificationCriterion","RegressionCriterion","Splitter","DecisionTreeBase","DecisionTree"];let un="abcdefghijklmnopqrstuvwxy";function _t(o){let u="";for(let l=0;l<o;l++){let f=Math.floor(Math.random()*un.length);u+=un[f]}return u}class bn{constructor(u){De(this,"savedArtifacts"),this.savedArtifacts=u||null}save(u){var l=this;return(0,Re.Z)(function*(){u.weightData=function(o){var l,u=new Uint8Array(o),f=u.length,h="";for(l=0;l<f;l+=3)h+=et[u[l]>>2],h+=et[(3&u[l])<<4|u[l+1]>>4],h+=et[(15&u[l+1])<<2|u[l+2]>>6],h+=et[63&u[l+2]];return f%3==2?h=h.substring(0,h.length-1)+"=":f%3==1&&(h=h.substring(0,h.length-2)+"=="),h}(u.weightData);let f={};for(let h=0;h<u.modelTopology.config.layers.length;h++){let p=u.modelTopology.config.layers[h],b=_t(6);f[p.config.name]=b,p.config.name=b}for(let h=0;h<u.weightSpecs.length;h++){let p=u.weightSpecs[h];Object.keys(f).forEach(w=>{p.name.includes(w)&&(p.name=p.name.replace(w,f[w]))})}return l.savedArtifacts=u,{modelArtifactsInfo:{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:JSON.stringify(u.modelTopology).length,weightSpecsBytes:JSON.stringify(u.weightSpecs).length,weightDataBytes:u.weightData.byteLength}}})()}load(){var u=this;return(0,Re.Z)(function*(){return u.savedArtifacts.weightData=function(o){var f,p,b,w,N,u=.75*o.length,l=o.length,h=0;"="===o[o.length-1]&&(u--,"="===o[o.length-2]&&u--);var S=new ArrayBuffer(u),x=new Uint8Array(S);for(f=0;f<l;f+=4)p=ht[o.charCodeAt(f)],b=ht[o.charCodeAt(f+1)],w=ht[o.charCodeAt(f+2)],N=ht[o.charCodeAt(f+3)],x[h++]=p<<2|b>>4,x[h++]=(15&b)<<4|w>>2,x[h++]=(3&w)<<6|63&N;return S}(u.savedArtifacts.weightData),u.savedArtifacts})()}}function qs(o){return Ns.apply(this,arguments)}function Ns(){return Ns=(0,Re.Z)(function*(o,u=[]){let l=Ie();if(["number","string","undefined","boolean"].includes(typeof o))return o;if("function"==typeof o&&(console.warn(`warning: Serializing function ${o}. Not going to be able to deserialize this later.`),o.name))return o.name;if("object"==typeof o){if(null===o)return null;if(Array.isArray(o))return yield Promise.all(o.map(function(){var h=(0,Re.Z)(function*(p){return yield qs(p,u)});return function(p){return h.apply(this,arguments)}}()));if(o instanceof l.Tensor)return{name:"Tensor",value:o.arraySync()};if(o instanceof Int32Array)return{name:"Int32Array",value:Array.from(o)};if(o instanceof Float32Array)return{name:"Float32Array",value:Array.from(o)};if(o instanceof l.Sequential){let h=new bn;return yield o.save(h),{name:"Sequential",artifacts:h.savedArtifacts}}if(o.ENV&&o.AdadeltaOptimizer&&o.version)return{name:"TF",version:o.version.tfjs};let f={};for(let h of Object.keys(o))u.includes(h)||(f[h]=yield qs(o[h],u));return f}}),Ns.apply(this,arguments)}function da(o){return Aa.apply(this,arguments)}function Aa(){return Aa=(0,Re.Z)(function*(o){let u=Ie();if("object"!=typeof o)return o;if(null===o)return null;if("Tensor"===o.name)return u.tensor(o.value);if("Sequential"===o.name){let l=new bn(o.artifacts);return yield u.loadLayersModel(l)}if("Int32Array"===o.name)return new Int32Array(o.value);if("Float32Array"===o.name)return new Float32Array(o.value);if("TF"===o.name)return u;if(Array.isArray(o))return yield Promise.all(o.map(function(){var l=(0,Re.Z)(function*(f){return yield da(f)});return function(f){return l.apply(this,arguments)}}()));for(let l of Object.keys(o))o[l]=yield da(o[l]);if(ze.includes(o.name)){let h=new(0,(yield Promise.resolve().then(te.bind(te,56)))[o.name])(o);for(let p of Object.keys(o))h[p]=o[p];return h}return o}),Aa.apply(this,arguments)}function zl(o){return Eu.apply(this,arguments)}function Eu(){return(Eu=(0,Re.Z)(function*(o){try{return yield da(o)}catch(u){console.error(u)}})).apply(this,arguments)}function Mn(o){return Ea.apply(this,arguments)}function Ea(){return(Ea=(0,Re.Z)(function*(o){return yield zl(JSON.parse(o))})).apply(this,arguments)}let jr=["modelCompileArgs","modelFitArgs","denseLayerArgs"];class Wn{toObject(){var u=this;return(0,Re.Z)(function*(){return yield qs(u,jr)})()}toJSON(){var u=this;return(0,Re.Z)(function*(){return JSON.stringify(yield u.toObject())})()}}class li extends Wn{fitTransform(u){return this.fit(u).transform(u)}}class ku extends Wn{constructor(){super(...arguments),De(this,"EstimatorType","regressor")}score(u,l){return Tu(l,this.predict(u))}}class ro extends Wn{constructor(){super(...arguments),De(this,"EstimatorType","classifier")}score(u,l){const f=this.predict(u),h=Cn(l);return ue(f.shape.length===h.shape.length,"The shape of the model output doesn't match the shape of the actual y values"),$t(l)?no(h.argMax(1),f.argMax(1)):no(l,f)}}class Hs extends ku{constructor({modelFitArgs:u,modelCompileArgs:l,denseLayerArgs:f,optimizerType:h,lossType:p}){super(),De(this,"model"),De(this,"modelFitArgs"),De(this,"modelCompileArgs"),De(this,"denseLayerArgs"),De(this,"isMultiOutput"),De(this,"optimizerType"),De(this,"lossType"),this.tf=Ie(),this.model=this.tf.sequential(),this.modelFitArgs=u,this.modelCompileArgs=l,this.denseLayerArgs=f,this.isMultiOutput=!1,this.optimizerType=h,this.lossType=p}initializeModel(u,l,f=[]){this.denseLayerArgs.units=1===l.shape.length?1:l.shape[1];const h=this.tf.sequential();h.add(this.tf.layers.dense(_d({inputShape:[u.shape[1]]},this.denseLayerArgs))),h.compile(this.modelCompileArgs),(null==f?void 0:f.length)&&h.setWeights(f),this.model=h}fit(u,l){var f=this;return(0,Re.Z)(function*(){let h=xt(u),p=Cn(l);return p.shape.length>1&&(f.isMultiOutput=!0),0===f.model.layers.length&&f.initializeModel(h,p),yield f.model.fit(h,p,_d({},f.modelFitArgs)),f})()}importModel(u){let l=this.tf.tensor2d(u.coef,[u.coef.length,1],"float32"),f=this.tf.tensor1d([u.intercept],"float32");return this.initializeModel(l,f,[l,f]),this}getParams(){return{modelFitArgs:this.modelFitArgs,modelCompileArgs:this.modelCompileArgs,denseLayerArgs:this.denseLayerArgs,optimizerType:this.optimizerType,lossType:this.lossType}}setParams(u){return this.modelCompileArgs=u.modelCompileArgs,this.modelFitArgs=u.modelFitArgs,this.denseLayerArgs=u.denseLayerArgs,this}predict(u){let l=xt(u);if(0===this.model.layers.length)throw new RangeError('Need to call "fit" before "predict"');const f=this.model.predict(l);return this.isMultiOutput?f:f.reshape([-1])}get coef(){const u=this.model.getWeights();if(0===u.length)return this.tf.tensor2d([]);let l=u[0];return 1===l.shape[1]?l.reshape([l.shape[0]]):l}get intercept(){const u=this.model.getWeights();if(u.length<2)return 0;let l=u[1];return 1===l.size?l.arraySync()[0]:l}}class Td extends Hs{constructor({fitIntercept:u=!0,modelFitOptions:l}={}){let f=Ie();super({modelCompileArgs:{optimizer:f.train.adam(.1),loss:f.losses.meanSquaredError,metrics:["mse"]},modelFitArgs:_d({batchSize:32,epochs:1e3,verbose:0,callbacks:[f.callbacks.earlyStopping({monitor:"mse",patience:30})]},l),denseLayerArgs:{units:1,useBias:Boolean(u)},optimizerType:"adam",lossType:"meanSquaredError"}),this.name="LinearRegression"}}class Vl extends Hs{constructor({fitIntercept:u=!0,alpha:l=1}={}){let f=Ie();super({modelCompileArgs:{optimizer:f.train.adam(.1),loss:f.losses.meanSquaredError,metrics:["mse"]},modelFitArgs:{batchSize:32,epochs:1e3,verbose:0,callbacks:[f.callbacks.earlyStopping({monitor:"mse",patience:50})]},denseLayerArgs:{units:1,kernelRegularizer:f.regularizers.l1({l1:l}),useBias:Boolean(u)},optimizerType:"adam",lossType:"meanSquaredError"}),this.name="LassoRegression"}}class ao extends Hs{constructor({fitIntercept:u=!0,alpha:l=.01}={}){let f=Ie();super({modelCompileArgs:{optimizer:f.train.adam(.1),loss:f.losses.meanSquaredError,metrics:["mse"]},modelFitArgs:{batchSize:32,epochs:1e3,verbose:0,callbacks:[f.callbacks.earlyStopping({monitor:"mse",patience:50})]},denseLayerArgs:{units:1,kernelRegularizer:f.regularizers.l2({l2:l}),useBias:Boolean(u)},optimizerType:"adam",lossType:"meanSquaredError"}),this.name="RidgeRegression"}}class Ci extends Hs{constructor({alpha:u=1,l1Ratio:l=.5,fitIntercept:f=!0}={}){let h=Ie();super({modelCompileArgs:{optimizer:h.train.adam(.1),loss:h.losses.meanSquaredError,metrics:["mse"]},modelFitArgs:{batchSize:32,epochs:1e3,verbose:0,callbacks:[h.callbacks.earlyStopping({monitor:"mse",patience:50})]},denseLayerArgs:{units:1,kernelRegularizer:h.regularizers.l1l2({l1:u*l,l2:.5*u*(1-l)}),useBias:Boolean(f)},optimizerType:"adam",lossType:"meanSquaredError"}),this.name="ElasticNet"}}class Mu extends li{constructor({categories:u="auto",handleUnknown:l="error",drop:f}={}){super(),De(this,"categories"),De(this,"handleUnknown"),De(this,"categoriesParam"),De(this,"drop"),De(this,"nFeaturesIn"),De(this,"featureNamesIn"),De(this,"name","OneHotEncoder"),this.tf=Ie(),this.categoriesParam=u,this.categories=[],this.handleUnknown=l,this.nFeaturesIn=0,this.featureNamesIn=[],this.drop=f}classesToMapping(u){const l=new Map;return u.forEach((f,h)=>{l.set(f,h)}),l}loopOver2DArrayToSetLabels(u){for(let l=0;l<u[0].length;l++){let f=new Set;for(let p=0;p<u.length;p++)f.add(u[p][l]);let h=Array.from(f);this.categories.push(h)}}fit(u,l){const f=or(u);return"auto"===this.categoriesParam?(this.loopOver2DArrayToSetLabels(f),this):(this.categories=this.categoriesParam,this.nFeaturesIn=0===f.length?0:f[0].length||0,Tt(u)&&(this.featureNamesIn=[...u.columns]),this)}loopOver2DArrayToUseLabels(u){let l=this.categories.map(h=>this.classesToMapping(h)),f=[];for(let h=0;h<u.length;h++){let p=[];for(let b=0;b<u[0].length;b++){let w=u[h][b],N=l[b].get(w);if(void 0===N){if("error"===this.handleUnknown)throw new Error(`Unknown value ${w} encountered while transforming. Not encountered in training data`);N=-1}"first"===this.drop&&(N-=1),p.push(N)}f.push(p)}return f}convertToOneHot(u,l){return l>=2?this.tf.oneHot(u,l):1===l?(u=this.tf.where(u.equal(0),this.tf.ones(u.shape,"int32"),this.tf.zeros(u.shape,"int32"))).reshape([-1,1]):this.tf.tensor2d([])}transform(u,l){const f=or(u),h=this.loopOver2DArrayToUseLabels(f),p=this.tf.tensor2d(h,void 0,"int32");return this.tf.concat(p.unstack(1).map((b,w)=>{let N=this.categories[w].length;return this.convertToOneHot(b,"first"===this.drop?N-1:N)}),1)}inverseTransform(u){let l=this.classesToMapping(this.categories[0]);const f=u.argMax(1),h=new Map(Array.from(l,b=>b.reverse()));return f.arraySync().map(b=>void 0===h.get(b)?null:h.get(b))}}class tn extends ro{constructor({modelFitArgs:u,modelCompileArgs:l,denseLayerArgs:f,optimizerType:h,lossType:p}){super(),De(this,"model"),De(this,"modelFitArgs"),De(this,"modelCompileArgs"),De(this,"denseLayerArgs"),De(this,"optimizerType"),De(this,"lossType"),De(this,"oneHot"),De(this,"tf"),De(this,"isMultiOutput"),this.tf=Ie(),this.model=this.tf.sequential(),this.modelFitArgs=u,this.modelCompileArgs=l,this.denseLayerArgs=f,this.optimizerType=h,this.lossType=p,this.isMultiOutput=!1,this.oneHot=new Mu}initializeModelForClassification(u){let l=u.toInt();if(2===l.shape.length)return this.modelCompileArgs.loss=this.tf.losses.softmaxCrossEntropy,l;{const f=u.reshape([-1,1]),h=this.oneHot.fitTransform(f);return this.modelCompileArgs.loss=this.oneHot.categories[0].length>2?this.tf.losses.softmaxCrossEntropy:this.tf.losses.sigmoidCrossEntropy,h}}initializeModel(u,l,f=[]){this.denseLayerArgs.units=1===l.shape.length?1:l.shape[1];const h=this.tf.sequential();h.add(this.tf.layers.dense(_d({inputShape:[u.shape[1]]},this.denseLayerArgs))),h.compile(this.modelCompileArgs),(null==f?void 0:f.length)&&h.setWeights(f),this.model=h}fit(u,l){var f=this;return(0,Re.Z)(function*(){let h=xt(u),p=Cn(l);const b=f.initializeModelForClassification(p);return p.shape.length>1&&(f.isMultiOutput=!0),0===f.model.layers.length&&f.initializeModel(h,b),yield f.model.fit(h,b,_d({},f.modelFitArgs)),f})()}importModel(u){let l=this.tf.tensor2d(u.coef,[u.coef.length,1],"float32"),f=this.tf.tensor1d([u.intercept],"float32");return this.initializeModel(l,f,[l,f]),this}getParams(){return{modelFitArgs:this.modelFitArgs,modelCompileArgs:this.modelCompileArgs,denseLayerArgs:this.denseLayerArgs,optimizerType:this.optimizerType,lossType:this.lossType}}setParams(u){return this.modelCompileArgs=u.modelCompileArgs,this.modelFitArgs=u.modelFitArgs,this.denseLayerArgs=u.denseLayerArgs,this}predictProba(u){ue(this.model.layers.length>0,'Need to call "fit" before "predict"');let l=xt(u);return this.model.predict(l)}predict(u){ue(this.model.layers.length>0,'Need to call "fit" before "predict"');const l=this.predictProba(u);return this.isMultiOutput?this.tf.oneHot(l.argMax(1),l.shape[1]):this.tf.tensor1d(this.oneHot.inverseTransform(l))}get coef(){const u=this.model.getWeights();if(0===u.length)return this.tf.tensor2d([]);let l=u[0];return 1===l.shape[1]?l.reshape([l.shape[0]]):l}get intercept(){const u=this.model.getWeights();if(u.length<2)return 0;let l=u[1];return 1===l.size?l.arraySync()[0]:l}}class Ad extends tn{constructor({penalty:u="l2",C:l=1,fitIntercept:f=!0,modelFitOptions:h}={}){let p=Ie();super({modelCompileArgs:{optimizer:p.train.adam(.1),loss:p.losses.softmaxCrossEntropy,metrics:["accuracy"]},modelFitArgs:_d({batchSize:32,epochs:1e3,verbose:0,callbacks:[p.callbacks.earlyStopping({monitor:"loss",patience:50})]},h),denseLayerArgs:{units:1,useBias:Boolean(f),activation:"softmax",kernelInitializer:p.initializers.zeros(),biasInitializer:p.initializers.zeros(),kernelRegularizer:"l2"===u?p.regularizers.l2({l2:l}):"l1"===u?p.regularizers.l1({l1:l}):void 0},isClassification:!0,optimizerType:"adam",lossType:"softmaxCrossEntropy"}),this.name="LogisticRegression"}}function Xr(){return Xr=Object.assign?Object.assign.bind():function(o){for(var u=1;u<arguments.length;u++){var l=arguments[u];for(var f in l)Object.prototype.hasOwnProperty.call(l,f)&&(o[f]=l[f])}return o},Xr.apply(this,arguments)}var df={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null},yt=function(u){if(u)throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");return Object.freeze(df)};Xr(yt,df,{MATRIX_OPTIONS:["Matrix","Array"],NUMBER_OPTIONS:["number","BigNumber","Fraction"]});var He,ci,Ln=9e15,wr=1e9,ta="0123456789abcdef",kd="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",Md="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",jg={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-Ln,maxE:Ln,crypto:!1},_n=!0,Ul="[DecimalError] ",io=Ul+"Invalid argument: ",Zb=Ul+"Precision limit exceeded",Dd=Ul+"crypto unavailable",Wl="[object Decimal]",Yr=Math.floor,Mr=Math.pow,Du=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,pf=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,Rd=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,mf=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,na=1e7,ql=kd.length-1,Uo=Md.length-1,wt={toStringTag:Wl};function Vr(o){var u,l,f,h=o.length-1,p="",b=o[0];if(h>0){for(p+=b,u=1;u<h;u++)(l=7-(f=o[u]+"").length)&&(p+=Ma(l)),p+=f;(l=7-(f=(b=o[u])+"").length)&&(p+=Ma(l))}else if(0===b)return"0";for(;b%10==0;)b/=10;return p+b}function Ss(o,u,l){if(o!==~~o||o<u||o>l)throw Error(io+o)}function Wo(o,u,l,f){var h,p,b,w;for(p=o[0];p>=10;p/=10)--u;return--u<0?(u+=7,h=0):(h=Math.ceil((u+1)/7),u%=7),p=Mr(10,7-u),w=o[h]%p|0,null==f?u<3?(0==u?w=w/100|0:1==u&&(w=w/10|0),b=l<4&&99999==w||l>3&&49999==w||5e4==w||0==w):b=(l<4&&w+1==p||l>3&&w+1==p/2)&&(o[h+1]/p/100|0)==Mr(10,u-2)-1||(w==p/2||0==w)&&0==(o[h+1]/p/100|0):u<4?(0==u?w=w/1e3|0:1==u?w=w/100|0:2==u&&(w=w/10|0),b=(f||l<4)&&9999==w||!f&&l>3&&4999==w):b=((f||l<4)&&w+1==p||!f&&l>3&&w+1==p/2)&&(o[h+1]/p/1e3|0)==Mr(10,u-3)-1,b}function Go(o,u,l){for(var f,p,h=[0],b=0,w=o.length;b<w;){for(p=h.length;p--;)h[p]*=u;for(h[0]+=ta.indexOf(o.charAt(b++)),f=0;f<h.length;f++)h[f]>l-1&&(void 0===h[f+1]&&(h[f+1]=0),h[f+1]+=h[f]/l|0,h[f]%=l)}return h.reverse()}wt.absoluteValue=wt.abs=function(){var o=new this.constructor(this);return o.s<0&&(o.s=1),sn(o)},wt.ceil=function(){return sn(new this.constructor(this),this.e+1,2)},wt.clampedTo=wt.clamp=function(o,u){var f=this,h=f.constructor;if(o=new h(o),u=new h(u),!o.s||!u.s)return new h(NaN);if(o.gt(u))throw Error(io+u);return f.cmp(o)<0?o:f.cmp(u)>0?u:new h(f)},wt.comparedTo=wt.cmp=function(o){var u,l,f,h,p=this,b=p.d,w=(o=new p.constructor(o)).d,N=p.s,S=o.s;if(!b||!w)return N&&S?N!==S?N:b===w?0:!b^N<0?1:-1:NaN;if(!b[0]||!w[0])return b[0]?N:w[0]?-S:0;if(N!==S)return N;if(p.e!==o.e)return p.e>o.e^N<0?1:-1;for(u=0,l=(f=b.length)<(h=w.length)?f:h;u<l;++u)if(b[u]!==w[u])return b[u]>w[u]^N<0?1:-1;return f===h?0:f>h^N<0?1:-1},wt.cosine=wt.cos=function(){var o,u,l=this,f=l.constructor;return l.d?l.d[0]?(u=f.rounding,f.precision=(o=f.precision)+Math.max(l.e,l.sd())+7,f.rounding=1,l=function $d(o,u){var l,f,h;if(u.isZero())return u;(f=u.d.length)<32?h=(1/oo(4,l=Math.ceil(f/3))).toString():(l=16,h="2.3283064365386962890625e-10"),o.precision+=l,u=hi(o,1,u.times(h),new o(1));for(var p=l;p--;){var b=u.times(u);u=b.times(b).minus(b).times(8).plus(1)}return o.precision-=l,u}(f,yf(f,l)),f.precision=o,f.rounding=u,sn(2==ci||3==ci?l.neg():l,o,u,!0)):new f(1):new f(NaN)},wt.cubeRoot=wt.cbrt=function(){var o,u,l,f,h,p,b,w,N,S,x=this,v=x.constructor;if(!x.isFinite()||x.isZero())return new v(x);for(_n=!1,(p=x.s*Mr(x.s*x,.3333333333333333))&&Math.abs(p)!=1/0?f=new v(p.toString()):(l=Vr(x.d),(p=((o=x.e)-l.length+1)%3)&&(l+=1==p||-2==p?"0":"00"),p=Mr(l,.3333333333333333),o=Yr((o+1)/3)-(o%3==(o<0?-1:2)),(f=new v(l=p==1/0?"5e"+o:(l=p.toExponential()).slice(0,l.indexOf("e")+1)+o)).s=x.s),b=(o=v.precision)+3;;)if(S=(N=(w=f).times(w).times(w)).plus(x),f=rr(S.plus(x).times(w),S.plus(N),b+2,1),Vr(w.d).slice(0,b)===(l=Vr(f.d)).slice(0,b)){if("9999"!=(l=l.slice(b-3,b+1))&&(h||"4999"!=l)){(!+l||!+l.slice(1)&&"5"==l.charAt(0))&&(sn(f,o+1,1),u=!f.times(f).times(f).eq(x));break}if(!h&&(sn(w,o+1,0),w.times(w).times(w).eq(x))){f=w;break}b+=4,h=1}return _n=!0,sn(f,o,v.rounding,u)},wt.decimalPlaces=wt.dp=function(){var o,u=this.d,l=NaN;if(u){if(l=7*((o=u.length-1)-Yr(this.e/7)),o=u[o])for(;o%10==0;o/=10)l--;l<0&&(l=0)}return l},wt.dividedBy=wt.div=function(o){return rr(this,new this.constructor(o))},wt.dividedToIntegerBy=wt.divToInt=function(o){var l=this.constructor;return sn(rr(this,new l(o),0,1,1),l.precision,l.rounding)},wt.equals=wt.eq=function(o){return 0===this.cmp(o)},wt.floor=function(){return sn(new this.constructor(this),this.e+1,3)},wt.greaterThan=wt.gt=function(o){return this.cmp(o)>0},wt.greaterThanOrEqualTo=wt.gte=function(o){var u=this.cmp(o);return 1==u||0===u},wt.hyperbolicCosine=wt.cosh=function(){var o,u,l,f,h,p=this,b=p.constructor,w=new b(1);if(!p.isFinite())return new b(p.s?1/0:NaN);if(p.isZero())return w;f=b.rounding,b.precision=(l=b.precision)+Math.max(p.e,p.sd())+4,b.rounding=1,(h=p.d.length)<32?u=(1/oo(4,o=Math.ceil(h/3))).toString():(o=16,u="2.3283064365386962890625e-10"),p=hi(b,1,p.times(u),new b(1),!0);for(var N,S=o,x=new b(8);S--;)N=p.times(p),p=w.minus(N.times(x.minus(N.times(x))));return sn(p,b.precision=l,b.rounding=f,!0)},wt.hyperbolicSine=wt.sinh=function(){var o,u,l,f,h=this,p=h.constructor;if(!h.isFinite()||h.isZero())return new p(h);if(l=p.rounding,p.precision=(u=p.precision)+Math.max(h.e,h.sd())+4,p.rounding=1,(f=h.d.length)<3)h=hi(p,2,h,h,!0);else{o=1.4*Math.sqrt(f),h=hi(p,2,h=h.times(1/oo(5,o=o>16?16:0|o)),h,!0);for(var b,w=new p(5),N=new p(16),S=new p(20);o--;)b=h.times(h),h=h.times(w.plus(b.times(N.times(b).plus(S))))}return p.precision=u,p.rounding=l,sn(h,u,l,!0)},wt.hyperbolicTangent=wt.tanh=function(){var o,u,l=this,f=l.constructor;return l.isFinite()?l.isZero()?new f(l):(u=f.rounding,f.precision=(o=f.precision)+7,f.rounding=1,rr(l.sinh(),l.cosh(),f.precision=o,f.rounding=u)):new f(l.s)},wt.inverseCosine=wt.acos=function(){var o,u=this,l=u.constructor,f=u.abs().cmp(1),h=l.precision,p=l.rounding;return-1!==f?0===f?u.isNeg()?Zs(l,h,p):new l(0):new l(NaN):u.isZero()?Zs(l,h+4,p).times(.5):(l.precision=h+6,l.rounding=1,u=u.asin(),o=Zs(l,h+4,p).times(.5),l.precision=h,l.rounding=p,o.minus(u))},wt.inverseHyperbolicCosine=wt.acosh=function(){var o,u,l=this,f=l.constructor;return l.lte(1)?new f(l.eq(1)?0:NaN):l.isFinite()?(u=f.rounding,f.precision=(o=f.precision)+Math.max(Math.abs(l.e),l.sd())+4,f.rounding=1,_n=!1,l=l.times(l).minus(1).sqrt().plus(l),_n=!0,f.precision=o,f.rounding=u,l.ln()):new f(l)},wt.inverseHyperbolicSine=wt.asinh=function(){var o,u,l=this,f=l.constructor;return!l.isFinite()||l.isZero()?new f(l):(u=f.rounding,f.precision=(o=f.precision)+2*Math.max(Math.abs(l.e),l.sd())+6,f.rounding=1,_n=!1,l=l.times(l).plus(1).sqrt().plus(l),_n=!0,f.precision=o,f.rounding=u,l.ln())},wt.inverseHyperbolicTangent=wt.atanh=function(){var o,u,l,f,h=this,p=h.constructor;return h.isFinite()?h.e>=0?new p(h.abs().eq(1)?h.s/0:h.isZero()?h:NaN):(o=p.precision,u=p.rounding,f=h.sd(),Math.max(f,o)<2*-h.e-1?sn(new p(h),o,u,!0):(p.precision=l=f-h.e,h=rr(h.plus(1),new p(1).minus(h),l+o,1),p.precision=o+4,p.rounding=1,h=h.ln(),p.precision=o,p.rounding=u,h.times(.5))):new p(NaN)},wt.inverseSine=wt.asin=function(){var o,u,l,f,h=this,p=h.constructor;return h.isZero()?new p(h):(u=h.abs().cmp(1),l=p.precision,f=p.rounding,-1!==u?0===u?((o=Zs(p,l+4,f).times(.5)).s=h.s,o):new p(NaN):(p.precision=l+6,p.rounding=1,h=h.div(new p(1).minus(h.times(h)).sqrt().plus(1)).atan(),p.precision=l,p.rounding=f,h.times(2)))},wt.inverseTangent=wt.atan=function(){var o,u,l,f,h,p,b,w,N,S=this,x=S.constructor,v=x.precision,I=x.rounding;if(S.isFinite()){if(S.isZero())return new x(S);if(S.abs().eq(1)&&v+4<=Uo)return(b=Zs(x,v+4,I).times(.25)).s=S.s,b}else{if(!S.s)return new x(NaN);if(v+4<=Uo)return(b=Zs(x,v+4,I).times(.5)).s=S.s,b}for(x.precision=w=v+10,x.rounding=1,o=l=Math.min(28,w/7+2|0);o;--o)S=S.div(S.times(S).plus(1).sqrt().plus(1));for(_n=!1,u=Math.ceil(w/7),f=1,N=S.times(S),b=new x(S),h=S;-1!==o;)if(h=h.times(N),p=b.minus(h.div(f+=2)),h=h.times(N),void 0!==(b=p.plus(h.div(f+=2))).d[u])for(o=u;b.d[o]===p.d[o]&&o--;);return l&&(b=b.times(2<<l-1)),_n=!0,sn(b,x.precision=v,x.rounding=I,!0)},wt.isFinite=function(){return!!this.d},wt.isInteger=wt.isInt=function(){return!!this.d&&Yr(this.e/7)>this.d.length-2},wt.isNaN=function(){return!this.s},wt.isNegative=wt.isNeg=function(){return this.s<0},wt.isPositive=wt.isPos=function(){return this.s>0},wt.isZero=function(){return!!this.d&&0===this.d[0]},wt.lessThan=wt.lt=function(o){return this.cmp(o)<0},wt.lessThanOrEqualTo=wt.lte=function(o){return this.cmp(o)<1},wt.logarithm=wt.log=function(o){var u,l,f,h,p,b,w,N,S=this,x=S.constructor,v=x.precision,I=x.rounding;if(null==o)o=new x(10),u=!0;else{if(l=(o=new x(o)).d,o.s<0||!l||!l[0]||o.eq(1))return new x(NaN);u=o.eq(10)}if(l=S.d,S.s<0||!l||!l[0]||S.eq(1))return new x(l&&!l[0]?-1/0:1!=S.s?NaN:l?0:1/0);if(u)if(l.length>1)p=!0;else{for(h=l[0];h%10==0;)h/=10;p=1!==h}if(_n=!1,b=fi(S,w=v+5),f=u?Ru(x,w+10):fi(o,w),Wo((N=rr(b,f,w,1)).d,h=v,I))do{if(b=fi(S,w+=10),f=u?Ru(x,w+10):fi(o,w),N=rr(b,f,w,1),!p){+Vr(N.d).slice(h+1,h+15)+1==1e14&&(N=sn(N,v+1,0));break}}while(Wo(N.d,h+=10,I));return _n=!0,sn(N,v,I)},wt.minus=wt.sub=function(o){var u,l,f,h,p,b,w,N,S,x,v,I,_=this,A=_.constructor;if(o=new A(o),!_.d||!o.d)return _.s&&o.s?_.d?o.s=-o.s:o=new A(o.d||_.s!==o.s?_:NaN):o=new A(NaN),o;if(_.s!=o.s)return o.s=-o.s,_.plus(o);if(I=o.d,w=A.precision,N=A.rounding,!(S=_.d)[0]||!I[0]){if(I[0])o.s=-o.s;else{if(!S[0])return new A(3===N?-0:0);o=new A(_)}return _n?sn(o,w,N):o}if(l=Yr(o.e/7),x=Yr(_.e/7),S=S.slice(),p=x-l){for((v=p<0)?(u=S,p=-p,b=I.length):(u=I,l=x,b=S.length),p>(f=Math.max(Math.ceil(w/7),b)+2)&&(p=f,u.length=1),u.reverse(),f=p;f--;)u.push(0);u.reverse()}else{for((v=(f=S.length)<(b=I.length))&&(b=f),f=0;f<b;f++)if(S[f]!=I[f]){v=S[f]<I[f];break}p=0}for(v&&(u=S,S=I,I=u,o.s=-o.s),f=I.length-(b=S.length);f>0;--f)S[b++]=0;for(f=I.length;f>p;){if(S[--f]<I[f]){for(h=f;h&&0===S[--h];)S[h]=na-1;--S[h],S[f]+=na}S[f]-=I[f]}for(;0===S[--b];)S.pop();for(;0===S[0];S.shift())--l;return S[0]?(o.d=S,o.e=gf(S,l),_n?sn(o,w,N):o):new A(3===N?-0:0)},wt.modulo=wt.mod=function(o){var u,l=this,f=l.constructor;return o=new f(o),!l.d||!o.s||o.d&&!o.d[0]?new f(NaN):!o.d||l.d&&!l.d[0]?sn(new f(l),f.precision,f.rounding):(_n=!1,9==f.modulo?(u=rr(l,o.abs(),0,3,1)).s*=o.s:u=rr(l,o,0,f.modulo,1),u=u.times(o),_n=!0,l.minus(u))},wt.naturalExponential=wt.exp=function(){return Ou(this)},wt.naturalLogarithm=wt.ln=function(){return fi(this)},wt.negated=wt.neg=function(){var o=new this.constructor(this);return o.s=-o.s,sn(o)},wt.plus=wt.add=function(o){var u,l,f,h,p,b,w,N,S,x,v=this,I=v.constructor;if(o=new I(o),!v.d||!o.d)return v.s&&o.s?v.d||(o=new I(o.d||v.s===o.s?v:NaN)):o=new I(NaN),o;if(v.s!=o.s)return o.s=-o.s,v.minus(o);if(x=o.d,w=I.precision,N=I.rounding,!(S=v.d)[0]||!x[0])return x[0]||(o=new I(v)),_n?sn(o,w,N):o;if(p=Yr(v.e/7),f=Yr(o.e/7),S=S.slice(),h=p-f){for(h<0?(l=S,h=-h,b=x.length):(l=x,f=p,b=S.length),h>(b=(p=Math.ceil(w/7))>b?p+1:b+1)&&(h=b,l.length=1),l.reverse();h--;)l.push(0);l.reverse()}for((b=S.length)-(h=x.length)<0&&(h=b,l=x,x=S,S=l),u=0;h;)u=(S[--h]=S[h]+x[h]+u)/na|0,S[h]%=na;for(u&&(S.unshift(u),++f),b=S.length;0==S[--b];)S.pop();return o.d=S,o.e=gf(S,f),_n?sn(o,w,N):o},wt.precision=wt.sd=function(o){var u,l=this;if(void 0!==o&&o!==!!o&&1!==o&&0!==o)throw Error(io+o);return l.d?(u=$u(l.d),o&&l.e+1>u&&(u=l.e+1)):u=NaN,u},wt.round=function(){var o=this,u=o.constructor;return sn(new u(o),o.e+1,u.rounding)},wt.sine=wt.sin=function(){var o,u,l=this,f=l.constructor;return l.isFinite()?l.isZero()?new f(l):(u=f.rounding,f.precision=(o=f.precision)+Math.max(l.e,l.sd())+7,f.rounding=1,l=function Fd(o,u){var l,f=u.d.length;if(f<3)return u.isZero()?u:hi(o,2,u,u);l=1.4*Math.sqrt(f),u=hi(o,2,u=u.times(1/oo(5,l=l>16?16:0|l)),u);for(var h,p=new o(5),b=new o(16),w=new o(20);l--;)h=u.times(u),u=u.times(p.plus(h.times(b.times(h).minus(w))));return u}(f,yf(f,l)),f.precision=o,f.rounding=u,sn(ci>2?l.neg():l,o,u,!0)):new f(NaN)},wt.squareRoot=wt.sqrt=function(){var o,u,l,f,h,p,b=this,w=b.d,N=b.e,S=b.s,x=b.constructor;if(1!==S||!w||!w[0])return new x(!S||S<0&&(!w||w[0])?NaN:w?b:1/0);for(_n=!1,0==(S=Math.sqrt(+b))||S==1/0?(((u=Vr(w)).length+N)%2==0&&(u+="0"),S=Math.sqrt(u),N=Yr((N+1)/2)-(N<0||N%2),f=new x(u=S==1/0?"5e"+N:(u=S.toExponential()).slice(0,u.indexOf("e")+1)+N)):f=new x(S.toString()),l=(N=x.precision)+3;;)if(f=(p=f).plus(rr(b,p,l+2,1)).times(.5),Vr(p.d).slice(0,l)===(u=Vr(f.d)).slice(0,l)){if("9999"!=(u=u.slice(l-3,l+1))&&(h||"4999"!=u)){(!+u||!+u.slice(1)&&"5"==u.charAt(0))&&(sn(f,N+1,1),o=!f.times(f).eq(b));break}if(!h&&(sn(p,N+1,0),p.times(p).eq(b))){f=p;break}l+=4,h=1}return _n=!0,sn(f,N,x.rounding,o)},wt.tangent=wt.tan=function(){var o,u,l=this,f=l.constructor;return l.isFinite()?l.isZero()?new f(l):(u=f.rounding,f.precision=(o=f.precision)+10,f.rounding=1,(l=l.sin()).s=1,l=rr(l,new f(1).minus(l.times(l)).sqrt(),o+10,0),f.precision=o,f.rounding=u,sn(2==ci||4==ci?l.neg():l,o,u,!0)):new f(NaN)},wt.times=wt.mul=function(o){var u,l,f,h,p,b,w,N,S,x=this,v=x.constructor,I=x.d,_=(o=new v(o)).d;if(o.s*=x.s,!(I&&I[0]&&_&&_[0]))return new v(!o.s||I&&!I[0]&&!_||_&&!_[0]&&!I?NaN:I&&_?0*o.s:o.s/0);for(l=Yr(x.e/7)+Yr(o.e/7),(N=I.length)<(S=_.length)&&(p=I,I=_,_=p,b=N,N=S,S=b),p=[],f=b=N+S;f--;)p.push(0);for(f=S;--f>=0;){for(u=0,h=N+f;h>f;)w=p[h]+_[f]*I[h-f-1]+u,p[h--]=w%na|0,u=w/na|0;p[h]=(p[h]+u)%na|0}for(;!p[--b];)p.pop();return u?++l:p.shift(),o.d=p,o.e=gf(p,l),_n?sn(o,v.precision,v.rounding):o},wt.toBinary=function(o,u){return Lu(this,2,o,u)},wt.toDecimalPlaces=wt.toDP=function(o,u){var l=this,f=l.constructor;return l=new f(l),void 0===o?l:(Ss(o,0,wr),void 0===u?u=f.rounding:Ss(u,0,8),sn(l,o+l.e+1,u))},wt.toExponential=function(o,u){var l,f=this,h=f.constructor;return void 0===o?l=ka(f,!0):(Ss(o,0,wr),void 0===u?u=h.rounding:Ss(u,0,8),l=ka(f=sn(new h(f),o+1,u),!0,o+1)),f.isNeg()&&!f.isZero()?"-"+l:l},wt.toFixed=function(o,u){var l,f,h=this,p=h.constructor;return void 0===o?l=ka(h):(Ss(o,0,wr),void 0===u?u=p.rounding:Ss(u,0,8),l=ka(f=sn(new p(h),o+h.e+1,u),!1,o+f.e+1)),h.isNeg()&&!h.isZero()?"-"+l:l},wt.toFraction=function(o){var u,l,f,h,p,b,w,N,S,x,v,I,_=this,A=_.d,E=_.constructor;if(!A)return new E(_);if(S=l=new E(1),f=N=new E(0),p=(u=new E(f)).e=$u(A)-_.e-1,u.d[0]=Mr(10,(b=p%7)<0?7+b:b),null==o)o=p>0?u:S;else{if(!(w=new E(o)).isInt()||w.lt(S))throw Error(io+w);o=w.gt(u)?p>0?u:S:w}for(_n=!1,w=new E(Vr(A)),x=E.precision,E.precision=p=7*A.length*2;v=rr(w,u,0,1,1),1!=(h=l.plus(v.times(f))).cmp(o);)l=f,f=h,S=N.plus(v.times(h=S)),N=h,u=w.minus(v.times(h=u)),w=h;return h=rr(o.minus(l),f,0,1,1),N=N.plus(h.times(S)),l=l.plus(h.times(f)),N.s=S.s=_.s,I=rr(S,f,p,1).minus(_).abs().cmp(rr(N,l,p,1).minus(_).abs())<1?[S,f]:[N,l],E.precision=x,_n=!0,I},wt.toHexadecimal=wt.toHex=function(o,u){return Lu(this,16,o,u)},wt.toNearest=function(o,u){var l=this,f=l.constructor;if(l=new f(l),null==o){if(!l.d)return l;o=new f(1),u=f.rounding}else{if(o=new f(o),void 0===u?u=f.rounding:Ss(u,0,8),!l.d)return o.s?l:o;if(!o.d)return o.s&&(o.s=l.s),o}return o.d[0]?(_n=!1,l=rr(l,o,0,u,1).times(o),_n=!0,sn(l)):(o.s=l.s,l=o),l},wt.toNumber=function(){return+this},wt.toOctal=function(o,u){return Lu(this,8,o,u)},wt.toPower=wt.pow=function(o){var u,l,f,h,p,b,w=this,N=w.constructor,S=+(o=new N(o));if(!(w.d&&o.d&&w.d[0]&&o.d[0]))return new N(Mr(+w,S));if((w=new N(w)).eq(1))return w;if(f=N.precision,p=N.rounding,o.eq(1))return sn(w,f,p);if((u=Yr(o.e/7))>=o.d.length-1&&(l=S<0?-S:S)<=9007199254740991)return h=vf(N,w,l,f),o.s<0?new N(1).div(h):sn(h,f,p);if((b=w.s)<0){if(u<o.d.length-1)return new N(NaN);if(0==(1&o.d[u])&&(b=1),0==w.e&&1==w.d[0]&&1==w.d.length)return w.s=b,w}return(u=0!=(l=Mr(+w,S))&&isFinite(l)?new N(l+"").e:Yr(S*(Math.log("0."+Vr(w.d))/Math.LN10+w.e+1)))>N.maxE+1||u<N.minE-1?new N(u>0?b/0:0):(_n=!1,N.rounding=w.s=1,l=Math.min(12,(u+"").length),(h=Ou(o.times(fi(w,f+l)),f)).d&&Wo((h=sn(h,f+5,1)).d,f,p)&&+Vr((h=sn(Ou(o.times(fi(w,(u=f+10)+l)),u),u+5,1)).d).slice(f+1,f+15)+1==1e14&&(h=sn(h,f+1,0)),h.s=b,_n=!0,N.rounding=p,sn(h,f,p))},wt.toPrecision=function(o,u){var l,f=this,h=f.constructor;return void 0===o?l=ka(f,f.e<=h.toExpNeg||f.e>=h.toExpPos):(Ss(o,1,wr),void 0===u?u=h.rounding:Ss(u,0,8),l=ka(f=sn(new h(f),o,u),o<=f.e||f.e<=h.toExpNeg,o)),f.isNeg()&&!f.isZero()?"-"+l:l},wt.toSignificantDigits=wt.toSD=function(o,u){var f=this.constructor;return void 0===o?(o=f.precision,u=f.rounding):(Ss(o,1,wr),void 0===u?u=f.rounding:Ss(u,0,8)),sn(new f(this),o,u)},wt.toString=function(){var o=this,u=o.constructor,l=ka(o,o.e<=u.toExpNeg||o.e>=u.toExpPos);return o.isNeg()&&!o.isZero()?"-"+l:l},wt.truncated=wt.trunc=function(){return sn(new this.constructor(this),this.e+1,1)},wt.valueOf=wt.toJSON=function(){var o=this,u=o.constructor,l=ka(o,o.e<=u.toExpNeg||o.e>=u.toExpPos);return o.isNeg()?"-"+l:l};var rr=function(){function o(f,h,p){var b,w=0,N=f.length;for(f=f.slice();N--;)f[N]=(b=f[N]*h+w)%p|0,w=b/p|0;return w&&f.unshift(w),f}function u(f,h,p,b){var w,N;if(p!=b)N=p>b?1:-1;else for(w=N=0;w<p;w++)if(f[w]!=h[w]){N=f[w]>h[w]?1:-1;break}return N}function l(f,h,p,b){for(var w=0;p--;)f[p]-=w,f[p]=(w=f[p]<h[p]?1:0)*b+f[p]-h[p];for(;!f[0]&&f.length>1;)f.shift()}return function(f,h,p,b,w,N){var S,x,v,I,_,A,E,B,L,W,O,P,z,F,Z,j,X,H,Q,ne,de=f.constructor,we=f.s==h.s?1:-1,Te=f.d,ye=h.d;if(!(Te&&Te[0]&&ye&&ye[0]))return new de(f.s&&h.s&&(Te?!ye||Te[0]!=ye[0]:ye)?Te&&0==Te[0]||!ye?0*we:we/0:NaN);for(N?(_=1,x=f.e-h.e):(N=na,x=Yr(f.e/(_=7))-Yr(h.e/_)),Q=ye.length,X=Te.length,W=(L=new de(we)).d=[],v=0;ye[v]==(Te[v]||0);v++);if(ye[v]>(Te[v]||0)&&x--,null==p?(F=p=de.precision,b=de.rounding):F=w?p+(f.e-h.e)+1:p,F<0)W.push(1),A=!0;else{if(F=F/_+2|0,v=0,1==Q){for(I=0,ye=ye[0],F++;(v<X||I)&&F--;v++)W[v]=(Z=I*N+(Te[v]||0))/ye|0,I=Z%ye|0;A=I||v<X}else{for((I=N/(ye[0]+1)|0)>1&&(ye=o(ye,I,N),Te=o(Te,I,N),Q=ye.length,X=Te.length),j=Q,P=(O=Te.slice(0,Q)).length;P<Q;)O[P++]=0;(ne=ye.slice()).unshift(0),H=ye[0],ye[1]>=N/2&&++H;do{I=0,(S=u(ye,O,Q,P))<0?(z=O[0],Q!=P&&(z=z*N+(O[1]||0)),(I=z/H|0)>1?(I>=N&&(I=N-1),1==(S=u(E=o(ye,I,N),O,B=E.length,P=O.length))&&(I--,l(E,Q<B?ne:ye,B,N))):(0==I&&(S=I=1),E=ye.slice()),(B=E.length)<P&&E.unshift(0),l(O,E,P,N),-1==S&&(S=u(ye,O,Q,P=O.length))<1&&(I++,l(O,Q<P?ne:ye,P,N)),P=O.length):0===S&&(I++,O=[0]),W[v++]=I,S&&O[0]?O[P++]=Te[j]||0:(O=[Te[j]],P=1)}while((j++<X||void 0!==O[0])&&F--);A=void 0!==O[0]}W[0]||W.shift()}if(1==_)L.e=x,He=A;else{for(v=1,I=W[0];I>=10;I/=10)v++;L.e=v+x*_-1,sn(L,w?p+L.e+1:p,b,A)}return L}}();function sn(o,u,l,f){var h,p,b,w,N,S,x,v,I,_=o.constructor;e:if(null!=u){if(!(v=o.d))return o;for(h=1,w=v[0];w>=10;w/=10)h++;if((p=u-h)<0)p+=7,N=(x=v[I=0])/Mr(10,h-(b=u)-1)%10|0;else if((I=Math.ceil((p+1)/7))>=(w=v.length)){if(!f)break e;for(;w++<=I;)v.push(0);x=N=0,h=1,b=(p%=7)-7+1}else{for(x=w=v[I],h=1;w>=10;w/=10)h++;N=(b=(p%=7)-7+h)<0?0:x/Mr(10,h-b-1)%10|0}if(f=f||u<0||void 0!==v[I+1]||(b<0?x:x%Mr(10,h-b-1)),S=l<4?(N||f)&&(0==l||l==(o.s<0?3:2)):N>5||5==N&&(4==l||f||6==l&&(p>0?b>0?x/Mr(10,h-b):0:v[I-1])%10&1||l==(o.s<0?8:7)),u<1||!v[0])return v.length=0,S?(v[0]=Mr(10,(7-(u-=o.e+1)%7)%7),o.e=-u||0):v[0]=o.e=0,o;if(0==p?(v.length=I,w=1,I--):(v.length=I+1,w=Mr(10,7-p),v[I]=b>0?(x/Mr(10,h-b)%Mr(10,b)|0)*w:0),S)for(;;){if(0==I){for(p=1,b=v[0];b>=10;b/=10)p++;for(b=v[0]+=w,w=1;b>=10;b/=10)w++;p!=w&&(o.e++,v[0]==na&&(v[0]=1));break}if(v[I]+=w,v[I]!=na)break;v[I--]=0,w=1}for(p=v.length;0===v[--p];)v.pop()}return _n&&(o.e>_.maxE?(o.d=null,o.e=NaN):o.e<_.minE&&(o.e=0,o.d=[0])),o}function ka(o,u,l){if(!o.isFinite())return Zl(o);var f,h=o.e,p=Vr(o.d),b=p.length;return u?(l&&(f=l-b)>0?p=p.charAt(0)+"."+p.slice(1)+Ma(f):b>1&&(p=p.charAt(0)+"."+p.slice(1)),p=p+(o.e<0?"e":"e+")+o.e):h<0?(p="0."+Ma(-h-1)+p,l&&(f=l-b)>0&&(p+=Ma(f))):h>=b?(p+=Ma(h+1-b),l&&(f=l-h-1)>0&&(p=p+"."+Ma(f))):((f=h+1)<b&&(p=p.slice(0,f)+"."+p.slice(f)),l&&(f=l-b)>0&&(h+1===b&&(p+="."),p+=Ma(f))),p}function gf(o,u){var l=o[0];for(u*=7;l>=10;l/=10)u++;return u}function Ru(o,u,l){if(u>ql)throw _n=!0,l&&(o.precision=l),Error(Zb);return sn(new o(kd),u,1,!0)}function Zs(o,u,l){if(u>Uo)throw Error(Zb);return sn(new o(Md),u,l,!0)}function $u(o){var u=o.length-1,l=7*u+1;if(u=o[u]){for(;u%10==0;u/=10)l--;for(u=o[0];u>=10;u/=10)l++}return l}function Ma(o){for(var u="";o--;)u+="0";return u}function vf(o,u,l,f){var h,p=new o(1),b=Math.ceil(f/7+4);for(_n=!1;;){if(l%2&&bf((p=p.times(u)).d,b)&&(h=!0),0===(l=Yr(l/2))){l=p.d.length-1,h&&0===p.d[l]&&++p.d[l];break}bf((u=u.times(u)).d,b)}return _n=!0,p}function Hl(o){return 1&o.d[o.d.length-1]}function Kl(o,u,l){for(var f,h=new o(u[0]),p=0;++p<u.length;){if(!(f=new o(u[p])).s){h=f;break}h[l](f)&&(h=f)}return h}function Ou(o,u){var l,f,h,p,b,w,N,S=0,x=0,v=0,I=o.constructor,_=I.rounding,A=I.precision;if(!o.d||!o.d[0]||o.e>17)return new I(o.d?o.d[0]?o.s<0?0:1/0:1:o.s?o.s<0?0:o:NaN);for(null==u?(_n=!1,N=A):N=u,w=new I(.03125);o.e>-2;)o=o.times(w),v+=5;for(N+=f=Math.log(Mr(2,v))/Math.LN10*2+5|0,l=p=b=new I(1),I.precision=N;;){if(p=sn(p.times(o),N,1),l=l.times(++x),Vr((w=b.plus(rr(p,l,N,1))).d).slice(0,N)===Vr(b.d).slice(0,N)){for(h=v;h--;)b=sn(b.times(b),N,1);if(null!=u)return I.precision=A,b;if(!(S<3&&Wo(b.d,N-f,_,S)))return sn(b,I.precision=A,_,_n=!0);I.precision=N+=10,l=p=w=new I(1),x=0,S++}b=w}}function fi(o,u){var l,f,h,p,b,w,N,S,x,v,I,_=1,E=o,B=E.d,L=E.constructor,W=L.rounding,O=L.precision;if(E.s<0||!B||!B[0]||!E.e&&1==B[0]&&1==B.length)return new L(B&&!B[0]?-1/0:1!=E.s?NaN:B?0:E);if(null==u?(_n=!1,x=O):x=u,L.precision=x+=10,f=(l=Vr(B)).charAt(0),!(Math.abs(p=E.e)<15e14))return S=Ru(L,x+2,O).times(p+""),E=fi(new L(f+"."+l.slice(1)),x-10).plus(S),L.precision=O,null==u?sn(E,O,W,_n=!0):E;for(;f<7&&1!=f||1==f&&l.charAt(1)>3;)f=(l=Vr((E=E.times(o)).d)).charAt(0),_++;for(p=E.e,f>1?(E=new L("0."+l),p++):E=new L(f+"."+l.slice(1)),v=E,N=b=E=rr(E.minus(1),E.plus(1),x,1),I=sn(E.times(E),x,1),h=3;;){if(b=sn(b.times(I),x,1),Vr((S=N.plus(rr(b,new L(h),x,1))).d).slice(0,x)===Vr(N.d).slice(0,x)){if(N=N.times(2),0!==p&&(N=N.plus(Ru(L,x+2,O).times(p+""))),N=rr(N,new L(_),x,1),null!=u)return L.precision=O,N;if(!Wo(N.d,x-10,W,w))return sn(N,L.precision=O,W,_n=!0);L.precision=x+=10,S=b=E=rr(v.minus(1),v.plus(1),x,1),I=sn(E.times(E),x,1),h=w=1}N=S,h+=2}}function Zl(o){return String(o.s*o.s/0)}function Fu(o,u){var l,f,h;for((l=u.indexOf("."))>-1&&(u=u.replace(".","")),(f=u.search(/e/i))>0?(l<0&&(l=f),l+=+u.slice(f+1),u=u.substring(0,f)):l<0&&(l=u.length),f=0;48===u.charCodeAt(f);f++);for(h=u.length;48===u.charCodeAt(h-1);--h);if(u=u.slice(f,h)){if(h-=f,o.e=l=l-f-1,o.d=[],f=(l+1)%7,l<0&&(f+=7),f<h){for(f&&o.d.push(+u.slice(0,f)),h-=7;f<h;)o.d.push(+u.slice(f,f+=7));f=7-(u=u.slice(f)).length}else f-=h;for(;f--;)u+="0";o.d.push(+u),_n&&(o.e>o.constructor.maxE?(o.d=null,o.e=NaN):o.e<o.constructor.minE&&(o.e=0,o.d=[0]))}else o.e=0,o.d=[0];return o}function hi(o,u,l,f,h){var p,b,w,N,x=o.precision,v=Math.ceil(x/7);for(_n=!1,N=l.times(l),w=new o(f);;){if(b=rr(w.times(N),new o(u++*u++),x,1),w=h?f.plus(b):f.minus(b),f=rr(b.times(N),new o(u++*u++),x,1),void 0!==(b=w.plus(f)).d[v]){for(p=v;b.d[p]===w.d[p]&&p--;);if(-1==p)break}p=w,w=f,f=b,b=p}return _n=!0,b.d.length=v+1,b}function oo(o,u){for(var l=o;--u;)l*=o;return l}function yf(o,u){var l,f=u.s<0,h=Zs(o,o.precision,1),p=h.times(.5);if((u=u.abs()).lte(p))return ci=f?4:1,u;if((l=u.divToInt(h)).isZero())ci=f?3:2;else{if((u=u.minus(l.times(h))).lte(p))return ci=Hl(l)?f?2:3:f?4:1,u;ci=Hl(l)?f?1:4:f?3:2}return u.minus(h).abs()}function Lu(o,u,l,f){var h,p,b,w,N,S,x,v,I,_=o.constructor,A=void 0!==l;if(A?(Ss(l,1,wr),void 0===f?f=_.rounding:Ss(f,0,8)):(l=_.precision,f=_.rounding),o.isFinite()){for(A?(h=2,16==u?l=4*l-3:8==u&&(l=3*l-2)):h=u,(b=(x=ka(o)).indexOf("."))>=0&&(x=x.replace(".",""),(I=new _(1)).e=x.length-b,I.d=Go(ka(I),10,h),I.e=I.d.length),p=N=(v=Go(x,10,h)).length;0==v[--N];)v.pop();if(v[0]){if(b<0?p--:((o=new _(o)).d=v,o.e=p,v=(o=rr(o,I,l,f,0,h)).d,p=o.e,S=He),b=v[l],w=h/2,S=S||void 0!==v[l+1],S=f<4?(void 0!==b||S)&&(0===f||f===(o.s<0?3:2)):b>w||b===w&&(4===f||S||6===f&&1&v[l-1]||f===(o.s<0?8:7)),v.length=l,S)for(;++v[--l]>h-1;)v[l]=0,l||(++p,v.unshift(1));for(N=v.length;!v[N-1];--N);for(b=0,x="";b<N;b++)x+=ta.charAt(v[b]);if(A){if(N>1)if(16==u||8==u){for(b=16==u?4:3,--N;N%b;N++)x+="0";for(N=(v=Go(x,h,u)).length;!v[N-1];--N);for(b=1,x="1.";b<N;b++)x+=ta.charAt(v[b])}else x=x.charAt(0)+"."+x.slice(1);x=x+(p<0?"p":"p+")+p}else if(p<0){for(;++p;)x="0"+x;x="0."+x}else if(++p>N)for(p-=N;p--;)x+="0";else p<N&&(x=x.slice(0,p)+"."+x.slice(p))}else x=A?"0p+0":"0";x=(16==u?"0x":2==u?"0b":8==u?"0o":"")+x}else x=Zl(o);return o.s<0?"-"+x:x}function bf(o,u){if(o.length>u)return o.length=u,!0}function Ld(o){return new this(o).abs()}function Bd(o){return new this(o).acos()}function xf(o){return new this(o).acosh()}function Pd(o,u){return new this(o).plus(u)}function zd(o){return new this(o).asin()}function Vd(o){return new this(o).asinh()}function wf(o){return new this(o).atan()}function Ud(o){return new this(o).atanh()}function Wd(o,u){o=new this(o),u=new this(u);var l,f=this.precision,h=this.rounding,p=f+4;return o.s&&u.s?o.d||u.d?!u.d||o.isZero()?(l=u.s<0?Zs(this,f,h):new this(0)).s=o.s:!o.d||u.isZero()?(l=Zs(this,p,1).times(.5)).s=o.s:u.s<0?(this.precision=p,this.rounding=1,l=this.atan(rr(o,u,p,1)),u=Zs(this,p,1),this.precision=f,this.rounding=h,l=o.s<0?l.minus(u):l.plus(u)):l=this.atan(rr(o,u,p,1)):(l=Zs(this,p,1).times(u.s>0?.25:.75)).s=o.s:l=new this(NaN),l}function jl(o){return new this(o).cbrt()}function Gd(o){return sn(o=new this(o),o.e+1,2)}function Xl(o,u,l){return new this(o).clamp(u,l)}function qd(o){if(!o||"object"!=typeof o)throw Error(Ul+"Object expected");var u,l,f,h=!0===o.defaults,p=["precision",1,wr,"rounding",0,8,"toExpNeg",-Ln,0,"toExpPos",0,Ln,"maxE",0,Ln,"minE",-Ln,0,"modulo",0,9];for(u=0;u<p.length;u+=3)if(l=p[u],h&&(this[l]=jg[l]),void 0!==(f=o[l])){if(!(Yr(f)===f&&f>=p[u+1]&&f<=p[u+2]))throw Error(io+l+": "+f);this[l]=f}if(l="crypto",h&&(this[l]=jg[l]),void 0!==(f=o[l])){if(!0!==f&&!1!==f&&0!==f&&1!==f)throw Error(io+l+": "+f);if(f){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(Dd);this[l]=!0}else this[l]=!1}return this}function Yl(o){return new this(o).cos()}function Nf(o){return new this(o).cosh()}function Sf(o,u){return new this(o).div(u)}function Jl(o){return new this(o).exp()}function Hd(o){return sn(o=new this(o),o.e+1,3)}function Kd(){var o,u,l=new this(0);for(_n=!1,o=0;o<arguments.length;)if((u=new this(arguments[o++])).d)l.d&&(l=l.plus(u.times(u)));else{if(u.s)return _n=!0,new this(1/0);l=u}return _n=!0,l.sqrt()}function Cf(o){return o instanceof uo||o&&o.toStringTag===Wl||!1}function Ql(o){return new this(o).ln()}function ec(o,u){return new this(o).log(u)}function If(o){return new this(o).log(2)}function _f(o){return new this(o).log(10)}function Zd(){return Kl(this,arguments,"lt")}function Tf(){return Kl(this,arguments,"gt")}function tc(o,u){return new this(o).mod(u)}function nc(o,u){return new this(o).mul(u)}function jd(o,u){return new this(o).pow(u)}function Xd(o){var u,l,f,h,p=0,b=new this(1),w=[];if(void 0===o?o=this.precision:Ss(o,1,wr),f=Math.ceil(o/7),this.crypto)if(crypto.getRandomValues)for(u=crypto.getRandomValues(new Uint32Array(f));p<f;)(h=u[p])>=429e7?u[p]=crypto.getRandomValues(new Uint32Array(1))[0]:w[p++]=h%1e7;else{if(!crypto.randomBytes)throw Error(Dd);for(u=crypto.randomBytes(f*=4);p<f;)(h=u[p]+(u[p+1]<<8)+(u[p+2]<<16)+((127&u[p+3])<<24))>=214e7?crypto.randomBytes(4).copy(u,p):(w.push(h%1e7),p+=4);p=f/4}else for(;p<f;)w[p++]=1e7*Math.random()|0;for(o%=7,(f=w[--p])&&o&&(h=Mr(10,7-o),w[p]=(f/h|0)*h);0===w[p];p--)w.pop();if(p<0)l=0,w=[0];else{for(l=-1;0===w[0];l-=7)w.shift();for(f=1,h=w[0];h>=10;h/=10)f++;f<7&&(l-=7-f)}return b.e=l,b.d=w,b}function rc(o){return sn(o=new this(o),o.e+1,this.rounding)}function sc(o){return(o=new this(o)).d?o.d[0]?o.s:0*o.s:o.s||NaN}function ac(o){return new this(o).sin()}function Af(o){return new this(o).sinh()}function Ef(o){return new this(o).sqrt()}function kf(o,u){return new this(o).sub(u)}function Yd(){var o=0,u=arguments,l=new this(u[o]);for(_n=!1;l.s&&++o<u.length;)l=l.plus(u[o]);return _n=!0,sn(l,this.precision,this.rounding)}function ic(o){return new this(o).tan()}function oc(o){return new this(o).tanh()}function Mf(o){return sn(o=new this(o),o.e+1,1)}wt[Symbol.for("nodejs.util.inspect.custom")]=wt.toString,wt[Symbol.toStringTag]="Decimal";var uo=wt.constructor=function Bu(o){var u,l,f;function h(p){var b,w,N,S=this;if(!(S instanceof h))return new h(p);if(S.constructor=h,Cf(p))return S.s=p.s,void(_n?!p.d||p.e>h.maxE?(S.e=NaN,S.d=null):p.e<h.minE?(S.e=0,S.d=[0]):(S.e=p.e,S.d=p.d.slice()):(S.e=p.e,S.d=p.d?p.d.slice():p.d));if("number"==(N=typeof p)){if(0===p)return S.s=1/p<0?-1:1,S.e=0,void(S.d=[0]);if(p<0?(p=-p,S.s=-1):S.s=1,p===~~p&&p<1e7){for(b=0,w=p;w>=10;w/=10)b++;return void(_n?b>h.maxE?(S.e=NaN,S.d=null):b<h.minE?(S.e=0,S.d=[0]):(S.e=b,S.d=[p]):(S.e=b,S.d=[p]))}return 0*p!=0?(p||(S.s=NaN),S.e=NaN,void(S.d=null)):Fu(S,p.toString())}if("string"!==N)throw Error(io+p);return 45===(w=p.charCodeAt(0))?(p=p.slice(1),S.s=-1):(43===w&&(p=p.slice(1)),S.s=1),mf.test(p)?Fu(S,p):function Od(o,u){var l,f,h,p,b,w,N,S,x;if(u.indexOf("_")>-1){if(u=u.replace(/(\d)_(?=\d)/g,"$1"),mf.test(u))return Fu(o,u)}else if("Infinity"===u||"NaN"===u)return+u||(o.s=NaN),o.e=NaN,o.d=null,o;if(pf.test(u))l=16,u=u.toLowerCase();else if(Du.test(u))l=2;else{if(!Rd.test(u))throw Error(io+u);l=8}for((p=u.search(/p/i))>0?(N=+u.slice(p+1),u=u.substring(2,p)):u=u.slice(2),p=u.indexOf("."),f=o.constructor,(b=p>=0)&&(p=(w=(u=u.replace(".","")).length)-p,h=vf(f,new f(l),p,2*p)),p=x=(S=Go(u,l,na)).length-1;0===S[p];--p)S.pop();return p<0?new f(0*o.s):(o.e=gf(S,x),o.d=S,_n=!1,b&&(o=rr(o,h,4*w)),N&&(o=o.times(Math.abs(N)<54?Mr(2,N):uo.pow(2,N))),_n=!0,o)}(S,p)}if(h.prototype=wt,h.ROUND_UP=0,h.ROUND_DOWN=1,h.ROUND_CEIL=2,h.ROUND_FLOOR=3,h.ROUND_HALF_UP=4,h.ROUND_HALF_DOWN=5,h.ROUND_HALF_EVEN=6,h.ROUND_HALF_CEIL=7,h.ROUND_HALF_FLOOR=8,h.EUCLID=9,h.config=h.set=qd,h.clone=Bu,h.isDecimal=Cf,h.abs=Ld,h.acos=Bd,h.acosh=xf,h.add=Pd,h.asin=zd,h.asinh=Vd,h.atan=wf,h.atanh=Ud,h.atan2=Wd,h.cbrt=jl,h.ceil=Gd,h.clamp=Xl,h.cos=Yl,h.cosh=Nf,h.div=Sf,h.exp=Jl,h.floor=Hd,h.hypot=Kd,h.ln=Ql,h.log=ec,h.log10=_f,h.log2=If,h.max=Zd,h.min=Tf,h.mod=tc,h.mul=nc,h.pow=jd,h.random=Xd,h.round=rc,h.sign=sc,h.sin=ac,h.sinh=Af,h.sqrt=Ef,h.sub=kf,h.sum=Yd,h.tan=ic,h.tanh=oc,h.trunc=Mf,void 0===o&&(o={}),o&&!0!==o.defaults)for(f=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],u=0;u<f.length;)o.hasOwnProperty(l=f[u++])||(o[l]=this[l]);return h.config(o),h}(jg);kd=new uo(kd),Md=new uo(Md);const qo=uo;function ar(o){return"number"==typeof o}function Yn(o){return!(!o||"object"!=typeof o||"function"!=typeof o.constructor)&&(!0===o.isBigNumber&&"object"==typeof o.constructor.prototype&&!0===o.constructor.prototype.isBigNumber||"function"==typeof o.constructor.isDecimal&&!0===o.constructor.isDecimal(o))}function Ho(o){return o&&"object"==typeof o&&!0===Object.getPrototypeOf(o).isComplex||!1}function lo(o){return o&&"object"==typeof o&&!0===Object.getPrototypeOf(o).isFraction||!1}function Pu(o){return o&&!0===o.constructor.prototype.isUnit||!1}function Da(o){return"string"==typeof o}var nr=Array.isArray;function vn(o){return o&&!0===o.constructor.prototype.isMatrix||!1}function Ko(o){return Array.isArray(o)||vn(o)}function zu(o){return o&&o.isDenseMatrix&&!0===o.constructor.prototype.isMatrix||!1}function di(o){return o&&o.isSparseMatrix&&!0===o.constructor.prototype.isMatrix||!1}function uc(o){return o&&!0===o.constructor.prototype.isRange||!1}function Zo(o){return o&&!0===o.constructor.prototype.isIndex||!1}function Df(o){return"boolean"==typeof o}function lc(o){return o&&!0===o.constructor.prototype.isResultSet||!1}function Vu(o){return o&&!0===o.constructor.prototype.isHelp||!1}function Rf(o){return"function"==typeof o}function cc(o){return o instanceof Date}function Jd(o){return o instanceof RegExp}function fc(o){return!(!o||"object"!=typeof o||o.constructor!==Object||Ho(o)||lo(o))}function $f(o){return null===o}function Of(o){return void 0===o}function Qd(o){return o&&!0===o.isAccessorNode&&!0===o.constructor.prototype.isNode||!1}function ep(o){return o&&!0===o.isArrayNode&&!0===o.constructor.prototype.isNode||!1}function tp(o){return o&&!0===o.isAssignmentNode&&!0===o.constructor.prototype.isNode||!1}function Ff(o){return o&&!0===o.isBlockNode&&!0===o.constructor.prototype.isNode||!1}function Lf(o){return o&&!0===o.isConditionalNode&&!0===o.constructor.prototype.isNode||!1}function Bf(o){return o&&!0===o.isConstantNode&&!0===o.constructor.prototype.isNode||!1}function Pf(o){return o&&!0===o.isFunctionAssignmentNode&&!0===o.constructor.prototype.isNode||!1}function zI(o){return o&&!0===o.isFunctionNode&&!0===o.constructor.prototype.isNode||!1}function hc(o){return o&&!0===o.isIndexNode&&!0===o.constructor.prototype.isNode||!1}function dc(o){return o&&!0===o.isNode&&!0===o.constructor.prototype.isNode||!1}function zf(o){return o&&!0===o.isObjectNode&&!0===o.constructor.prototype.isNode||!1}function np(o){return o&&!0===o.isOperatorNode&&!0===o.constructor.prototype.isNode||!1}function rp(o){return o&&!0===o.isParenthesisNode&&!0===o.constructor.prototype.isNode||!1}function sp(o){return o&&!0===o.isRangeNode&&!0===o.constructor.prototype.isNode||!1}function ap(o){return o&&!0===o.isSymbolNode&&!0===o.constructor.prototype.isNode||!1}function Vf(o){return o&&!0===o.constructor.prototype.isChain||!1}function mr(o){var u=typeof o;return"object"===u?null===o?"null":Array.isArray(o)?"Array":o instanceof Date?"Date":o instanceof RegExp?"RegExp":Yn(o)?"BigNumber":Ho(o)?"Complex":lo(o)?"Fraction":vn(o)?"Matrix":Pu(o)?"Unit":Zo(o)?"Index":uc(o)?"Range":lc(o)?"ResultSet":dc(o)?o.type:Vf(o)?"Chain":Vu(o)?"Help":"Object":"function"===u?"Function":u}function hn(o){var u=typeof o;if("number"===u||"string"===u||"boolean"===u||null==o)return o;if("function"==typeof o.clone)return o.clone();if(Array.isArray(o))return o.map(function(l){return hn(l)});if(o instanceof Date)return new Date(o.valueOf());if(Yn(o))return o;if(o instanceof RegExp)throw new TypeError("Cannot clone "+o);return function Uf(o,u){var l={};for(var f in o)Qn(o,f)&&(l[f]=u(o[f]));return l}(o,hn)}function Uu(o,u){for(var l in u)Qn(u,l)&&(o[l]=u[l]);return o}function jo(o,u){var l,f,h;if(Array.isArray(o)){if(!Array.isArray(u)||o.length!==u.length)return!1;for(f=0,h=o.length;f<h;f++)if(!jo(o[f],u[f]))return!1;return!0}if("function"==typeof o)return o===u;if(o instanceof Object){if(Array.isArray(u)||!(u instanceof Object))return!1;for(l in o)if(!(l in u)||!jo(o[l],u[l]))return!1;for(l in u)if(!(l in o))return!1;return!0}return o===u}function Qn(o,u){return o&&Object.hasOwnProperty.call(o,u)}function pe(o,u,l,f){function h(p){var b=function Hf(o,u){for(var l={},f=0;f<u.length;f++){var h=u[f],p=o[h];void 0!==p&&(l[h]=p)}return l}(p,u.map(Yf));return function jf(o,u,l){var f=u.filter(p=>!function Xf(o){return o&&"?"===o[0]}(p)).every(p=>void 0!==l[p]);if(!f){var h=u.filter(p=>void 0===l[p]);throw new Error('Cannot create function "'.concat(o,'", ')+"some dependencies are missing: ".concat(h.map(p=>'"'.concat(p,'"')).join(", "),"."))}}(o,u,p),l(b)}return h.isFactory=!0,h.fn=o,h.dependencies=u.slice().sort(),f&&(h.meta=f),h}function Yf(o){return o&&"?"===o[0]?o.slice(1):o}var lp=pe("BigNumber",["?on","config"],o=>{var{on:u,config:l}=o,f=qo.clone({precision:l.precision,modulo:qo.EUCLID});return f.prototype=Object.create(f.prototype),f.prototype.type="BigNumber",f.prototype.isBigNumber=!0,f.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},f.fromJSON=function(h){return new f(h.value)},u&&u("config",function(h,p){h.precision!==p.precision&&f.config({precision:h.precision})}),f},{isClass:!0}),Ds=te(1006);function Qt(o){return"boolean"==typeof o||!!isFinite(o)&&o===Math.round(o)}Math,Math,Math,Math,Math,Math;function bc(o,u,l){var h={2:"0b",8:"0o",16:"0x"}[u],p="";if(l){if(l<1)throw new Error("size must be in greater than 0");if(!Qt(l))throw new Error("size must be an integer");if(o>2**(l-1)-1||o<-(2**(l-1)))throw new Error("Value must be in range [-2^".concat(l-1,", 2^").concat(l-1,"-1]"));if(!Qt(o))throw new Error("Value must be an integer");o<0&&(o+=2**l),p="i".concat(l)}var b="";return o<0&&(o=-o,b="-"),"".concat(b).concat(h).concat(o.toString(u)).concat(p)}function Ii(o,u){if("function"==typeof u)return u(o);if(o===1/0)return"Infinity";if(o===-1/0)return"-Infinity";if(isNaN(o))return"NaN";var f,h,l="auto";if(u&&(u.notation&&(l=u.notation),ar(u)?f=u:ar(u.precision)&&(f=u.precision),u.wordSize&&"number"!=typeof(h=u.wordSize)))throw new Error('Option "wordSize" must be a number');switch(l){case"fixed":return function qu(o,u){if(isNaN(o)||!isFinite(o))return String(o);var l=co(o),f="number"==typeof u?Ku(l,l.exponent+1+u):l,h=f.coefficients,p=f.exponent+1,b=p+(u||0);return h.length<b&&(h=h.concat(qa(b-h.length))),p<0&&(h=qa(1-p).concat(h),p=1),p<h.length&&h.splice(p,0,0===p?"0.":"."),f.sign+h.join("")}(o,f);case"exponential":return Hu(o,f);case"engineering":return function xc(o,u){if(isNaN(o)||!isFinite(o))return String(o);var f=Ku(co(o),u),h=f.exponent,p=f.coefficients,b=h%3==0?h:h<0?h-3-h%3:h-h%3;if(ar(u))for(;u>p.length||h-b+1>p.length;)p.push(0);else for(var w=Math.abs(h-b)-(p.length-1),N=0;N<w;N++)p.push(0);for(var S=Math.abs(h-b),x=1;S>0;)x++,S--;var v=p.slice(x).join(""),I=ar(u)&&v.length||v.match(/[1-9]/)?"."+v:"",_=p.slice(0,x).join("")+I+"e"+(h>=0?"+":"")+b.toString();return f.sign+_}(o,f);case"bin":return bc(o,2,h);case"oct":return bc(o,8,h);case"hex":return bc(o,16,h);case"auto":return function dp(o,u,l){if(isNaN(o)||!isFinite(o))return String(o);var f=l&&void 0!==l.lowerExp?l.lowerExp:-3,h=l&&void 0!==l.upperExp?l.upperExp:5,p=co(o),b=u?Ku(p,u):p;if(b.exponent<f||b.exponent>=h)return Hu(o,u);var w=b.coefficients,N=b.exponent;w.length<u&&(w=w.concat(qa(u-w.length))),w=w.concat(qa(N-w.length+1+(w.length<u?u-w.length:0)));var S=N>0?N:0;return S<(w=qa(-N).concat(w)).length-1&&w.splice(S+1,0,"."),b.sign+w.join("")}(o,f,u&&u).replace(/((\.\d*?)(0+))($|e)/,function(){var p=arguments[2],b=arguments[4];return"."!==p?p+b:b});default:throw new Error('Unknown notation "'+l+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function co(o){var u=String(o).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!u)throw new SyntaxError("Invalid number "+o);var l=u[1],f=u[2],h=parseFloat(u[4]||"0"),p=f.indexOf(".");h+=-1!==p?p-1:f.length-1;var b=f.replace(".","").replace(/^0*/,function(w){return h-=w.length,""}).replace(/0*$/,"").split("").map(function(w){return parseInt(w)});return 0===b.length&&(b.push(0),h++),{sign:l,coefficients:b,exponent:h}}function Hu(o,u){if(isNaN(o)||!isFinite(o))return String(o);var l=co(o),f=u?Ku(l,u):l,h=f.coefficients,p=f.exponent;h.length<u&&(h=h.concat(qa(u-h.length)));var b=h.shift();return f.sign+b+(h.length>0?"."+h.join(""):"")+"e"+(p>=0?"+":"")+p}function Ku(o,u){for(var l={sign:o.sign,coefficients:o.coefficients,exponent:o.exponent},f=l.coefficients;u<=0;)f.unshift(0),l.exponent++,u++;if(f.length>u&&f.splice(u,f.length-u)[0]>=5){var p=u-1;for(f[p]++;10===f[p];)f.pop(),0===p&&(f.unshift(0),l.exponent++,p++),f[--p]++}return l}function qa(o){for(var u=[],l=0;l<o;l++)u.push(0);return u}var Qf=Number.EPSILON||2220446049250313e-31;function Rs(o,u,l){if(null==l)return o===u;if(o===u)return!0;if(isNaN(o)||isNaN(u))return!1;if(isFinite(o)&&isFinite(u)){var f=Math.abs(o-u);return f<Qf||f<=Math.max(Math.abs(o),Math.abs(u))*l}return!1}Math,Math,Math,Math,Math;Math;var UI=pe("Complex",[],()=>(Ds.prototype.type="Complex",Ds.prototype.isComplex=!0,Ds.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},Ds.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},Ds.prototype.format=function(o){var l=this.im,f=this.re,h=Ii(this.re,o),p=Ii(this.im,o),b=ar(o)?o:o?o.precision:null;if(null!==b){var w=Math.pow(10,-b);Math.abs(f/l)<w&&(f=0),Math.abs(l/f)<w&&(l=0)}return 0===l?h:0===f?1===l?"i":-1===l?"-i":p+"i":l<0?-1===l?h+" - i":h+" - "+p.substring(1)+"i":1===l?h+" + i":h+" + "+p+"i"},Ds.fromPolar=function(o){switch(arguments.length){case 1:var u=arguments[0];if("object"==typeof u)return Ds(u);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var l=arguments[0],f=arguments[1];if(ar(l)){if(Pu(f)&&f.hasBase("ANGLE")&&(f=f.toNumber("rad")),ar(f))return new Ds({r:l,phi:f});throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},Ds.prototype.valueOf=Ds.prototype.toString,Ds.fromJSON=function(o){return new Ds(o)},Ds.compare=function(o,u){return o.re>u.re?1:o.re<u.re?-1:o.im>u.im?1:o.im<u.im?-1:0},Ds),{isClass:!0});function sh(o){var u=0,l=1,f=Object.create(null),h=Object.create(null),p=0,b=function(N){var S=h[N];if(S&&(delete f[S],delete h[N],--u,l===S)){if(!u)return p=0,void(l=1);for(;!hasOwnProperty.call(f,++l););}};return o=Math.abs(o),{hit:function(N){var S=h[N],x=++p;if(f[x]=N,h[N]=x,!S)return++u<=o?void 0:(b(N=f[l]),N);if(delete f[S],l===S)for(;!hasOwnProperty.call(f,++l););},delete:b,clear:function(){u=p=0,l=1,f=Object.create(null),h=Object.create(null)}}}function Yo(o){var{hasher:u,limit:l}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return l=null==l?Number.POSITIVE_INFINITY:l,u=null==u?JSON.stringify:u,function f(){"object"!=typeof f.cache&&(f.cache={values:new Map,lru:sh(l||Number.POSITIVE_INFINITY)});for(var h=[],p=0;p<arguments.length;p++)h[p]=arguments[p];var b=u(h);if(f.cache.values.has(b))return f.cache.lru.hit(b),f.cache.values.get(b);var w=o.apply(o,h);return f.cache.values.set(b,w),f.cache.values.delete(f.cache.lru.hit(b)),w}}Yo(function(o){return new o(1).exp()},{hasher:vp}),Yo(function(o){return new o(1).plus(new o(5).sqrt()).div(2)},{hasher:vp});var Jg=Yo(function(o){return o.acos(-1)},{hasher:vp});function vp(o){return o[0].precision}function Tp(o,u){return pe(o,["config","BigNumber"],f=>{var{config:h,BigNumber:p}=f;return"BigNumber"===h.number?new p(u):u})}Yo(function(o){return Jg(o).times(2)},{hasher:vp}),Math,Math,Math,Tp("fineStructure",.0072973525693),Tp("weakMixingAngle",.2229),Tp("efimovFactor",22.7),Tp("sackurTetrode",-1.16487052358);var _c=te(4613),sv=pe("Fraction",[],()=>(_c.prototype.type="Fraction",_c.prototype.isFraction=!0,_c.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},_c.fromJSON=function(o){return new _c(o)},_c),{isClass:!0}),Ai=pe("Matrix",[],()=>{function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator")}return o.prototype.type="Matrix",o.prototype.isMatrix=!0,o.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},o.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},o.prototype.create=function(u,l){throw new Error("Cannot invoke create on a Matrix interface")},o.prototype.subset=function(u,l,f){throw new Error("Cannot invoke subset on a Matrix interface")},o.prototype.get=function(u){throw new Error("Cannot invoke get on a Matrix interface")},o.prototype.set=function(u,l,f){throw new Error("Cannot invoke set on a Matrix interface")},o.prototype.resize=function(u,l){throw new Error("Cannot invoke resize on a Matrix interface")},o.prototype.reshape=function(u,l){throw new Error("Cannot invoke reshape on a Matrix interface")},o.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},o.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},o.prototype.map=function(u,l){throw new Error("Cannot invoke map on a Matrix interface")},o.prototype.forEach=function(u){throw new Error("Cannot invoke forEach on a Matrix interface")},o.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},o.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},o.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},o.prototype.format=function(u){throw new Error("Cannot invoke format on a Matrix interface")},o.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},o},{isClass:!0});function ov(o,u,l){var h=new(0,o.constructor)(2),p="";if(l){if(l<1)throw new Error("size must be in greater than 0");if(!Qt(l))throw new Error("size must be an integer");if(o.greaterThan(h.pow(l-1).sub(1))||o.lessThan(h.pow(l-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(l-1,", 2^").concat(l-1,"-1]"));if(!o.isInteger())throw new Error("Value must be an integer");o.lessThan(0)&&(o=o.add(h.pow(l))),p="i".concat(l)}switch(u){case 2:return"".concat(o.toBinary()).concat(p);case 8:return"".concat(o.toOctal()).concat(p);case 16:return"".concat(o.toHexadecimal()).concat(p);default:throw new Error("Base ".concat(u," not supported "))}}function aa(o,u){return void 0!==u?o.toExponential(u-1):o.toExponential()}function Bn(o,u){var l=function lv(o,u){return"number"==typeof o?Ii(o,u):Yn(o)?function po(o,u){if("function"==typeof u)return u(o);if(!o.isFinite())return o.isNaN()?"NaN":o.gt(0)?"Infinity":"-Infinity";var f,h,l="auto";if(void 0!==u&&(u.notation&&(l=u.notation),"number"==typeof u?f=u:u.precision&&(f=u.precision),u.wordSize&&"number"!=typeof(h=u.wordSize)))throw new Error('Option "wordSize" must be a number');switch(l){case"fixed":return function uv(o,u){return o.toFixed(u)}(o,f);case"exponential":return aa(o,f);case"engineering":return function eu(o,u){var l=o.e,f=l%3==0?l:l<0?l-3-l%3:l-l%3,h=o.mul(Math.pow(10,-f)),p=h.toPrecision(u);return-1!==p.indexOf("e")&&(p=h.toString()),p+"e"+(l>=0?"+":"")+f.toString()}(o,f);case"bin":return ov(o,2,h);case"oct":return ov(o,8,h);case"hex":return ov(o,16,h);case"auto":var p=u&&void 0!==u.lowerExp?u.lowerExp:-3,b=u&&void 0!==u.upperExp?u.upperExp:5;if(o.isZero())return"0";var N=o.toSignificantDigits(f),S=N.e;return(S>=p&&S<b?N.toFixed():aa(o,f)).replace(/((\.\d*?)(0+))($|e)/,function(){var x=arguments[2],v=arguments[4];return"."!==x?x+v:v});default:throw new Error('Unknown notation "'+l+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}(o,u):function mx(o){return o&&"object"==typeof o&&"number"==typeof o.s&&"number"==typeof o.n&&"number"==typeof o.d||!1}(o)?u&&"decimal"===u.fraction?o.toString():o.s*o.n+"/"+o.d:Array.isArray(o)?Ep(o,u):Da(o)?'"'+o+'"':"function"==typeof o?o.syntax?String(o.syntax):"function":o&&"object"==typeof o?"function"==typeof o.format?o.format(u):o&&o.toString(u)!=={}.toString()?o.toString(u):"{"+Object.keys(o).map(f=>'"'+f+'": '+Bn(o[f],u)).join(", ")+"}":String(o)}(o,u);return u&&"object"==typeof u&&"truncate"in u&&l.length>u.truncate?l.substring(0,u.truncate-3)+"...":l}function Ep(o,u){if(Array.isArray(o)){for(var l="[",f=o.length,h=0;h<f;h++)0!==h&&(l+=", "),l+=Ep(o[h],u);return l+"]"}return Bn(o,u)}function Dn(o,u,l){if(!(this instanceof Dn))throw new SyntaxError("Constructor must be called with the new operator");this.actual=o,this.expected=u,this.relation=l,this.message="Dimension mismatch ("+(Array.isArray(o)?"["+o.join(", ")+"]":o)+" "+(this.relation||"!=")+" "+(Array.isArray(u)?"["+u.join(", ")+"]":u)+")",this.stack=(new Error).stack}function $a(o,u,l){if(!(this instanceof $a))throw new SyntaxError("Constructor must be called with the new operator");this.index=o,arguments.length<3?(this.min=0,this.max=u):(this.min=u,this.max=l),this.message=void 0!==this.min&&this.index<this.min?"Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?"Index out of range ("+this.index+" > "+(this.max-1)+")":"Index out of range ("+this.index+")",this.stack=(new Error).stack}function On(o){for(var u=[];Array.isArray(o);)u.push(o.length),o=o[0];return u}function cv(o,u,l){var f,h=o.length;if(h!==u[l])throw new Dn(h,u[l]);if(l<u.length-1){var p=l+1;for(f=0;f<h;f++){if(!Array.isArray(o[f]))throw new Dn(u.length-1,u.length,"<");cv(o[f],u,p)}}else for(f=0;f<h;f++)if(Array.isArray(o[f]))throw new Dn(u.length+1,u.length,">")}function kp(o,u){if(0===u.length){if(Array.isArray(o))throw new Dn(o.length,0)}else cv(o,u,0)}function sr(o,u){if(!ar(o)||!Qt(o))throw new TypeError("Index must be an integer (value: "+o+")");if(o<0||"number"==typeof u&&o>=u)throw new $a(o,u)}function tu(o,u,l){if(!Array.isArray(o)||!Array.isArray(u))throw new TypeError("Array expected");if(0===u.length)throw new Error("Resizing to scalar is not supported");return u.forEach(function(h){if(!ar(h)||!Qt(h)||h<0)throw new TypeError("Invalid size, must contain positive integers (size: "+Bn(u)+")")}),Xu(o,u,0,void 0!==l?l:0),o}function Xu(o,u,l,f){var h,p,w=u[l],N=Math.min(o.length,w);if(o.length=w,l<u.length-1){var S=l+1;for(h=0;h<N;h++)p=o[h],Array.isArray(p)||(o[h]=p=[p]),Xu(p,u,S,f);for(h=N;h<w;h++)o[h]=p=[],Xu(p,u,S,f)}else{for(h=0;h<N;h++)for(;Array.isArray(o[h]);)o[h]=o[h][0];for(h=N;h<w;h++)o[h]=f}}function fv(o,u){var l=gx(o),f=o.slice(),p=o.indexOf(-1);if(o.indexOf(-1,p+1)>=0)throw new Error("More than one wildcard in sizes");if(p>=0){if(u%l!=0)throw new Error("Could not replace wildcard, since "+u+" is no multiple of "+-l);f[p]=-u/l}return f}function gx(o){return o.reduce((u,l)=>u*l,1)}function vx(o,u,l,f){var h=f||On(o);if(l)for(var p=0;p<l;p++)o=[o],h.unshift(1);for(o=yx(o,u,0);h.length<u;)h.push(1);return o}function yx(o,u,l){var f,h;if(Array.isArray(o)){var p=l+1;for(f=0,h=o.length;f<h;f++)o[f]=yx(o[f],u,p)}else for(var b=l;b<u;b++)o=[o];return o}function Hn(o){if(!Array.isArray(o))return o;var u=[];return o.forEach(function l(f){Array.isArray(f)?f.forEach(l):u.push(f)}),u}function Ju(o,u){for(var l,f=0,h=0;h<o.length;h++){var p=o[h],b=Array.isArray(p);if(0===h&&b&&(f=p.length),b&&p.length!==f)return;var w=b?Ju(p,u):u(p);if(void 0===l)l=w;else if(l!==w)return"mixed"}return l}(Dn.prototype=new RangeError).constructor=RangeError,Dn.prototype.name="DimensionError",Dn.prototype.isDimensionError=!0,($a.prototype=new RangeError).constructor=RangeError,$a.prototype.name="IndexError",$a.prototype.isIndexError=!0;var g_=pe("DenseMatrix",["Matrix"],o=>{var{Matrix:u}=o;function l(x,v){if(!(this instanceof l))throw new SyntaxError("Constructor must be called with the new operator");if(v&&!Da(v))throw new Error("Invalid datatype: "+v);if(vn(x))"DenseMatrix"===x.type?(this._data=hn(x._data),this._size=hn(x._size),this._datatype=v||x._datatype):(this._data=x.toArray(),this._size=x.size(),this._datatype=v||x._datatype);else if(x&&nr(x.data)&&nr(x.size))this._data=x.data,this._size=x.size,kp(this._data,this._size),this._datatype=v||x.datatype;else if(nr(x))this._data=S(x),this._size=On(this._data),kp(this._data,this._size),this._datatype=v;else{if(x)throw new TypeError("Unsupported type of data ("+mr(x)+")");this._data=[],this._size=[0],this._datatype=v}}function f(x,v){if(!Zo(v))throw new TypeError("Invalid index");if(v.isScalar())return x.get(v.min());var _=v.size();if(_.length!==x._size.length)throw new Dn(_.length,x._size.length);for(var A=v.min(),E=v.max(),B=0,L=x._size.length;B<L;B++)sr(A[B],x._size[B]),sr(E[B],x._size[B]);return new l(h(x._data,v,_.length,0),x._datatype)}function h(x,v,I,_){var A=_===I-1,E=v.dimension(_);return A?E.map(function(B){return sr(B,x.length),x[B]}).valueOf():E.map(function(B){return sr(B,x.length),h(x[B],v,I,_+1)}).valueOf()}function p(x,v,I,_){if(!v||!0!==v.isIndex)throw new TypeError("Invalid index");var B,A=v.size(),E=v.isScalar();if(vn(I)?(B=I.size(),I=I.valueOf()):B=On(I),E){if(0!==B.length)throw new TypeError("Scalar expected");x.set(v.min(),I,_)}else{if(A.length<x._size.length)throw new Dn(A.length,x._size.length,"<");if(B.length<A.length){for(var L=0,W=0;1===A[L]&&1===B[L];)L++;for(;1===A[L];)W++,L++;I=vx(I,A.length,W,B)}if(!jo(A,B))throw new Dn(A,B,">");N(x,v.max().map(function(F){return F+1}),_),b(x._data,v,I,A.length,0)}return x}function b(x,v,I,_,A){var E=A===_-1;v.dimension(A).forEach(E?function(L,W){sr(L),x[L]=I[W[0]]}:function(L,W){sr(L),b(x[L],v,I[W[0]],_,A+1)})}function w(x,v,I){if(0===v.length){for(var _=x._data;nr(_);)_=_[0];return _}return x._size=v.slice(0),x._data=tu(x._data,x._size,I),x}function N(x,v,I){for(var _=x._size.slice(0),A=!1;_.length<v.length;)_.push(0),A=!0;for(var E=0,B=v.length;E<B;E++)v[E]>_[E]&&(_[E]=v[E],A=!0);A&&w(x,_,I)}function S(x){for(var v=0,I=x.length;v<I;v++){var _=x[v];nr(_)?x[v]=S(_):_&&!0===_.isMatrix&&(x[v]=S(_.valueOf()))}return x}return(l.prototype=new u).createDenseMatrix=function(x,v){return new l(x,v)},l.prototype.type="DenseMatrix",l.prototype.isDenseMatrix=!0,l.prototype.getDataType=function(){return Ju(this._data,mr)},l.prototype.storage=function(){return"dense"},l.prototype.datatype=function(){return this._datatype},l.prototype.create=function(x,v){return new l(x,v)},l.prototype.subset=function(x,v,I){switch(arguments.length){case 1:return f(this,x);case 2:case 3:return p(this,x,v,I);default:throw new SyntaxError("Wrong number of arguments")}},l.prototype.get=function(x){if(!nr(x))throw new TypeError("Array expected");if(x.length!==this._size.length)throw new Dn(x.length,this._size.length);for(var v=0;v<x.length;v++)sr(x[v],this._size[v]);for(var I=this._data,_=0,A=x.length;_<A;_++){var E=x[_];sr(E,I.length),I=I[E]}return I},l.prototype.set=function(x,v,I){if(!nr(x))throw new TypeError("Array expected");if(x.length<this._size.length)throw new Dn(x.length,this._size.length,"<");var _,A,E;N(this,x.map(function(W){return W+1}),I);var L=this._data;for(_=0,A=x.length-1;_<A;_++)sr(E=x[_],L.length),L=L[E];return sr(E=x[x.length-1],L.length),L[E]=v,this},l.prototype.resize=function(x,v,I){if(!Ko(x))throw new TypeError("Array or Matrix expected");var _=x.valueOf().map(E=>Array.isArray(E)&&1===E.length?E[0]:E);return w(I?this.clone():this,_,v)},l.prototype.reshape=function(x,v){var I=v?this.clone():this;I._data=function Mp(o,u){var l=Hn(o),f=l.length;if(!Array.isArray(o)||!Array.isArray(u))throw new TypeError("Array expected");if(0===u.length)throw new Dn(0,f,"!=");var h=gx(u=fv(u,f));if(f!==h)throw new Dn(h,f,"!=");try{return function f_(o,u){for(var f,l=o,h=u.length-1;h>0;h--){var p=u[h];f=[];for(var b=l.length/p,w=0;w<b;w++)f.push(l.slice(w*p,(w+1)*p));l=f}return l}(l,u)}catch(p){throw p instanceof Dn?new Dn(h,f,"!="):p}}(I._data,x);var _=I._size.reduce((A,E)=>A*E);return I._size=fv(x,_),I},l.prototype.clone=function(){return new l({data:hn(this._data),size:hn(this._size),datatype:this._datatype})},l.prototype.size=function(){return this._size.slice(0)},l.prototype.map=function(x){var v=this,_=function E(B,L){return nr(B)?B.map(function(W,O){return E(W,L.concat(O))}):x(B,L,v)}(this._data,[]);return new l(_,void 0!==this._datatype?Ju(_,mr):void 0)},l.prototype.forEach=function(x){var v=this;!function _(A,E){nr(A)?A.forEach(function(B,L){_(B,E.concat(L))}):x(A,E,v)}(this._data,[])},l.prototype[Symbol.iterator]=function*(){yield*function*v(I,_){if(nr(I))for(var A=0;A<I.length;A++)yield*v(I[A],_.concat(A));else yield{value:I,index:_}}(this._data,[])},l.prototype.rows=function(){var x=[];if(2!==this.size().length)throw new TypeError("Rows can only be returned for a 2D matrix.");var I=this._data;for(var _ of I)x.push(new l([_],this._datatype));return x},l.prototype.columns=function(){var x=this,v=[],I=this.size();if(2!==I.length)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var _=this._data,A=function(L){var W=_.map(O=>[O[L]]);v.push(new l(W,x._datatype))},E=0;E<I[1];E++)A(E);return v},l.prototype.toArray=function(){return hn(this._data)},l.prototype.valueOf=function(){return this._data},l.prototype.format=function(x){return Bn(this._data,x)},l.prototype.toString=function(){return Bn(this._data)},l.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},l.prototype.diagonal=function(x){if(x){if(Yn(x)&&(x=x.toNumber()),!ar(x)||!Qt(x))throw new TypeError("The parameter k must be an integer number")}else x=0;for(var v=x>0?x:0,I=x<0?-x:0,E=Math.min(this._size[0]-I,this._size[1]-v),B=[],L=0;L<E;L++)B[L]=this._data[L+I][L+v];return new l({data:B,size:[E],datatype:this._datatype})},l.diagonal=function(x,v,I,_){if(!nr(x))throw new TypeError("Array expected, size parameter");if(2!==x.length)throw new Error("Only two dimensions matrix are supported");if(x=x.map(function(Z){if(Yn(Z)&&(Z=Z.toNumber()),!ar(Z)||!Qt(Z)||Z<1)throw new Error("Size values must be positive integers");return Z}),I){if(Yn(I)&&(I=I.toNumber()),!ar(I)||!Qt(I))throw new TypeError("The parameter k must be an integer number")}else I=0;var O,A=I>0?I:0,E=I<0?-I:0,B=x[0],L=x[1],W=Math.min(B-E,L-A);if(nr(v)){if(v.length!==W)throw new Error("Invalid value array length");O=function(j){return v[j]}}else if(vn(v)){var P=v.size();if(1!==P.length||P[0]!==W)throw new Error("Invalid matrix length");O=function(j){return v.get([j])}}else O=function(){return v};_||(_=Yn(O(0))?O(0).mul(0):0);var z=[];if(x.length>0){z=tu(z,x,_);for(var F=0;F<W;F++)z[F+E][F+A]=O(F)}return new l({data:z,size:[B,L]})},l.fromJSON=function(x){return new l(x)},l.prototype.swapRows=function(x,v){if(!(ar(x)&&Qt(x)&&ar(v)&&Qt(v)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return sr(x,this._size[0]),sr(v,this._size[0]),l._swapRows(x,v,this._data),this},l._swapRows=function(x,v,I){var _=I[x];I[x]=I[v],I[v]=_},l},{isClass:!0}),wx=te(1977);function Nx(o,u){if(Cx(o)&&dv(o,u))return o[u];throw"function"==typeof o[u]&&function pv(o,u){return!(null==o||"function"!=typeof o[u]||Qn(o,u)&&Object.getPrototypeOf&&u in Object.getPrototypeOf(o)||!Qn(Ix,u)&&(u in Object.prototype||u in Function.prototype))}(o,u)?new Error('Cannot access method "'+u+'" as a property'):new Error('No access to property "'+u+'"')}function dv(o,u){return!(!o||"object"!=typeof o||!Qn(Ec,u)&&(u in Object.prototype||u in Function.prototype))}function Cx(o){return"object"==typeof o&&o&&o.constructor===Object}var Ec={length:!0,name:!0},Ix={toString:!0,valueOf:!0,toLocaleString:!0};function kc(o){return!!o&&(o instanceof Map||o instanceof class mv{constructor(u){this.wrappedObject=u}keys(){return Object.keys(this.wrappedObject)}get(u){return Nx(this.wrappedObject,u)}set(u,l){return function Sx(o,u,l){if(Cx(o)&&dv(o,u))return o[u]=l,l;throw new Error('No access to property "'+u+'"')}(this.wrappedObject,u,l),this}has(u){return function XR(o,u){return u in o}(this.wrappedObject,u)}}||"function"==typeof o.set&&"function"==typeof o.get&&"function"==typeof o.keys&&"function"==typeof o.has)}var $p=function(){return $p=wx.create,wx},gv=pe("typed",["?BigNumber","?Complex","?DenseMatrix","?Fraction"],function(u){var{BigNumber:l,Complex:f,DenseMatrix:h,Fraction:p}=u,b=$p();return b.types=[{name:"number",test:ar},{name:"Complex",test:Ho},{name:"BigNumber",test:Yn},{name:"Fraction",test:lo},{name:"Unit",test:Pu},{name:"string",test:Da},{name:"Chain",test:Vf},{name:"Array",test:nr},{name:"Matrix",test:vn},{name:"DenseMatrix",test:zu},{name:"SparseMatrix",test:di},{name:"Range",test:uc},{name:"Index",test:Zo},{name:"boolean",test:Df},{name:"ResultSet",test:lc},{name:"Help",test:Vu},{name:"function",test:Rf},{name:"Date",test:cc},{name:"RegExp",test:Jd},{name:"null",test:$f},{name:"undefined",test:Of},{name:"AccessorNode",test:Qd},{name:"ArrayNode",test:ep},{name:"AssignmentNode",test:tp},{name:"BlockNode",test:Ff},{name:"ConditionalNode",test:Lf},{name:"ConstantNode",test:Bf},{name:"FunctionNode",test:zI},{name:"FunctionAssignmentNode",test:Pf},{name:"IndexNode",test:hc},{name:"Node",test:dc},{name:"ObjectNode",test:zf},{name:"OperatorNode",test:np},{name:"ParenthesisNode",test:rp},{name:"RangeNode",test:sp},{name:"SymbolNode",test:ap},{name:"Map",test:kc},{name:"Object",test:fc}],b.conversions=[{from:"number",to:"BigNumber",convert:function(N){if(l||vv(N),function pp(o){return o.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length}(N)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+N+"). Use function bignumber(x) to convert to BigNumber.");return new l(N)}},{from:"number",to:"Complex",convert:function(N){return f||Mc(N),new f(N,0)}},{from:"number",to:"string",convert:function(N){return N+""}},{from:"BigNumber",to:"Complex",convert:function(N){return f||Mc(N),new f(N.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(N){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(N){return f||Mc(N),new f(N.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(N){p||ph(N);var S=new p(N);if(S.valueOf()!==N)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+N+"). Use function fraction(x) to convert to Fraction.");return S}},{from:"string",to:"number",convert:function(N){var S=Number(N);if(isNaN(S))throw new Error('Cannot convert "'+N+'" to a number');return S}},{from:"string",to:"BigNumber",convert:function(N){l||vv(N);try{return new l(N)}catch(S){throw new Error('Cannot convert "'+N+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(N){p||ph(N);try{return new p(N)}catch(S){throw new Error('Cannot convert "'+N+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(N){f||Mc(N);try{return new f(N)}catch(S){throw new Error('Cannot convert "'+N+'" to Complex')}}},{from:"boolean",to:"number",convert:function(N){return+N}},{from:"boolean",to:"BigNumber",convert:function(N){return l||vv(N),new l(+N)}},{from:"boolean",to:"Fraction",convert:function(N){return p||ph(N),new p(+N)}},{from:"boolean",to:"string",convert:function(N){return String(N)}},{from:"Array",to:"Matrix",convert:function(N){return h||function w_(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}(),new h(N)}},{from:"Matrix",to:"Array",convert:function(N){return N.valueOf()}}],b});function vv(o){throw new Error("Cannot convert value ".concat(o," into a BigNumber: no class 'BigNumber' provided"))}function Mc(o){throw new Error("Cannot convert value ".concat(o," into a Complex number: no class 'Complex' provided"))}function ph(o){throw new Error("Cannot convert value ".concat(o," into a Fraction, no class 'Fraction' provided."))}function qt(o,u,l){return o&&"function"==typeof o.map?o.map(function(f){return qt(f,u,l)}):u(o)}var Oa="number",vo="number, number";function En(o){return Math.abs(o)}function Tx(o,u){return o+u}function Ax(o,u){return o*u}function Op(o){return-o}En.signature=Oa,Tx.signature=vo,Ax.signature=vo,Op.signature=Oa;var Lp=pe("abs",["typed"],o=>{var{typed:u}=o;return u("abs",{number:En,Complex:function(f){return f.abs()},BigNumber:function(f){return f.abs()},Fraction:function(f){return f.abs()},"Array | Matrix":function(f){return qt(f,this,!0)},Unit:function(f){return f.abs()}})});var gi="addScalar",Vp=pe(gi,["typed"],o=>{var{typed:u}=o;return u(gi,{"number, number":Tx,"Complex, Complex":function(f,h){return f.add(h)},"BigNumber, BigNumber":function(f,h){return f.plus(h)},"Fraction, Fraction":function(f,h){return f.add(h)},"Unit, Unit":function(f,h){if(null==f.value)throw new Error("Parameter x contains a unit with undefined value");if(null==h.value)throw new Error("Parameter y contains a unit with undefined value");if(!f.equalBase(h))throw new Error("Units do not match");var p=f.clone();return p.value=this(p.value,h.value),p.fixPrefix=!1,p}})}),Ev=pe("bignumber",["typed","BigNumber"],o=>{var{typed:u,BigNumber:l}=o;return u("bignumber",{"":function(){return new l(0)},number:function(h){return new l(h+"")},string:function(h){var p=h.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);if(p){var b=p[2],w=l(p[1]),N=new l(2).pow(Number(b));if(w.gt(N.sub(1)))throw new SyntaxError('String "'.concat(h,'" is out of range'));var S=new l(2).pow(Number(b)-1);return w.gte(S)?w.sub(N):w}return new l(h)},BigNumber:function(h){return h},Fraction:function(h){return new l(h.n).div(h.d).times(h.s)},null:function(h){return new l(0)},"Array | Matrix":function(h){return qt(h,this)}})});var K_=pe("conj",["typed"],o=>{var{typed:u}=o;return u("conj",{number:function(f){return f},BigNumber:function(f){return f},Complex:function(f){return f.conjugate()},"Array | Matrix":function(f){return qt(f,this)}})});function Ka(o,u,l){if(null==l)return o.eq(u);if(o.eq(u))return!0;if(o.isNaN()||u.isNaN())return!1;if(o.isFinite()&&u.isFinite()){var f=o.minus(u).abs();if(f.isZero())return!0;var h=o.constructor.max(o.abs(),u.abs());return f.lte(h.times(l))}return!1}var xh="equalScalar",X_=pe(xh,["typed","config"],o=>{var{typed:u,config:l}=o;return u(xh,{"boolean, boolean":function(h,p){return h===p},"number, number":function(h,p){return Rs(h,p,l.epsilon)},"BigNumber, BigNumber":function(h,p){return h.eq(p)||Ka(h,p,l.epsilon)},"Fraction, Fraction":function(h,p){return h.equals(p)},"Complex, Complex":function(h,p){return function h1(o,u,l){return Rs(o.re,u.re,l)&&Rs(o.im,u.im,l)}(h,p,l.epsilon)},"Unit, Unit":function(h,p){if(!h.equalBase(p))throw new Error("Cannot compare units with different base");return this(h.value,p.value)}})});pe(xh,["typed","config"],o=>{var{typed:u,config:l}=o;return u(xh,{"number, number":function(h,p){return Rs(h,p,l.epsilon)}})}),Math.pow(2,53),pe("hex",["typed","format"],o=>{var{typed:u,format:l}=o;return u("hex",{"number | BigNumber":function(h){return l(h,{notation:"hex"})},"number | BigNumber, number":function(h,p){return l(h,{notation:"hex",wordSize:p})}})});var Sh="number";function T1(o){return 0===o}function Xp(o){return Number.isNaN(o)}T1.signature=Sh,Xp.signature=Sh;var Ch=pe("isZero",["typed"],o=>{var{typed:u}=o;return u("isZero",{number:T1,BigNumber:function(f){return f.isZero()},Complex:function(f){return 0===f.re&&0===f.im},Fraction:function(f){return 1===f.d&&0===f.n},Unit:function(f){return this(f.value)},"Array | Matrix":function(f){return qt(f,this)}})});var Xv=pe("multiplyScalar",["typed"],o=>{var{typed:u}=o;return u("multiplyScalar",{"number, number":Ax,"Complex, Complex":function(f,h){return f.mul(h)},"BigNumber, BigNumber":function(f,h){return f.times(h)},"Fraction, Fraction":function(f,h){return f.mul(h)},"number | Fraction | BigNumber | Complex, Unit":function(f,h){var p=h.clone();return p.value=null===p.value?p._normalize(f):this(p.value,f),p},"Unit, number | Fraction | BigNumber | Complex":function(f,h){var p=f.clone();return p.value=null===p.value?p._normalize(h):this(p.value,h),p},"Unit, Unit":function(f,h){return f.multiply(h)}})});var w2=pe("number",["typed"],o=>{var{typed:u}=o,l=u("number",{"":function(){return 0},number:function(h){return h},string:function(h){if("NaN"===h)return NaN;var p=function Th(o){var u=o.match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/);return u?{input:o,radix:{"0b":2,"0o":8,"0x":16}[u[1]],integerPart:u[2],fractionalPart:u[3]}:null}(h);if(p)return function x2(o){for(var u=parseInt(o.integerPart,o.radix),l=0,f=0;f<o.fractionalPart.length;f++)l+=parseInt(o.fractionalPart[f],o.radix)/Math.pow(o.radix,f+1);var p=u+l;if(isNaN(p))throw new SyntaxError('String "'+o.input+'" is no valid number');return p}(p);var b=0,w=h.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);w&&(b=Number(w[2]),h=w[1]);var N=Number(h);if(isNaN(N))throw new SyntaxError('String "'+h+'" is no valid number');if(w){if(N>2**b-1)throw new SyntaxError('String "'.concat(h,'" is out of range'));N>=2**(b-1)&&(N-=2**b)}return N},BigNumber:function(h){return h.toNumber()},Fraction:function(h){return h.valueOf()},Unit:function(h){throw new Error("Second argument with valueless unit expected")},null:function(h){return 0},"Unit, string | Unit":function(h,p){return h.toNumber(p)},"Array | Matrix":function(h){return qt(h,this)}});return l.fromJSON=function(f){return parseFloat(f.value)},l});pe("oct",["typed","format"],o=>{var{typed:u,format:l}=o;return u("oct",{"number | BigNumber":function(h){return l(h,{notation:"oct"})},"number | BigNumber, number":function(h,p){return l(h,{notation:"oct",wordSize:p})}})}),te(340);Date.now();var am=pe("SparseMatrix",["typed","equalScalar","Matrix"],o=>{var{typed:u,equalScalar:l,Matrix:f}=o;function h(E,B){if(!(this instanceof h))throw new SyntaxError("Constructor must be called with the new operator");if(B&&!Da(B))throw new Error("Invalid datatype: "+B);if(vn(E))!function p(E,B,L){"SparseMatrix"===B.type?(E._values=B._values?hn(B._values):void 0,E._index=hn(B._index),E._ptr=hn(B._ptr),E._size=hn(B._size),E._datatype=L||B._datatype):b(E,B.valueOf(),L||B._datatype)}(this,E,B);else if(E&&nr(E.index)&&nr(E.ptr)&&nr(E.size))this._values=E.values,this._index=E.index,this._ptr=E.ptr,this._size=E.size,this._datatype=B||E.datatype;else if(nr(E))b(this,E,B);else{if(E)throw new TypeError("Unsupported type of data ("+mr(E)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=B}}function b(E,B,L){E._values=[],E._index=[],E._ptr=[],E._datatype=L;var W=B.length,O=0,P=l,z=0;if(Da(L)&&(P=u.find(l,[L,L])||l,z=u.convert(0,L)),W>0){var F=0;do{E._ptr.push(E._index.length);for(var Z=0;Z<W;Z++){var j=B[Z];if(nr(j)){if(0===F&&O<j.length&&(O=j.length),F<j.length){var X=j[F];P(X,z)||(E._values.push(X),E._index.push(Z))}}else 0===F&&O<1&&(O=1),P(j,z)||(E._values.push(j),E._index.push(Z))}F++}while(F<O)}E._ptr.push(E._index.length),E._size=[W,O]}function w(E,B){if(!Zo(B))throw new TypeError("Invalid index");if(B.isScalar())return E.get(B.min());var W=B.size();if(W.length!==E._size.length)throw new Dn(W.length,E._size.length);var O,P,z,F,Z=B.min(),j=B.max();for(O=0,P=E._size.length;O<P;O++)sr(Z[O],E._size[O]),sr(j[O],E._size[O]);var X=E._values,H=E._index,Q=E._ptr,ne=B.dimension(0),de=B.dimension(1),we=[],Te=[];ne.forEach(function(J,Me){Te[J]=Me[0],we[J]=!0});var ye=X?[]:void 0,ee=[],We=[];return de.forEach(function(J){for(We.push(ee.length),z=Q[J],F=Q[J+1];z<F;z++)!0===we[O=H[z]]&&(ee.push(Te[O]),ye&&ye.push(X[z]))}),We.push(ee.length),new h({values:ye,index:ee,ptr:We,size:W,datatype:E._datatype})}function N(E,B,L,W){if(!B||!0!==B.isIndex)throw new TypeError("Invalid index");var z,O=B.size(),P=B.isScalar();if(vn(L)?(z=L.size(),L=L.toArray()):z=On(L),P){if(0!==z.length)throw new TypeError("Scalar expected");E.set(B.min(),L,W)}else{if(1!==O.length&&2!==O.length)throw new Dn(O.length,E._size.length,"<");if(z.length<O.length){for(var F=0,Z=0;1===O[F]&&1===z[F];)F++;for(;1===O[F];)Z++,F++;L=vx(L,O.length,Z,z)}if(!jo(O,z))throw new Dn(O,z,">");if(1===O.length)B.dimension(0).forEach(function(Q,ne){sr(Q),E.set([Q,0],L[ne[0]],W)});else{var X=B.dimension(0),H=B.dimension(1);X.forEach(function(Q,ne){sr(Q),H.forEach(function(de,we){sr(de),E.set([Q,de],L[ne[0]][we[0]],W)})})}}return E}function S(E,B,L,W){if(L-B==0)return L;for(var O=B;O<L;O++)if(W[O]===E)return O;return B}function v(E,B,L,W,O,P,z){O.splice(E,0,W),P.splice(E,0,B);for(var F=L+1;F<z.length;F++)z[F]++}function I(E,B,L,W){var O=W||0,P=l,z=0;Da(E._datatype)&&(P=u.find(l,[E._datatype,E._datatype])||l,z=u.convert(0,E._datatype),O=u.convert(O,E._datatype));var X,H,Q,F=!P(O,z),Z=E._size[0],j=E._size[1];if(L>j){for(H=j;H<L;H++)if(E._ptr[H]=E._values.length,F)for(X=0;X<Z;X++)E._values.push(O),E._index.push(X);E._ptr[L]=E._values.length}else L<j&&(E._ptr.splice(L+1,j-L),E._values.splice(E._ptr[L],E._values.length),E._index.splice(E._ptr[L],E._index.length));if(j=L,B>Z){if(F){var ne=0;for(H=0;H<j;H++){E._ptr[H]=E._ptr[H]+ne,Q=E._ptr[H+1]+ne;var de=0;for(X=Z;X<B;X++,de++)E._values.splice(Q+de,0,O),E._index.splice(Q+de,0,X),ne++}E._ptr[j]=E._values.length}}else if(B<Z){var we=0;for(H=0;H<j;H++){E._ptr[H]=E._ptr[H]-we;var ye=E._ptr[H+1]-we;for(Q=E._ptr[H];Q<ye;Q++)(X=E._index[Q])>B-1&&(E._values.splice(Q,1),E._index.splice(Q,1),we++)}E._ptr[H]=E._values.length}return E._size[0]=B,E._size[1]=L,E}function A(E,B,L,W,O){var Z,j,P=W[0],z=W[1],F=[];for(Z=0;Z<P;Z++)for(F[Z]=[],j=0;j<z;j++)F[Z][j]=0;for(j=0;j<z;j++)for(var H=L[j+1],Q=L[j];Q<H;Q++)F[Z=B[Q]][j]=E?O?hn(E[Q]):E[Q]:1;return F}return(h.prototype=new f).createSparseMatrix=function(E,B){return new h(E,B)},h.prototype.type="SparseMatrix",h.prototype.isSparseMatrix=!0,h.prototype.getDataType=function(){return Ju(this._values,mr)},h.prototype.storage=function(){return"sparse"},h.prototype.datatype=function(){return this._datatype},h.prototype.create=function(E,B){return new h(E,B)},h.prototype.density=function(){var E=this._size[0],B=this._size[1];return 0!==E&&0!==B?this._index.length/(E*B):0},h.prototype.subset=function(E,B,L){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return w(this,E);case 2:case 3:return N(this,E,B,L);default:throw new SyntaxError("Wrong number of arguments")}},h.prototype.get=function(E){if(!nr(E))throw new TypeError("Array expected");if(E.length!==this._size.length)throw new Dn(E.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var B=E[0],L=E[1];sr(B,this._size[0]),sr(L,this._size[1]);var W=S(B,this._ptr[L],this._ptr[L+1],this._index);return W<this._ptr[L+1]&&this._index[W]===B?this._values[W]:0},h.prototype.set=function(E,B,L){if(!nr(E))throw new TypeError("Array expected");if(E.length!==this._size.length)throw new Dn(E.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var W=E[0],O=E[1],P=this._size[0],z=this._size[1],F=l,Z=0;Da(this._datatype)&&(F=u.find(l,[this._datatype,this._datatype])||l,Z=u.convert(0,this._datatype)),(W>P-1||O>z-1)&&(I(this,Math.max(W+1,P),Math.max(O+1,z),L),P=this._size[0],z=this._size[1]),sr(W,P),sr(O,z);var j=S(W,this._ptr[O],this._ptr[O+1],this._index);return j<this._ptr[O+1]&&this._index[j]===W?F(B,Z)?function x(E,B,L,W,O){L.splice(E,1),W.splice(E,1);for(var P=B+1;P<O.length;P++)O[P]--}(j,O,this._values,this._index,this._ptr):this._values[j]=B:v(j,W,O,B,this._values,this._index,this._ptr),this},h.prototype.resize=function(E,B,L){if(!Ko(E))throw new TypeError("Array or Matrix expected");var W=E.valueOf().map(P=>Array.isArray(P)&&1===P.length?P[0]:P);if(2!==W.length)throw new Error("Only two dimensions matrix are supported");return W.forEach(function(P){if(!ar(P)||!Qt(P)||P<0)throw new TypeError("Invalid size, must contain positive integers (size: "+Bn(W)+")")}),I(L?this.clone():this,W[0],W[1],B)},h.prototype.reshape=function(E,B){if(!nr(E))throw new TypeError("Array expected");if(2!==E.length)throw new Error("Sparse matrices can only be reshaped in two dimensions");E.forEach(function(J){if(!ar(J)||!Qt(J)||J<=-2||0===J)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+Bn(E)+")")});var L=this._size[0]*this._size[1];if(L!==(E=fv(E,L))[0]*E[1])throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var O=B?this.clone():this;if(this._size[0]===E[0]&&this._size[1]===E[1])return O;for(var P=[],z=0;z<O._ptr.length;z++)for(var F=0;F<O._ptr[z+1]-O._ptr[z];F++)P.push(z);for(var Z=O._values.slice(),j=O._index.slice(),X=0;X<O._index.length;X++){var ne=j[X]*O._size[1]+P[X];P[X]=ne%E[1],j[X]=Math.floor(ne/E[1])}O._values.length=0,O._index.length=0,O._ptr.length=E[1]+1,O._size=E.slice();for(var de=0;de<O._ptr.length;de++)O._ptr[de]=0;for(var we=0;we<Z.length;we++){var Te=j[we],ye=P[we],ee=Z[we];v(S(Te,O._ptr[ye],O._ptr[ye+1],O._index),Te,ye,ee,O._values,O._index,O._ptr)}return O},h.prototype.clone=function(){return new h({values:this._values?hn(this._values):void 0,index:hn(this._index),ptr:hn(this._ptr),size:hn(this._size),datatype:this._datatype})},h.prototype.size=function(){return this._size.slice(0)},h.prototype.map=function(E,B){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var L=this;return function _(E,B,L,W,O,P,z){var F=[],Z=[],j=[],X=l,H=0;Da(E._datatype)&&(X=u.find(l,[E._datatype,E._datatype])||l,H=u.convert(0,E._datatype));for(var Q=function(Le,Xe,mt){Le=P(Le,Xe,mt),X(Le,H)||(F.push(Le),Z.push(Xe))},ne=W;ne<=O;ne++){j.push(F.length);var de=E._ptr[ne],we=E._ptr[ne+1];if(z)for(var Te=de;Te<we;Te++){var ye=E._index[Te];ye>=B&&ye<=L&&Q(E._values[Te],ye-B,ne-W)}else{for(var ee={},We=de;We<we;We++)ee[E._index[We]]=E._values[We];for(var Me=B;Me<=L;Me++)Q(Me in ee?ee[Me]:0,Me-B,ne-W)}}return j.push(F.length),new h({values:F,index:Z,ptr:j,size:[L-B+1,O-W+1]})}(this,0,this._size[0]-1,0,this._size[1]-1,function(F,Z,j){return E(F,[Z,j],L)},B)},h.prototype.forEach=function(E,B){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var W=this._size[0],O=this._size[1],P=0;P<O;P++){var z=this._ptr[P],F=this._ptr[P+1];if(B)for(var Z=z;Z<F;Z++)E(this._values[Z],[this._index[Z],P],this);else{for(var X={},H=z;H<F;H++)X[this._index[H]]=this._values[H];for(var ne=0;ne<W;ne++)E(ne in X?X[ne]:0,[ne,P],this)}}},h.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var E=this._size[1],B=0;B<E;B++)for(var W=this._ptr[B+1],O=this._ptr[B];O<W;O++){var P=this._index[O];yield{value:this._values[O],index:[P,B]}}},h.prototype.toArray=function(){return A(this._values,this._index,this._ptr,this._size,!0)},h.prototype.valueOf=function(){return A(this._values,this._index,this._ptr,this._size,!1)},h.prototype.format=function(E){for(var B=this._size[0],L=this._size[1],W=this.density(),O="Sparse Matrix ["+Bn(B,E)+" x "+Bn(L,E)+"] density: "+Bn(W,E)+"\n",P=0;P<L;P++)for(var F=this._ptr[P+1],Z=this._ptr[P];Z<F;Z++)O+="\n    ("+Bn(this._index[Z],E)+", "+Bn(P,E)+") ==> "+(this._values?Bn(this._values[Z],E):"X");return O},h.prototype.toString=function(){return Bn(this.toArray())},h.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},h.prototype.diagonal=function(E){if(E){if(Yn(E)&&(E=E.toNumber()),!ar(E)||!Qt(E))throw new TypeError("The parameter k must be an integer number")}else E=0;var B=E>0?E:0,L=E<0?-E:0,O=this._size[1],P=Math.min(this._size[0]-L,O-B),z=[],F=[],Z=[];Z[0]=0;for(var j=B;j<O&&z.length<P;j++)for(var H=this._ptr[j+1],Q=this._ptr[j];Q<H;Q++){var ne=this._index[Q];if(ne===j-B+L){z.push(this._values[Q]),F[z.length-1]=ne-L;break}}return Z.push(z.length),new h({values:z,index:F,ptr:Z,size:[P,1]})},h.fromJSON=function(E){return new h(E)},h.diagonal=function(E,B,L,W,O){if(!nr(E))throw new TypeError("Array expected, size parameter");if(2!==E.length)throw new Error("Only two dimensions matrix are supported");if(E=E.map(function(J){if(Yn(J)&&(J=J.toNumber()),!ar(J)||!Qt(J)||J<1)throw new Error("Size values must be positive integers");return J}),L){if(Yn(L)&&(L=L.toNumber()),!ar(L)||!Qt(L))throw new TypeError("The parameter k must be an integer number")}else L=0;var P=l,z=0;Da(O)&&(P=u.find(l,[O,O])||l,z=u.convert(0,O));var Q,F=L>0?L:0,Z=L<0?-L:0,j=E[0],X=E[1],H=Math.min(j-Z,X-F);if(nr(B)){if(B.length!==H)throw new Error("Invalid value array length");Q=function(Me){return B[Me]}}else if(vn(B)){var ne=B.size();if(1!==ne.length||ne[0]!==H)throw new Error("Invalid matrix length");Q=function(Me){return B.get([Me])}}else Q=function(){return B};for(var de=[],we=[],Te=[],ye=0;ye<X;ye++){Te.push(de.length);var ee=ye-F;if(ee>=0&&ee<H){var We=Q(ee);P(We,z)||(we.push(ee+Z),de.push(We))}}return Te.push(de.length),new h({values:de,index:we,ptr:Te,size:[j,X]})},h.prototype.swapRows=function(E,B){if(!(ar(E)&&Qt(E)&&ar(B)&&Qt(B)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return sr(E,this._size[0]),sr(B,this._size[0]),h._swapRows(E,B,this._size[1],this._values,this._index,this._ptr),this},h._forEachRow=function(E,B,L,W,O){for(var z=W[E+1],F=W[E];F<z;F++)O(L[F],B[F])},h._swapRows=function(E,B,L,W,O,P){for(var z=0;z<L;z++){var F=P[z],Z=P[z+1],j=S(E,F,Z,O),X=S(B,F,Z,O);if(j<Z&&X<Z&&O[j]===E&&O[X]===B){if(W){var H=W[j];W[j]=W[X],W[X]=H}}else if(j<Z&&O[j]===E&&(X>=Z||O[X]!==B)){var Q=W?W[j]:void 0;O.splice(X,0,B),W&&W.splice(X,0,Q),O.splice(X<=j?j+1:j,1),W&&W.splice(X<=j?j+1:j,1)}else if(X<Z&&O[X]===B&&(j>=Z||O[j]!==E)){var ne=W?W[X]:void 0;O.splice(j,0,E),W&&W.splice(j,0,ne),O.splice(j<=X?X+1:X,1),W&&W.splice(j<=X?X+1:X,1)}}},h},{isClass:!0});pe("bin",["typed","format"],o=>{var{typed:u,format:l}=o;return u("bin",{"number | BigNumber":function(h){return l(h,{notation:"bin"})},"number | BigNumber, number":function(h,p){return l(h,{notation:"bin",wordSize:p})}})});var fu=pe("isNaN",["typed"],o=>{var{typed:u}=o;return u("isNaN",{number:Xp,BigNumber:function(f){return f.isNaN()},Fraction:function(f){return!1},Complex:function(f){return f.isNaN()},Unit:function(f){return Number.isNaN(f.value)},"Array | Matrix":function(f){return qt(f,Number.isNaN)}})}),Dh="unaryMinus",Bc=pe(Dh,["typed"],o=>{var{typed:u}=o;return u(Dh,{number:Op,Complex:function(f){return f.neg()},BigNumber:function(f){return f.neg()},Fraction:function(f){return f.neg()},Unit:function(f){var h=f.clone();return h.value=this(f.value),h},"Array | Matrix":function(f){return qt(f,this,!0)}})}),eT=pe("fraction",["typed","Fraction"],o=>{var{typed:u,Fraction:l}=o;return u("fraction",{number:function(h){if(!isFinite(h)||isNaN(h))throw new Error(h+" cannot be represented as a fraction");return new l(h)},string:function(h){return new l(h)},"number, number":function(h,p){return new l(h,p)},null:function(h){return new l(0)},BigNumber:function(h){return new l(h.toString())},Fraction:function(h){return h},Object:function(h){return new l(h)},"Array | Matrix":function(h){return qt(h,this)}})}),lm="isNumeric",vy=pe(lm,["typed"],o=>{var{typed:u}=o;return u(lm,{"number | BigNumber | Fraction | boolean":function(){return!0},"Complex | Unit | string | null | undefined | Node":function(){return!1},"Array | Matrix":function(f){return qt(f,this)}})}),nT=pe("matrix",["typed","Matrix","DenseMatrix","SparseMatrix"],o=>{var{typed:u,DenseMatrix:f,SparseMatrix:h}=o;return u("matrix",{"":function(){return p([])},string:function(w){return p([],w)},"string, string":function(w,N){return p([],w,N)},Array:function(w){return p(w)},Matrix:function(w){return p(w,w.storage())},"Array | Matrix, string":p,"Array | Matrix, string, string":p});function p(b,w,N){if("dense"===w||"default"===w||void 0===w)return new f(b,N);if("sparse"===w)return new h(b,N);throw new TypeError("Unknown matrix type "+JSON.stringify(w)+".")}}),ua=pe("algorithm03",["typed"],o=>{var{typed:u}=o;return function(f,h,p,b){var w=f._data,N=f._size,S=f._datatype,x=h._values,v=h._index,I=h._ptr,_=h._size,A=h._datatype;if(N.length!==_.length)throw new Dn(N.length,_.length);if(N[0]!==_[0]||N[1]!==_[1])throw new RangeError("Dimension mismatch. Matrix A ("+N+") must match Matrix B ("+_+")");if(!x)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var L,E=N[0],B=N[1],W=0,O=p;"string"==typeof S&&S===A&&(W=u.convert(0,L=S),O=u.find(p,[L,L]));for(var P=[],z=0;z<E;z++)P[z]=[];for(var F=[],Z=[],j=0;j<B;j++){for(var X=j+1,Q=I[j+1],ne=I[j];ne<Q;ne++){var de=v[ne];F[de]=b?O(x[ne],w[de][j]):O(w[de][j],x[ne]),Z[de]=X}for(var we=0;we<E;we++)P[we][j]=Z[we]===X?F[we]:b?O(W,w[we][j]):O(w[we][j],W)}return f.createDenseMatrix({data:P,size:[E,B],datatype:L})}}),$i=pe("algorithm05",["typed","equalScalar"],o=>{var{typed:u,equalScalar:l}=o;return function(h,p,b){var w=h._values,N=h._index,S=h._ptr,x=h._size,v=h._datatype,I=p._values,_=p._index,A=p._ptr,E=p._size,B=p._datatype;if(x.length!==E.length)throw new Dn(x.length,E.length);if(x[0]!==E[0]||x[1]!==E[1])throw new RangeError("Dimension mismatch. Matrix A ("+x+") must match Matrix B ("+E+")");var O,L=x[0],W=x[1],P=l,z=0,F=b;"string"==typeof v&&v===B&&(P=u.find(l,[O=v,O]),z=u.convert(0,O),F=u.find(b,[O,O]));var we,Te,ye,ee,Z=w&&I?[]:void 0,j=[],X=[],H=Z?[]:void 0,Q=Z?[]:void 0,ne=[],de=[];for(Te=0;Te<W;Te++){X[Te]=j.length;var We=Te+1;for(ye=S[Te],ee=S[Te+1];ye<ee;ye++)j.push(we=N[ye]),ne[we]=We,H&&(H[we]=w[ye]);for(ye=A[Te],ee=A[Te+1];ye<ee;ye++)ne[we=_[ye]]!==We&&j.push(we),de[we]=We,Q&&(Q[we]=I[ye]);if(Z)for(ye=X[Te];ye<j.length;){var J=ne[we=j[ye]],Me=de[we];if(J===We||Me===We){var Le=F(J===We?H[we]:z,Me===We?Q[we]:z);P(Le,z)?j.splice(ye,1):(Z.push(Le),ye++)}}}return X[W]=j.length,h.createSparseMatrix({values:Z,index:j,ptr:X,size:[L,W],datatype:O})}}),Ls=pe("algorithm11",["typed","equalScalar"],o=>{var{typed:u,equalScalar:l}=o;return function(h,p,b,w){var N=h._values,S=h._index,x=h._ptr,v=h._size,I=h._datatype;if(!N)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var E,_=v[0],A=v[1],B=l,L=0,W=b;"string"==typeof I&&(B=u.find(l,[E=I,E]),L=u.convert(0,E),p=u.convert(p,E),W=u.find(b,[E,E]));for(var O=[],P=[],z=[],F=0;F<A;F++){z[F]=P.length;for(var j=x[F+1],X=x[F];X<j;X++){var H=S[X],Q=w?W(p,N[X]):W(N[X],p);B(Q,L)||(P.push(H),O.push(Q))}}return z[A]=P.length,h.createSparseMatrix({values:O,index:P,ptr:z,size:[_,A],datatype:E})}}),ts=pe("algorithm12",["typed","DenseMatrix"],o=>{var{typed:u,DenseMatrix:l}=o;return function(h,p,b,w){var N=h._values,S=h._index,x=h._ptr,v=h._size,I=h._datatype;if(!N)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var E,_=v[0],A=v[1],B=b;"string"==typeof I&&(p=u.convert(p,E=I),B=u.find(b,[E,E]));for(var L=[],W=[],O=[],P=0;P<A;P++){for(var z=P+1,Z=x[P+1],j=x[P];j<Z;j++){var X=S[j];W[X]=N[j],O[X]=z}for(var H=0;H<_;H++)0===P&&(L[H]=[]),L[H][P]=O[H]===z?w?B(p,W[H]):B(W[H],p):w?B(p,0):B(0,p)}return new l({data:L,size:[_,A],datatype:E})}}),fr=pe("algorithm13",["typed"],o=>{var{typed:u}=o;return function(h,p,b){var w=h._data,N=h._size,S=h._datatype,x=p._data,v=p._size,I=p._datatype,_=[];if(N.length!==v.length)throw new Dn(N.length,v.length);for(var A=0;A<N.length;A++){if(N[A]!==v[A])throw new RangeError("Dimension mismatch. Matrix A ("+N+") must match Matrix B ("+v+")");_[A]=N[A]}var E,B=b;"string"==typeof S&&S===I&&(B=u.find(b,[E=S,E]));var L=_.length>0?l(B,0,_,_[0],w,x):[];return h.createDenseMatrix({data:L,size:_,datatype:E})};function l(f,h,p,b,w,N){var S=[];if(h===p.length-1)for(var x=0;x<b;x++)S[x]=f(w[x],N[x]);else for(var v=0;v<b;v++)S[v]=l(f,h+1,p,p[h+1],w[v],N[v]);return S}}),Kn=pe("algorithm14",["typed"],o=>{var{typed:u}=o;return function(h,p,b,w){var v,N=h._data,S=h._size,x=h._datatype,I=b;"string"==typeof x&&(p=u.convert(p,v=x),I=u.find(b,[v,v]));var _=S.length>0?l(I,0,S,S[0],N,p,w):[];return h.createDenseMatrix({data:_,size:hn(S),datatype:v})};function l(f,h,p,b,w,N,S){var x=[];if(h===p.length-1)for(var v=0;v<b;v++)x[v]=S?f(N,w[v]):f(w[v],N);else for(var I=0;I<b;I++)x[I]=l(f,h+1,p,p[h+1],w[I],N,S);return x}}),Io=pe("algorithm01",["typed"],o=>{var{typed:u}=o;return function(f,h,p,b){var w=f._data,N=f._size,S=f._datatype,x=h._values,v=h._index,I=h._ptr,_=h._size,A=h._datatype;if(N.length!==_.length)throw new Dn(N.length,_.length);if(N[0]!==_[0]||N[1]!==_[1])throw new RangeError("Dimension mismatch. Matrix A ("+N+") must match Matrix B ("+_+")");if(!x)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var O,P,E=N[0],B=N[1],L="string"==typeof S&&S===A?S:void 0,W=L?u.find(p,[L,L]):p,z=[];for(O=0;O<E;O++)z[O]=[];var F=[],Z=[];for(P=0;P<B;P++){for(var j=P+1,H=I[P+1],Q=I[P];Q<H;Q++)F[O=v[Q]]=b?W(x[Q],w[O][P]):W(w[O][P],x[Q]),Z[O]=j;for(O=0;O<E;O++)z[O][P]=Z[O]===j?F[O]:w[O][P]}return f.createDenseMatrix({data:z,size:[E,B],datatype:L})}});function Ir(){throw new Error('No "bignumber" implementation available')}function ns(){throw new Error('No "fraction" implementation available')}var xy=pe("numeric",["number","?bignumber","?fraction"],o=>{var{number:u,bignumber:l,fraction:f}=o,h={string:!0,number:!0,BigNumber:!0,Fraction:!0},p={number:b=>u(b),BigNumber:l?b=>l(b):Ir,Fraction:f?b=>f(b):ns};return function(w,N){var S=mr(w);if(!(S in h))throw new TypeError("Cannot convert "+w+' of type "'+S+'"; valid input types are '+Object.keys(h).join(", "));if(!(N in p))throw new TypeError("Cannot convert "+w+' to type "'+N+'"; valid output types are '+Object.keys(p).join(", "));return N===S?w:p[N](w)}});var bT=pe("size",["typed","config","?matrix"],o=>{var{typed:u,config:l,matrix:f}=o;return u("size",{Matrix:function(p){return p.create(p.size())},Array:On,string:function(p){return"Array"===l.matrix?[p.length]:f([p.length])},"number | Complex | BigNumber | Unit | boolean | null":function(p){return"Array"===l.matrix?[]:f?f([]):function la(){throw new Error('No "matrix" implementation available')}()}})}),cl=pe("algorithm10",["typed","DenseMatrix"],o=>{var{typed:u,DenseMatrix:l}=o;return function(h,p,b,w){var N=h._values,S=h._index,x=h._ptr,v=h._size,I=h._datatype;if(!N)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var E,_=v[0],A=v[1],B=b;"string"==typeof I&&(p=u.convert(p,E=I),B=u.find(b,[E,E]));for(var L=[],W=[],O=[],P=0;P<A;P++){for(var z=P+1,Z=x[P+1],j=x[P];j<Z;j++){var X=S[j];W[X]=N[j],O[X]=z}for(var H=0;H<_;H++)0===P&&(L[H]=[]),L[H][P]=O[H]===z?w?B(p,W[H]):B(W[H],p):p}return new l({data:L,size:[_,A],datatype:E})}}),mm="subtract",hw=pe(mm,["typed","matrix","equalScalar","addScalar","unaryMinus","DenseMatrix"],o=>{var{typed:u,matrix:l,equalScalar:f,addScalar:h,unaryMinus:p,DenseMatrix:b}=o,w=Io({typed:u}),N=ua({typed:u}),S=$i({typed:u,equalScalar:f}),x=cl({typed:u,DenseMatrix:b}),v=fr({typed:u}),I=Kn({typed:u});return u(mm,{"number, number":function(A,E){return A-E},"Complex, Complex":function(A,E){return A.sub(E)},"BigNumber, BigNumber":function(A,E){return A.minus(E)},"Fraction, Fraction":function(A,E){return A.sub(E)},"Unit, Unit":function(A,E){if(null===A.value)throw new Error("Parameter x contains a unit with undefined value");if(null===E.value)throw new Error("Parameter y contains a unit with undefined value");if(!A.equalBase(E))throw new Error("Units do not match");var B=A.clone();return B.value=this(B.value,E.value),B.fixPrefix=!1,B},"SparseMatrix, SparseMatrix":function(A,E){return gm(A,E),S(A,E,this)},"SparseMatrix, DenseMatrix":function(A,E){return gm(A,E),N(E,A,this,!0)},"DenseMatrix, SparseMatrix":function(A,E){return gm(A,E),w(A,E,this,!1)},"DenseMatrix, DenseMatrix":function(A,E){return gm(A,E),v(A,E,this)},"Array, Array":function(A,E){return this(l(A),l(E)).valueOf()},"Array, Matrix":function(A,E){return this(l(A),E)},"Matrix, Array":function(A,E){return this(A,l(E))},"SparseMatrix, any":function(A,E){return x(A,p(E),h)},"DenseMatrix, any":function(A,E){return I(A,E,this)},"any, SparseMatrix":function(A,E){return x(E,A,this,!0)},"any, DenseMatrix":function(A,E){return I(E,A,this,!0)},"Array, any":function(A,E){return I(l(A),E,this,!1).valueOf()},"any, Array":function(A,E){return I(l(E),A,this,!0).valueOf()}})});function gm(o,u){var l=o.size(),f=u.size();if(l.length!==f.length)throw new Dn(l.length,f.length)}var xw="compare",BT=pe(xw,["typed","config","matrix","equalScalar","BigNumber","Fraction","DenseMatrix"],o=>{var{typed:u,config:l,equalScalar:f,matrix:h,BigNumber:p,Fraction:b,DenseMatrix:w}=o,N=ua({typed:u}),S=$i({typed:u,equalScalar:f}),x=ts({typed:u,DenseMatrix:w}),v=fr({typed:u}),I=Kn({typed:u});return u(xw,{"boolean, boolean":function(A,E){return A===E?0:A>E?1:-1},"number, number":function(A,E){return Rs(A,E,l.epsilon)?0:A>E?1:-1},"BigNumber, BigNumber":function(A,E){return Ka(A,E,l.epsilon)?new p(0):new p(A.cmp(E))},"Fraction, Fraction":function(A,E){return new b(A.compare(E))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(A,E){if(!A.equalBase(E))throw new Error("Cannot compare units with different base");return this(A.value,E.value)},"SparseMatrix, SparseMatrix":function(A,E){return S(A,E,this)},"SparseMatrix, DenseMatrix":function(A,E){return N(E,A,this,!0)},"DenseMatrix, SparseMatrix":function(A,E){return N(A,E,this,!1)},"DenseMatrix, DenseMatrix":function(A,E){return v(A,E,this)},"Array, Array":function(A,E){return this(h(A),h(E)).valueOf()},"Array, Matrix":function(A,E){return this(h(A),E)},"Matrix, Array":function(A,E){return this(A,h(E))},"SparseMatrix, any":function(A,E){return x(A,E,this,!1)},"DenseMatrix, any":function(A,E){return I(A,E,this,!1)},"any, SparseMatrix":function(A,E){return x(E,A,this,!0)},"any, DenseMatrix":function(A,E){return I(E,A,this,!0)},"Array, any":function(A,E){return I(h(A),E,this,!1).valueOf()},"any, Array":function(A,E){return I(h(E),A,this,!0).valueOf()}})}),zh="divideScalar",wm=pe(zh,["typed","numeric"],o=>{var{typed:u,numeric:l}=o;return u(zh,{"number, number":function(h,p){return h/p},"Complex, Complex":function(h,p){return h.div(p)},"BigNumber, BigNumber":function(h,p){return h.div(p)},"Fraction, Fraction":function(h,p){return h.div(p)},"Unit, number | Fraction | BigNumber":function(h,p){var b=h.clone(),w=l(1,mr(p));return b.value=this(null===b.value?b._normalize(w):b.value,p),b},"number | Fraction | BigNumber, Unit":function(h,p){var b=p.clone();b=b.pow(-1);var w=l(1,mr(h));return b.value=this(h,null===p.value?p._normalize(w):p.value),b},"Unit, Unit":function(h,p){return h.divide(p)}})}),Ry=(pe("equal",["typed","equalScalar"],o=>{var{typed:u,equalScalar:l}=o;return u("equal",{"any, any":function(h,p){return null===h?null===p:null===p?null===h:void 0===h?void 0===p:void 0===p?void 0===h:l(h,p)}})}),pe("algorithm04",["typed","equalScalar"],o=>{var{typed:u,equalScalar:l}=o;return function(h,p,b){var w=h._values,N=h._index,S=h._ptr,x=h._size,v=h._datatype,I=p._values,_=p._index,A=p._ptr,E=p._size,B=p._datatype;if(x.length!==E.length)throw new Dn(x.length,E.length);if(x[0]!==E[0]||x[1]!==E[1])throw new RangeError("Dimension mismatch. Matrix A ("+x+") must match Matrix B ("+E+")");var O,L=x[0],W=x[1],P=l,z=0,F=b;"string"==typeof v&&v===B&&(P=u.find(l,[O=v,O]),z=u.convert(0,O),F=u.find(b,[O,O]));var we,Te,ye,We,Z=w&&I?[]:void 0,j=[],X=[],H=w&&I?[]:void 0,Q=w&&I?[]:void 0,ne=[],de=[];for(Te=0;Te<W;Te++){X[Te]=j.length;var J=Te+1;for(We=S[Te+1],ye=S[Te];ye<We;ye++)j.push(we=N[ye]),ne[we]=J,H&&(H[we]=w[ye]);for(We=A[Te+1],ye=A[Te];ye<We;ye++)if(ne[we=_[ye]]===J){if(H){var Me=F(H[we],I[ye]);P(Me,z)?ne[we]=null:H[we]=Me}}else j.push(we),de[we]=J,Q&&(Q[we]=I[ye]);if(H&&Q)for(ye=X[Te];ye<j.length;)ne[we=j[ye]]===J?(Z[ye]=H[we],ye++):de[we]===J?(Z[ye]=Q[we],ye++):j.splice(ye,1)}return X[W]=j.length,h.createSparseMatrix({values:Z,index:j,ptr:X,size:[L,W],datatype:O})}})),qh="partitionSelect",zy=pe(qh,["typed","isNumeric","isNaN","compare"],o=>{var{typed:u,isNumeric:l,isNaN:f,compare:h}=o,p=h,b=(S,x)=>-h(S,x);return u(qh,{"Array | Matrix, number":function(x,v){return w(x,v,p)},"Array | Matrix, number, string":function(x,v,I){if("asc"===I)return w(x,v,p);if("desc"===I)return w(x,v,b);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":w});function w(S,x,v){if(!Qt(x)||x<0)throw new Error("k must be a non-negative integer");if(vn(S)){if(S.size().length>1)throw new Error("Only one dimensional matrices supported");return N(S.valueOf(),x,v)}if(Array.isArray(S))return N(S,x,v)}function N(S,x,v){if(x>=S.length)throw new Error("k out of bounds");for(var I=0;I<S.length;I++)if(l(S[I])&&f(S[I]))return S[I];for(var _=0,A=S.length-1;_<A;){for(var E=_,B=A,L=S[Math.floor(Math.random()*(A-_+1))+_];E<B;)if(v(S[E],L)>=0){var W=S[B];S[B]=S[E],S[E]=W,--B}else++E;v(S[E],L)>0&&--E,x<=E?A=E:_=E+1}return S[x]}});function mu(o,u,l,f){if(!(this instanceof mu))throw new SyntaxError("Constructor must be called with the new operator");this.fn=o,this.count=u,this.min=l,this.max=f,this.message="Wrong number of arguments in function "+o+" ("+u+" provided, "+l+(null!=f?"-"+f:"")+" expected)",this.stack=(new Error).stack}(mu.prototype=new Error).constructor=Error,mu.prototype.name="ArgumentsError",mu.prototype.isArgumentsError=!0;var Hh="unequal",dA=(pe(Hh,["typed","equalScalar"],o=>{var{typed:u,equalScalar:l}=o;return u(Hh,{"any, any":function(h,p){return null===h?null!==p:null===p?null!==h:void 0===h?void 0!==p:void 0===p?void 0!==h:!l(h,p)}})}),pe("add",["typed","matrix","addScalar","equalScalar","DenseMatrix","SparseMatrix"],o=>{var{typed:u,matrix:l,addScalar:f,equalScalar:h,DenseMatrix:p}=o,w=Io({typed:u}),N=Ry({typed:u,equalScalar:h}),S=cl({typed:u,DenseMatrix:p}),x=fr({typed:u}),v=Kn({typed:u});return u("add",Uu({"DenseMatrix, DenseMatrix":function(_,A){return x(_,A,f)},"DenseMatrix, SparseMatrix":function(_,A){return w(_,A,f,!1)},"SparseMatrix, DenseMatrix":function(_,A){return w(A,_,f,!0)},"SparseMatrix, SparseMatrix":function(_,A){return N(_,A,f)},"Array, Array":function(_,A){return this(l(_),l(A)).valueOf()},"Array, Matrix":function(_,A){return this(l(_),A)},"Matrix, Array":function(_,A){return this(_,l(A))},"DenseMatrix, any":function(_,A){return v(_,A,f,!1)},"SparseMatrix, any":function(_,A){return S(_,A,f,!1)},"any, DenseMatrix":function(_,A){return v(A,_,f,!0)},"any, SparseMatrix":function(_,A){return S(A,_,f,!0)},"Array, any":function(_,A){return v(l(_),A,f,!1).valueOf()},"any, Array":function(_,A){return v(l(A),_,f,!0).valueOf()},"any, any":f,"any, any, ...any":function(_,A,E){for(var B=this(_,A),L=0;L<E.length;L++)B=this(B,E[L]);return B}},f.signatures))}));te(9286);var TA=pe("dot",["typed","addScalar","multiplyScalar","conj","size"],o=>{var{typed:u,addScalar:l,multiplyScalar:f,conj:h,size:p}=o;return u("dot",{"Array | DenseMatrix, Array | DenseMatrix":function w(x,v){var I=b(x,v),_=vn(x)?x._data:x,A=vn(x)?x._datatype:void 0,E=vn(v)?v._data:v,B=vn(v)?v._datatype:void 0,L=2===S(x).length,W=2===S(v).length,O=l,P=f;if(A&&B&&A===B&&"string"==typeof A){var z=A;O=u.find(l,[z,z]),P=u.find(f,[z,z])}if(!L&&!W){for(var F=P(h(_[0]),E[0]),Z=1;Z<I;Z++)F=O(F,P(h(_[Z]),E[Z]));return F}if(!L&&W){for(var j=P(h(_[0]),E[0][0]),X=1;X<I;X++)j=O(j,P(h(_[X]),E[X][0]));return j}if(L&&!W){for(var H=P(h(_[0][0]),E[0]),Q=1;Q<I;Q++)H=O(H,P(h(_[Q][0]),E[Q]));return H}if(L&&W){for(var ne=P(h(_[0][0]),E[0][0]),de=1;de<I;de++)ne=O(ne,P(h(_[de][0]),E[de][0]));return ne}},"SparseMatrix, SparseMatrix":function N(x,v){b(x,v);for(var I=x._index,_=x._values,A=v._index,E=v._values,B=0,L=l,W=f,O=0,P=0;O<I.length&&P<A.length;){var z=I[O],F=A[P];z<F?O++:z>F?P++:z===F&&(B=L(B,W(_[O],E[P])),O++,P++)}return B}});function b(x,v){var A,E,I=S(x),_=S(v);if(1===I.length)A=I[0];else{if(2!==I.length||1!==I[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+I.join(", ")+")");A=I[0]}if(1===_.length)E=_[0];else{if(2!==_.length||1!==_[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+_.join(", ")+")");E=_[0]}if(A!==E)throw new RangeError("Vectors must have equal length ("+A+" != "+E+")");if(0===A)throw new RangeError("Cannot calculate the dot product of empty vectors");return A}function S(x){return vn(x)?x.size():p(x)}}),sN="identity",aN=pe(sN,["typed","config","matrix","BigNumber","DenseMatrix","SparseMatrix"],o=>{var{typed:u,config:l,matrix:f,BigNumber:h,DenseMatrix:p,SparseMatrix:b}=o;return u(sN,{"":function(){return"Matrix"===l.matrix?f([]):[]},string:function(x){return f(x)},"number | BigNumber":function(x){return N(x,x,"Matrix"===l.matrix?"dense":void 0)},"number | BigNumber, string":function(x,v){return N(x,x,v)},"number | BigNumber, number | BigNumber":function(x,v){return N(x,v,"Matrix"===l.matrix?"dense":void 0)},"number | BigNumber, number | BigNumber, string":function(x,v,I){return N(x,v,I)},Array:function(x){return w(x)},"Array, string":function(x,v){return w(x,v)},Matrix:function(x){return w(x.valueOf(),x.storage())},"Matrix, string":function(x,v){return w(x.valueOf(),v)}});function w(S,x){switch(S.length){case 0:return x?f(x):[];case 1:return N(S[0],S[0],x);case 2:return N(S[0],S[1],x);default:throw new Error("Vector containing two values expected")}}function N(S,x,v){var I=Yn(S)||Yn(x)?h:null;if(Yn(S)&&(S=S.toNumber()),Yn(x)&&(x=x.toNumber()),!Qt(S)||S<1)throw new Error("Parameters in function identity must be positive integers");if(!Qt(x)||x<1)throw new Error("Parameters in function identity must be positive integers");var _=I?new h(1):1,A=I?new I(0):0,E=[S,x];if(v){if("sparse"===v)return b.diagonal(E,_,0,A);if("dense"===v)return p.diagonal(E,_,0,A);throw new TypeError('Unknown matrix type "'.concat(v,'"'))}for(var B=tu([],E,A),L=S<x?S:x,W=0;W<L;W++)B[W][W]=_;return B}}),Zy="multiply",PA=pe(Zy,["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],o=>{var{typed:u,matrix:l,addScalar:f,multiplyScalar:h,equalScalar:p,dot:b}=o,w=Ls({typed:u,equalScalar:p}),N=Kn({typed:u});function S(z,F){switch(z.length){case 1:switch(F.length){case 1:if(z[0]!==F[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(z[0]!==F[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+z[0]+") must match Matrix rows ("+F[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+F.length+" dimensions)")}break;case 2:switch(F.length){case 1:if(z[1]!==F[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+z[1]+") must match Vector length ("+F[0]+")");break;case 2:if(z[1]!==F[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+z[1]+") must match Matrix B rows ("+F[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+F.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+z.length+" dimensions)")}}var _=u("_multiplyMatrixVector",{"DenseMatrix, any":function E(z,F){var we,Z=z._data,j=z._size,X=z._datatype,H=F._data,Q=F._datatype,ne=j[0],de=j[1],Te=f,ye=h;X&&Q&&X===Q&&"string"==typeof X&&(Te=u.find(f,[we=X,we]),ye=u.find(h,[we,we]));for(var ee=[],We=0;We<ne;We++){for(var J=Z[We],Me=ye(J[0],H[0]),je=1;je<de;je++)Me=Te(Me,ye(J[je],H[je]));ee[We]=Me}return z.createDenseMatrix({data:ee,size:[ne],datatype:we})},"SparseMatrix, any":function W(z,F){var Z=z._values,j=z._index,X=z._ptr,H=z._datatype;if(!Z)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var We,Q=F._data,ne=F._datatype,de=z._size[0],we=F._size[0],Te=[],ye=[],ee=[],J=f,Me=h,je=p,bt=0;H&&ne&&H===ne&&"string"==typeof H&&(J=u.find(f,[We=H,We]),Me=u.find(h,[We,We]),je=u.find(p,[We,We]),bt=u.convert(0,We));var Le=[],Xe=[];ee[0]=0;for(var mt=0;mt<we;mt++){var rt=Q[mt];if(!je(rt,bt))for(var Mt=X[mt+1],Bt=X[mt];Bt<Mt;Bt++){var dt=j[Bt];Xe[dt]?Le[dt]=J(Le[dt],Me(rt,Z[Bt])):(Xe[dt]=!0,ye.push(dt),Le[dt]=Me(rt,Z[Bt]))}}for(var gn=ye.length,fn=0;fn<gn;fn++)Te[fn]=Le[ye[fn]];return ee[1]=ye.length,z.createSparseMatrix({values:Te,index:ye,ptr:ee,size:[de,1],datatype:We})}}),A=u("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":function B(z,F){var ye,Z=z._data,j=z._size,X=z._datatype,H=F._data,ne=F._datatype,de=j[0],we=j[1],Te=F._size[1],ee=f,We=h;X&&ne&&X===ne&&"string"==typeof X&&(ee=u.find(f,[ye=X,ye]),We=u.find(h,[ye,ye]));for(var J=[],Me=0;Me<de;Me++){var je=Z[Me];J[Me]=[];for(var bt=0;bt<Te;bt++){for(var Le=We(je[0],H[0][bt]),Xe=1;Xe<we;Xe++)Le=ee(Le,We(je[Xe],H[Xe][bt]));J[Me][bt]=Le}}return z.createDenseMatrix({data:J,size:[de,Te],datatype:ye})},"DenseMatrix, SparseMatrix":function L(z,F){var Z=z._data,j=z._size,X=z._datatype,H=F._values,Q=F._index,ne=F._ptr,de=F._size,we=F._datatype;if(!H)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var ee,Te=j[0],ye=de[1],We=f,J=h,Me=p,je=0;X&&we&&X===we&&"string"==typeof X&&(We=u.find(f,[ee=X,ee]),J=u.find(h,[ee,ee]),Me=u.find(p,[ee,ee]),je=u.convert(0,ee));for(var bt=[],Le=[],Xe=[],mt=F.createSparseMatrix({values:bt,index:Le,ptr:Xe,size:[Te,ye],datatype:ee}),rt=0;rt<ye;rt++){Xe[rt]=Le.length;var St=ne[rt],Mt=ne[rt+1];if(Mt>St)for(var Bt=0,dt=0;dt<Te;dt++){for(var gn=dt+1,fn=void 0,Wt=St;Wt<Mt;Wt++){var Jt=Q[Wt];Bt!==gn?(fn=J(Z[dt][Jt],H[Wt]),Bt=gn):fn=We(fn,J(Z[dt][Jt],H[Wt]))}Bt===gn&&!Me(fn,je)&&(Le.push(dt),bt.push(fn))}}return Xe[ye]=Le.length,mt},"SparseMatrix, DenseMatrix":function O(z,F){var Z=z._values,j=z._index,X=z._ptr,H=z._datatype;if(!Z)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var ye,Q=F._data,ne=F._datatype,de=z._size[0],we=F._size[0],Te=F._size[1],ee=f,We=h,J=p,Me=0;H&&ne&&H===ne&&"string"==typeof H&&(ee=u.find(f,[ye=H,ye]),We=u.find(h,[ye,ye]),J=u.find(p,[ye,ye]),Me=u.convert(0,ye));for(var je=[],bt=[],Le=[],Xe=z.createSparseMatrix({values:je,index:bt,ptr:Le,size:[de,Te],datatype:ye}),mt=[],rt=[],St=0;St<Te;St++){Le[St]=bt.length;for(var Mt=St+1,Bt=0;Bt<we;Bt++){var dt=Q[Bt][St];if(!J(dt,Me))for(var fn=X[Bt+1],Wt=X[Bt];Wt<fn;Wt++){var Jt=j[Wt];rt[Jt]!==Mt?(rt[Jt]=Mt,bt.push(Jt),mt[Jt]=We(dt,Z[Wt])):mt[Jt]=ee(mt[Jt],We(dt,Z[Wt]))}}for(var Ee=bt.length,lt=Le[St];lt<Ee;lt++)je[lt]=mt[bt[lt]]}return Le[Te]=bt.length,Xe},"SparseMatrix, SparseMatrix":function P(z,F){var We,Z=z._values,j=z._index,X=z._ptr,H=z._datatype,Q=F._values,ne=F._index,de=F._ptr,we=F._datatype,Te=z._size[0],ye=F._size[1],ee=Z&&Q,J=f,Me=h;H&&we&&H===we&&"string"==typeof H&&(J=u.find(f,[We=H,We]),Me=u.find(h,[We,We]));for(var St,Bt,dt,fn,Wt,Jt,je=ee?[]:void 0,bt=[],Le=[],Xe=z.createSparseMatrix({values:je,index:bt,ptr:Le,size:[Te,ye],datatype:We}),mt=ee?[]:void 0,rt=[],fe=0;fe<ye;fe++){Le[fe]=bt.length;var Ee=fe+1;for(fn=de[fe+1],dt=de[fe];dt<fn;dt++)if(Jt=ne[dt],ee)for(Bt=X[Jt+1],St=X[Jt];St<Bt;St++)rt[Wt=j[St]]!==Ee?(rt[Wt]=Ee,bt.push(Wt),mt[Wt]=Me(Q[dt],Z[St])):mt[Wt]=J(mt[Wt],Me(Q[dt],Z[St]));else for(Bt=X[Jt+1],St=X[Jt];St<Bt;St++)rt[Wt=j[St]]!==Ee&&(rt[Wt]=Ee,bt.push(Wt));if(ee)for(var Qe=bt.length,It=Le[fe];It<Qe;It++)je[It]=mt[bt[It]]}return Le[ye]=bt.length,Xe}});return u(Zy,Uu({"Array, Array":function(F,Z){S(On(F),On(Z));var j=this(l(F),l(Z));return vn(j)?j.valueOf():j},"Matrix, Matrix":function(F,Z){var j=F.size(),X=Z.size();return S(j,X),1===j.length?1===X.length?function x(z,F,Z){if(0===Z)throw new Error("Cannot multiply two empty vectors");return b(z,F)}(F,Z,j[0]):function v(z,F){if("dense"!==F.storage())throw new Error("Support for SparseMatrix not implemented");return function I(z,F){var Te,Z=z._data,X=z._datatype,H=F._data,ne=F._datatype,de=z._size[0],we=F._size[1],ye=f,ee=h;X&&ne&&X===ne&&"string"==typeof X&&(ye=u.find(f,[Te=X,Te]),ee=u.find(h,[Te,Te]));for(var We=[],J=0;J<we;J++){for(var Me=ee(Z[0],H[0][J]),je=1;je<de;je++)Me=ye(Me,ee(Z[je],H[je][J]));We[J]=Me}return z.createDenseMatrix({data:We,size:[we],datatype:Te})}(z,F)}(F,Z):1===X.length?_(F,Z):A(F,Z)},"Matrix, Array":function(F,Z){return this(F,l(Z))},"Array, Matrix":function(F,Z){return this(l(F,Z.storage()),Z)},"SparseMatrix, any":function(F,Z){return w(F,Z,h,!1)},"DenseMatrix, any":function(F,Z){return N(F,Z,h,!1)},"any, SparseMatrix":function(F,Z){return w(Z,F,h,!0)},"any, DenseMatrix":function(F,Z){return N(Z,F,h,!0)},"Array, any":function(F,Z){return N(l(F),Z,h,!1).valueOf()},"any, Array":function(F,Z){return N(l(Z),F,h,!0).valueOf()},"any, any":h,"any, any, ...any":function(F,Z,j){for(var X=this(F,Z),H=0;H<j.length;H++)X=this(X,j[H]);return X}},h.signatures))}),n0=pe("det",["typed","matrix","subtract","multiply","divideScalar","isZero","unaryMinus"],o=>{var{typed:u,matrix:l,subtract:f,multiply:h,divideScalar:p,isZero:b,unaryMinus:w}=o;return u("det",{any:function(x){return hn(x)},"Array | Matrix":function(x){var v;switch((v=vn(x)?x.size():Array.isArray(x)?(x=l(x)).size():[]).length){case 0:return hn(x);case 1:if(1===v[0])return hn(x.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+Bn(v)+")");case 2:var I=v[0];if(I===v[1])return function N(S,x,v){if(1===x)return hn(S[0][0]);if(2===x)return f(h(S[0][0],S[1][1]),h(S[1][0],S[0][1]));for(var I=!1,_=new Array(x).fill(0).map((Z,j)=>j),A=0;A<x;A++){var E=_[A];if(b(S[E][A])){var B=void 0;for(B=A+1;B<x;B++)if(!b(S[_[B]][A])){E=_[B],_[B]=_[A],_[A]=E,I=!I;break}if(B===x)return S[E][A]}for(var L=S[E][A],W=0===A?1:S[_[A-1]][A-1],O=A+1;O<x;O++)for(var P=_[O],z=A+1;z<x;z++)S[P][z]=p(f(h(S[P][z],L),h(S[P][A],S[E][z])),W)}var F=S[_[x-1]][x-1];return I?w(F):F}(x.clone().valueOf(),I);throw new RangeError("Matrix must be square (size: "+Bn(v)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+Bn(v)+")")}}})}),PN=pe("quantileSeq",["typed","add","multiply","partitionSelect","compare"],o=>{var{typed:u,add:l,multiply:f,partitionSelect:h,compare:p}=o;function w(S,x,v){var I=Hn(S),_=I.length;if(0===_)throw new Error("Cannot calculate quantile of an empty sequence");if(ar(x)){var A=x*(_-1),E=A%1;if(0===E){var B=v?I[A]:h(I,A);return N(B),B}var W,O,L=Math.floor(A);if(v)W=I[L],O=I[L+1];else{O=h(I,L+1),W=I[L];for(var P=0;P<L;++P)p(I[P],W)>0&&(W=I[P])}return N(W),N(O),l(f(W,1-E),f(O,E))}var z=x.times(_-1);if(z.isInteger()){z=z.toNumber();var F=v?I[z]:h(I,z);return N(F),F}var H,Q,Z=z.floor(),j=z.minus(Z),X=Z.toNumber();if(v)H=I[X],Q=I[X+1];else{Q=h(I,X+1),H=I[X];for(var ne=0;ne<X;++ne)p(I[ne],H)>0&&(H=I[ne])}N(H),N(Q);var de=new j.constructor(1);return l(f(H,de.minus(j)),f(Q,j))}var N=u({"number | BigNumber | Unit":function(x){return x}});return function b(S,x,v){var I,_,A;if(arguments.length<2||arguments.length>3)throw new SyntaxError("Function quantileSeq requires two or three parameters");if(Ko(S)){if("boolean"==typeof(v=v||!1)){if(_=S.valueOf(),ar(x)){if(x<0)throw new Error("N/prob must be non-negative");if(x<=1)return w(_,x,v);if(x>1){if(!Qt(x))throw new Error("N must be a positive integer");var E=x+1;I=new Array(x);for(var B=0;B<x;)I[B]=w(_,++B/E,v);return I}}if(Yn(x)){var L=x.constructor;if(x.isNegative())throw new Error("N/prob must be non-negative");if(A=new L(1),x.lte(A))return new L(w(_,x,v));if(x.gt(A)){if(!x.isInteger())throw new Error("N must be a positive integer");var W=x.toNumber();if(W>4294967295)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");var O=new L(W+1);I=new Array(W);for(var P=0;P<W;)I[P]=new L(w(_,new L(++P).div(O),v));return I}}if(Array.isArray(x)){I=new Array(x.length);for(var z=0;z<I.length;++z){var F=x[z];if(ar(F)){if(F<0||F>1)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!Yn(F))throw new TypeError("Unexpected type of argument in function quantileSeq");if(A=new F.constructor(1),F.isNegative()||F.gt(A))throw new Error("Probability must be between 0 and 1, inclusive")}I[z]=w(_,F,v)}return I}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}}),AE=pe("inv",["typed","matrix","divideScalar","addScalar","multiply","unaryMinus","det","identity","abs"],o=>{var{typed:u,matrix:l,divideScalar:f,addScalar:h,multiply:p,unaryMinus:b,det:w,identity:N,abs:S}=o;return u("inv",{"Array | Matrix":function(I){var _=vn(I)?I.size():On(I);switch(_.length){case 1:if(1===_[0])return vn(I)?l([f(1,I.valueOf()[0])]):[f(1,I[0])];throw new RangeError("Matrix must be square (size: "+Bn(_)+")");case 2:var A=_[0],E=_[1];if(A===E)return vn(I)?l(x(I.valueOf(),A,E),I.storage()):x(I,A,E);throw new RangeError("Matrix must be square (size: "+Bn(_)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+Bn(_)+")")}},any:function(I){return f(1,I)}});function x(v,I,_){var A,E,B,L,W;if(1===I){if(0===(L=v[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[f(1,L)]]}if(2===I){var O=w(v);if(0===O)throw Error("Cannot calculate inverse, determinant is zero");return[[f(v[1][1],O),f(b(v[0][1]),O)],[f(b(v[1][0]),O),f(v[0][0],O)]]}var P=v.concat();for(A=0;A<I;A++)P[A]=P[A].concat();for(var z=N(I).valueOf(),F=0;F<_;F++){var Z=S(P[F][F]),j=F;for(A=F+1;A<I;)S(P[A][F])>Z&&(Z=S(P[A][F]),j=A),A++;if(0===Z)throw Error("Cannot calculate inverse, determinant is zero");(A=j)!==F&&(W=P[F],P[F]=P[A],P[A]=W,W=z[F],z[F]=z[A],z[A]=W);var X=P[F],H=z[F];for(A=0;A<I;A++){var Q=P[A],ne=z[A];if(A!==F){if(0!==Q[F]){for(B=f(b(Q[F]),X[F]),E=F;E<_;E++)Q[E]=h(Q[E],p(B,X[E]));for(E=0;E<_;E++)ne[E]=h(ne[E],p(B,H[E]))}}else{for(B=X[F],E=F;E<_;E++)Q[E]=f(Q[E],B);for(E=0;E<_;E++)ne[E]=f(ne[E],B)}}}return z}}),ak=pe("divide",["typed","matrix","multiply","equalScalar","divideScalar","inv"],o=>{var{typed:u,matrix:l,multiply:f,equalScalar:h,divideScalar:p,inv:b}=o,w=Ls({typed:u,equalScalar:h}),N=Kn({typed:u});return u("divide",Uu({"Array | Matrix, Array | Matrix":function(x,v){return f(x,b(v))},"DenseMatrix, any":function(x,v){return N(x,v,p,!1)},"SparseMatrix, any":function(x,v){return w(x,v,p,!1)},"Array, any":function(x,v){return N(l(x),v,p,!1).valueOf()},"any, Array | Matrix":function(x,v){return f(x,b(v))}},p.signatures))}),kk=pe("median",["typed","add","divide","compare","partitionSelect"],o=>{var{typed:u,add:l,divide:f,compare:h,partitionSelect:p}=o;function b(S){try{var x=(S=Hn(S.valueOf())).length;if(0===x)throw new Error("Cannot calculate median of an empty array");if(x%2==0){for(var v=x/2-1,I=p(S,v+1),_=S[v],A=0;A<v;++A)h(S[A],_)>0&&(_=S[A]);return N(_,I)}var E=p(S,(x-1)/2);return w(E)}catch(B){throw function vs(o,u,l){var f;return-1!==String(o).indexOf("Unexpected type")?(f=arguments.length>2?" (type: "+mr(l)+", value: "+JSON.stringify(l)+")":" (type: "+o.data.actual+")",new TypeError("Cannot calculate "+u+", unexpected type of argument"+f)):-1!==String(o).indexOf("complex numbers")?(f=arguments.length>2?" (type: "+mr(l)+", value: "+JSON.stringify(l)+")":"",new TypeError("Cannot calculate "+u+", no ordering relation is defined for complex numbers"+f)):o}(B,"median")}}var w=u({"number | BigNumber | Complex | Unit":function(x){return x}}),N=u({"number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit":function(x,v){return f(l(x,v),2)}});return u("median",{"Array | Matrix":b,"Array | Matrix, number | BigNumber":function(x,v){throw new Error("median(A, dim) is not yet supported")},"...":function(x){if(function ru(o){for(var u=0;u<o.length;u++)if(Ko(o[u]))return!0;return!1}(x))throw new TypeError("Scalar values expected in function median");return b(x)}})}),oe=lp({config:yt}),Zt=UI({}),ei=sv({}),DS=Ai({}),wn=g_({Matrix:DS}),Oe=gv({BigNumber:oe,Complex:Zt,DenseMatrix:wn,Fraction:ei}),ti=Lp({typed:Oe}),ys=Vp({typed:Oe}),Mo=Ev({BigNumber:oe,typed:Oe}),Zc=K_({typed:Oe}),Xn=X_({config:yt,typed:Oe}),Ym=Ch({typed:Oe}),os=Xv({typed:Oe}),Pi=w2({typed:Oe}),zi=am({Matrix:DS,equalScalar:Xn,typed:Oe}),wl=fu({typed:Oe}),Ui=Bc({typed:Oe}),R0=eT({Fraction:ei,typed:Oe}),Nl=vy({typed:Oe}),Ut=nT({DenseMatrix:wn,Matrix:DS,SparseMatrix:zi,typed:Oe}),Sl=xy({bignumber:Mo,fraction:R0,number:Pi}),Xs=bT({matrix:Ut,config:yt,typed:Oe}),Fn=hw({DenseMatrix:wn,addScalar:ys,equalScalar:Xn,matrix:Ut,typed:Oe,unaryMinus:Ui}),Qh=BT({BigNumber:oe,DenseMatrix:wn,Fraction:ei,config:yt,equalScalar:Xn,matrix:Ut,typed:Oe}),qr=wm({numeric:Sl,typed:Oe}),L0=zy({compare:Qh,isNaN:wl,isNumeric:Nl,typed:Oe}),us=dA({DenseMatrix:wn,SparseMatrix:zi,addScalar:ys,equalScalar:Xn,matrix:Ut,typed:Oe}),sg=TA({addScalar:ys,conj:Zc,multiplyScalar:os,size:Xs,typed:Oe}),Yc=aN({BigNumber:oe,DenseMatrix:wn,SparseMatrix:zi,config:yt,matrix:Ut,typed:Oe}),Ps=PA({addScalar:ys,dot:sg,equalScalar:Xn,matrix:Ut,multiplyScalar:os,typed:Oe}),bM=n0({divideScalar:qr,isZero:Ym,matrix:Ut,multiply:Ps,subtract:Fn,typed:Oe,unaryMinus:Ui}),ag=PN({add:us,compare:Qh,multiply:Ps,partitionSelect:L0,typed:Oe}),fg=kk({add:us,compare:Qh,divide:ak({divideScalar:qr,equalScalar:Xn,inv:AE({abs:ti,addScalar:ys,det:bM,divideScalar:qr,identity:Yc,matrix:Ut,multiply:Ps,typed:Oe,unaryMinus:Ui}),matrix:Ut,multiply:Ps,typed:Oe}),partitionSelect:L0,typed:Oe});class VM extends ku{constructor({strategy:u="mean",constant:l,quantile:f}={}){super(),De(this,"strategy"),De(this,"constant"),De(this,"quantile"),De(this,"name","DummyRegressor"),De(this,"tf"),this.tf=Ie(),this.strategy=u,this.constant=l,this.quantile=f}fit(u,l){ue(Yt(l),"y variable can not be converted to a 1D Tensor."),ue(["mean","median","constant","quantile"].includes(this.strategy),`Strategy ${this.strategy} not supported. We support 'mean', 'median', 'constant', and 'quantile'`);const f=Ze(l);return"mean"===this.strategy?(this.constant=f.mean().dataSync()[0],this):"median"===this.strategy?(this.constant=fg(f.arraySync()),this):"quantile"===this.strategy?(ue("number"==typeof this.quantile&&!isNaN(this.quantile)&&isFinite(this.quantile),"quantile is not set to a number. Please set it to a value between 0 and 1 in the constructor"),ue(this.quantile<0||this.quantile>1,"quantile must be set to a value between 0 and 1"),this.constant=ag(f.arraySync(),this.quantile),this):this}predict(u){ue($t(u),"Data can not be converted to a 2D matrix.");let f=xt(u).shape[0];return this.tf.tensor1d(Array(f).fill(this.constant))}}function Y0(o){for(var l,u=new Map,f=0,h=0;h<o.length;h++){var p=u.get(o[h]);void 0===p?p=1:p++,p>f&&(l=o[h],f=p),u.set(o[h],p)}if(0===f)throw new Error("mode requires at last one data point");return l}var rb=function(){this.totalCount=0,this.data={}};rb.prototype.train=function(u,l){for(var f in this.data[l]||(this.data[l]={}),u){var h=u[f];void 0===this.data[l][f]&&(this.data[l][f]={}),void 0===this.data[l][f][h]&&(this.data[l][f][h]=0),this.data[l][f][h]++}this.totalCount++},rb.prototype.score=function(u){var f,l={};for(var h in u){var p=u[h];for(f in this.data)l[f]={},l[f][h+"_"+p]=this.data[f][h]?(this.data[f][h][p]||0)/this.totalCount:0}var b={};for(f in l)for(var w in b[f]=0,l[f])b[f]+=l[f][w];return b};var ad=function(){this.weights=[],this.bias=0};ad.prototype.predict=function(u){if(u.length!==this.weights.length)return null;for(var l=0,f=0;f<this.weights.length;f++)l+=this.weights[f]*u[f];return(l+=this.bias)>0?1:0},ad.prototype.train=function(u,l){if(0!==l&&1!==l)return null;u.length!==this.weights.length&&(this.weights=u,this.bias=1);var f=this.predict(u);if("number"==typeof f&&f!==l){for(var h=l-f,p=0;p<this.weights.length;p++)this.weights[p]+=h*u[p];this.bias+=h}return this},Math.log(Math.sqrt(2*Math.PI)),Math.sqrt(2*Math.PI);var vC=Math.sqrt(2*Math.PI);function ob(o){for(var u=o,l=o,f=1;f<15;f++)u+=l*=o*o/(2*f+1);return Math.round(1e4*(.5+u/vC*Math.exp(-o*o/2)))/1e4}for(var id=[],ef=0;ef<=3.09;ef+=.01)id.push(ob(ef));var EO=te(8799),xg=te.n(EO);class kO extends ro{constructor({strategy:u="mostFrequent",constant:l=0}={}){super(),De(this,"constant"),De(this,"strategy"),De(this,"classes"),De(this,"name","DummyClassifier"),De(this,"tf"),this.tf=Ie(),this.constant=l,this.strategy=u,this.classes=[]}fit(u,l){ue(Yt(l),"Data can not be converted to a 1D or 2D matrix."),ue(["mostFrequent","uniform","constant"].includes(this.strategy),`Strategy ${this.strategy} not supported. We support 'mostFrequent', 'uniform', and 'constant'`);const f=Ze(l);return this.classes=_u()(f.arraySync()),"mostFrequent"===this.strategy?(this.constant=Y0(f.arraySync()),this):this}predictProba(u){return ue($t(u),"Data can not be converted to a 1D or 2D matrix."),ue(["mostFrequent","uniform","constant"].includes(this.strategy),`Strategy ${this.strategy} not supported. We support 'mostFrequent', 'uniform', and 'constant'`),this.tf.oneHot(this.predict(u).toInt(),this.classes.length)}predict(u){ue($t(u),"Data can not be converted to a 1D or 2D matrix."),ue(["mostFrequent","uniform","constant"].includes(this.strategy),`Strategy ${this.strategy} not supported. We support 'mostFrequent', 'uniform', and 'constant'`);let f=xt(u).shape[0];if("mostFrequent"===this.strategy||"constant"===this.strategy)return this.tf.tensor1d(Array(f).fill(this.constant));let h=[];for(let p=0;p<f;p++)h.push(xg()(this.classes));return this.tf.tensor1d(h)}}function mD(o,u,l){let f=Ie();return l?f.tidy(()=>f.where(o.isNaN(),-1/0,o).max(u)):o.min(u)}function AC(o,u,l){let f=Ie();return l?f.tidy(()=>f.where(o.isNaN(),0,o).sum(u)):o.sum(u)}function db(o,u,l){let f=Ie();return l?f.tidy(()=>f.logicalNot(o.isNaN()).sum(u)):f.onesLike(o).sum(u)}function Ng(o,u,l,f){let h=Ie();return l?h.tidy(f?()=>AC(o,u,l).div(El(db(o,u,l))):()=>AC(o,u,l).div(db(o,u,l))):o.mean(u)}function El(o){let u=Ie();return u.tidy(()=>{const l=u.zerosLike(o),f=o.equal(l);return o.add(f)})}class ud extends li{constructor({featureRange:u=[0,1]}={}){super(),De(this,"featureRange"),De(this,"scale"),De(this,"min"),De(this,"dataMin"),De(this,"dataMax"),De(this,"dataRange"),De(this,"nFeaturesIn"),De(this,"nSamplesSeen"),De(this,"featureNamesIn"),De(this,"name","MinMaxScaler"),this.tf=Ie(),this.featureRange=u,this.scale=this.tf.tensor1d([]),this.min=this.tf.tensor1d([]),this.dataMin=this.tf.tensor1d([]),this.dataMax=this.tf.tensor1d([]),this.dataRange=this.tf.tensor1d([]),this.nFeaturesIn=0,this.nSamplesSeen=0,this.featureNamesIn=[]}isNumber(u){return"number"==typeof u&&isFinite(u)}fit(u){ue($t(u),"Data can not be converted to a 2D matrix."),ue(this.isNumber(this.featureRange[0])&&this.isNumber(this.featureRange[1])&&this.featureRange[0]<this.featureRange[1],"featureRange needs to contain exactly two numbers where the first is less than the second");const l=xt(u),f=mD(l,0,!0),h=function MO(o,u,l){let f=Ie();return l?f.tidy(()=>f.where(o.isNaN(),1/0,o).min(u)):o.min(u)}(l,0,!0),p=f.sub(h);return this.scale=this.tf.div(this.featureRange[1]-this.featureRange[0],El(p)),this.min=this.tf.sub(this.featureRange[0],h.mul(this.scale)),this.dataMin=h,this.dataMax=f,this.dataRange=p,this.nSamplesSeen=l.shape[0],this.nFeaturesIn=l.shape[1],Tt(u)&&(this.featureNamesIn=[...u.columns]),this}transform(u){return ue($t(u),"Data can not be converted to a 2D matrix."),xt(u).mul(this.scale).add(this.min)}inverseTransform(u){return ue($t(u),"Data can not be converted to a 2D matrix."),xt(u).sub(this.min).div(this.scale)}}class vD extends li{constructor({withMean:u=!0,withStd:l=!0}={}){super(),De(this,"scale"),De(this,"mean"),De(this,"withMean"),De(this,"withStd"),De(this,"nFeaturesIn"),De(this,"nSamplesSeen"),De(this,"featureNamesIn"),De(this,"name","StandardScaler"),this.tf=Ie(),this.withMean=u,this.withStd=l,this.scale=this.tf.tensor1d([]),this.mean=this.tf.tensor1d([]),this.nFeaturesIn=0,this.nSamplesSeen=0,this.featureNamesIn=[]}fit(u){ue($t(u),"Data can not be converted to a 2D matrix.");const l=xt(u);if(this.withMean&&(this.mean=Ng(l,0,!0)),this.withStd){const f=function EC(o,u,l){return ue(Boolean(l),"We only need to call this function when ignoreNaN is true"),Ie().tidy(()=>{const h=Ng(o,u,l),p=db(o,u,l),b=AC(o.sub(h).square(),u,l),w=El(p);return b.div(w).sqrt()})}(l,0,!0);this.scale=El(f)}return this.nSamplesSeen=l.shape[0],this.nFeaturesIn=l.shape[1],Tt(u)&&(this.featureNamesIn=[...u.columns]),this}transform(u){ue($t(u),"Data can not be converted to a 2D matrix.");let l=xt(u);return this.withMean&&(l=l.sub(this.mean)),this.withStd&&(l=l.div(this.scale)),l}inverseTransform(u){ue($t(u),"Data can not be converted to a 2D matrix.");let l=xt(u);return this.withStd&&(l=l.mul(this.scale)),this.withMean&&(l=l.add(this.mean)),l}}class yD extends li{constructor(){super(),De(this,"scale"),De(this,"nFeaturesIn"),De(this,"nSamplesSeen"),De(this,"featureNamesIn"),De(this,"name","MaxAbsScaler"),this.tf=Ie(),this.scale=this.tf.tensor1d([]),this.nFeaturesIn=0,this.nSamplesSeen=0,this.featureNamesIn=[]}fit(u){ue($t(u),"Data can not be converted to a 2D matrix.");const l=xt(u),f=mD(l.abs(),0,!0);return this.scale=El(f),this.nSamplesSeen=l.shape[0],this.nFeaturesIn=l.shape[1],Tt(u)&&(this.featureNamesIn=[...u.columns]),this}transform(u){return ue($t(u),"Data can not be converted to a 2D matrix."),xt(u).div(this.scale)}inverseTransform(u){return ue($t(u),"Data can not be converted to a 2D matrix."),xt(u).mul(this.scale)}}function pb(o){return o.filter(l=>!function bD(o){return null==o||isNaN(o)&&"string"!=typeof o}(l))}class kC extends li{constructor({strategy:u="mean",fillValue:l,missingValues:f=NaN}={}){super(),De(this,"missingValues"),De(this,"fillValue"),De(this,"strategy"),De(this,"statistics"),De(this,"name","SimpleImputer"),De(this,"tf"),this.tf=Ie(),this.missingValues=f,this.strategy=u,this.fillValue=l,this.statistics=this.tf.tensor1d([])}fit(u){if("constant"===this.strategy)return this;if("mean"===this.strategy){const f=Ng(xt(u),0,!0);return this.statistics=f,this}if("mostFrequent"===this.strategy){const f=xt(u).transpose().arraySync().map(h=>Y0(pb(h)));return this.statistics=this.tf.tensor1d(f),this}if("median"===this.strategy){const f=xt(u).transpose().arraySync().map(h=>fg(pb(h)));return this.statistics=this.tf.tensor1d(f),this}throw new Error(`Strategy ${this.strategy} is unsupported. Supported strategies are 'mean', 'median', 'mostFrequent', and 'constant'`)}transform(u){if("constant"===this.strategy){const f=ve(u);return this.tf.where(f.isNaN(),void 0===this.fillValue?"string"!==f.dtype?0:"missing_value":this.fillValue,f)}const l=xt(u);return this.tf.where(l.isNaN(),this.statistics.reshape([1,-1]),l)}}class MC extends Wn{constructor(){super(),De(this,"classes"),De(this,"name","LabelEncoder"),De(this,"tf"),this.tf=Ie(),this.classes=[]}convertTo1DArray(u){return nt(u)?u.values:Ke(u)?u.arraySync():u}classesToMapping(u){const l=new Map;return u.forEach((f,h)=>{l.set(f,h)}),l}fit(u){const l=this.convertTo1DArray(u),f=Array.from(new Set(l));return this.classes=f,this}transform(u){const l=this.convertTo1DArray(u),f=this.classesToMapping(this.classes),h=l.map(p=>{let b=f.get(p);return void 0===b?-1:b});return this.tf.tensor1d(h)}fitTransform(u){return this.fit(u).transform(u)}inverseTransform(u){const l=this.convertTo1DArray(u),f=this.classesToMapping(this.classes),h=new Map(Array.from(f,b=>b.reverse()));return l.map(b=>void 0===h.get(b)?null:h.get(b))}}class xD extends li{constructor({categories:u="auto",handleUnknown:l="error",unknownValue:f=NaN}={}){super(),De(this,"categories"),De(this,"handleUnknown"),De(this,"unknownValue"),De(this,"categoriesParam"),De(this,"nFeaturesIn"),De(this,"featureNamesIn"),De(this,"name","OrdinalEncoder"),this.tf=Ie(),this.categoriesParam=u,this.categories=[],this.handleUnknown=l,this.unknownValue=f,this.nFeaturesIn=0,this.featureNamesIn=[]}classesToMapping(u){const l=new Map;return u.forEach((f,h)=>{l.set(f,h)}),l}loopOver2DArrayToSetLabels(u){for(let l=0;l<u[0].length;l++){let f=new Set;for(let p=0;p<u.length;p++)f.add(u[p][l]);let h=Array.from(f);this.categories.push(h)}}fit(u,l){const f=or(u);return"auto"===this.categoriesParam?(this.loopOver2DArrayToSetLabels(f),this):(this.categories=this.categoriesParam,this.nFeaturesIn=0===f.length?0:f[0].length||0,Tt(u)&&(this.featureNamesIn=[...u.columns]),this)}loopOver2DArrayToUseLabels(u){let l=this.categories.map(h=>this.classesToMapping(h)),f=[];for(let h=0;h<u.length;h++){let p=[];for(let b=0;b<u[0].length;b++){let w=u[h][b],N=l[b].get(w);if(void 0===N){if("error"===this.handleUnknown)throw new Error(`Unknown value ${w} encountered while transforming. Not encountered in training data`);N=this.unknownValue}p.push(N)}f.push(p)}return f}transform(u,l){const f=or(u),h=this.loopOver2DArrayToUseLabels(f);return this.tf.tensor2d(h,void 0,"int32")}}class DC extends li{constructor({norm:u="l2"}={}){super(),De(this,"norm"),De(this,"nFeaturesIn"),De(this,"featureNamesIn"),De(this,"name","Normalizer"),this.tf=Ie(),this.norm=u,this.nFeaturesIn=0,this.featureNamesIn=[]}fit(u){ue($t(u),"Data can not be converted to a 2D matrix.");const l=xt(u);return this.nFeaturesIn=l.shape[1],Tt(u)&&(this.featureNamesIn=[...u.columns]),this}transform(u){ue($t(u),"Data can not be converted to a 2D matrix.");const l=xt(u);if("l1"===this.norm){const h=this.tf.abs(l).sum(1).reshape([-1,1]);return l.divNoNan(h)}if("l2"===this.norm){const h=l.square().sum(1).sqrt().reshape([-1,1]);return l.divNoNan(h)}const f=this.tf.abs(l).max(1).reshape([-1,1]);return l.divNoNan(f)}}class ld extends Wn{constructor({steps:u=[]}={}){super(),De(this,"steps"),De(this,"name","Pipeline"),this.steps=u,this.validateSteps(this.steps)}isTransformer(u){return"passthrough"===u||"function"==typeof u.fit&&"function"==typeof u.transform&&"function"==typeof u.fitTransform}isEstimator(u){return"passthrough"===u||"function"==typeof u.fit}validateSteps(u){if(ue(Array.isArray(u),`steps is not an array. It is ${u}`),0===u.length)return;for(let f=0;f<u.length-1;f++){const h=u[f];ue(Array.isArray(h),`A single step in your pipeline must be an array containing a string as the first argument, and the transformer in the second. Something akin to ['minmaxscaler', new MinMaxScaler()]. Instead it is ${h}`),ue(this.isTransformer(h[1]),`The ${f}th step in your pipeline isn't an array containing a name and a Transformer. Instead it is ${u[f]}.`)}let l=u[u.length-1];ue(Array.isArray(l),`The last element in your pipeline must be a 2-element array that contains a string as the first argument, and an estimator as the second. Instead it is ${l}`),ue(this.isEstimator(l[1]),`The last element in your pipeline should be an Estimator. Instead it is ${l}`)}transformExceptLast(u){let l=u;for(let f=0;f<this.steps.length-1;f++){const[,h]=this.steps[f];"passthrough"!==h&&(l=h.transform(l))}return l}fitTransformExceptLast(u){let l=u;for(let f=0;f<this.steps.length-1;f++){const[,h]=this.steps[f];"passthrough"!==h&&(l=h.fitTransform(l))}return l}getLastEstimator(){return 0===this.steps.length?null:this.steps[this.steps.length-1][1]}assertEstimatorHasFunction(u,l){ue(null!==u,`Your final Estimator is null and therefore you can't call ${l}`),ue("function"==typeof u[l],`Estimator ${u} doesn't implement the function ${l}`)}fit(u,l){var f=this;return(0,Re.Z)(function*(){f.validateSteps(f.steps);const h=f.getLastEstimator();f.assertEstimatorHasFunction(h,"fit");let p=f.fitTransformExceptLast(u);return yield h.fit(p,l),f})()}transform(u){this.validateSteps(this.steps);const l=this.getLastEstimator();this.assertEstimatorHasFunction(l,"transform");let f=this.transformExceptLast(u);return l.transform(f)}fitTransform(u,l){this.validateSteps(this.steps);const f=this.getLastEstimator();this.assertEstimatorHasFunction(f,"fitTransform");let h=this.fitTransformExceptLast(u);return f.fitTransform(h)}predict(u){this.validateSteps(this.steps);const l=this.getLastEstimator();this.assertEstimatorHasFunction(l,"predict");let f=this.transformExceptLast(u);return l.predict(f)}fitPredict(u,l){var f=this;return(0,Re.Z)(function*(){f.validateSteps(f.steps);const h=f.getLastEstimator();f.assertEstimatorHasFunction(h,"fitPredict");let p=f.fitTransformExceptLast(u);return yield h.fitPredict(p,l)})()}}function RC(...o){let u=[];for(let l=0;l<o.length;l++){let f=o[l];u.push([f.name,f])}return new ld({steps:u})}function mb(o){return Array.isArray(o)&&"string"==typeof o[0]}class $C extends Wn{constructor({transformers:u=[],remainder:l="drop"}={}){super(),De(this,"transformers"),De(this,"remainder"),De(this,"name","ColumnTransformer"),De(this,"tf"),this.tf=Ie(),this.transformers=u,this.remainder=l}fit(u,l){for(let f=0;f<this.transformers.length;f++){let[,h,p]=this.transformers[f],b=this.getColumns(u,p);h.fit(b,l)}return this}transform(u,l){let f=[];for(let h=0;h<this.transformers.length;h++){let[,p,b]=this.transformers[h],w=this.getColumns(u,b);f.push(p.transform(w,l))}return this.tf.concat(f,1)}fitTransform(u,l){let f=[];for(let h=0;h<this.transformers.length;h++){let[,p,b]=this.transformers[h],w=this.getColumns(u,b);f.push(p.fitTransform(w,l))}return this.tf.concat(f,1)}getColumns(u,l){if(Tt(u))return mb(l)?u.loc({columns:l}).tensor:Array.isArray(l)?u.iloc({columns:l}).tensor:"string"==typeof l?u[l].tensor:u.iloc({columns:[l]}).tensor;if(mb(l)||"string"==typeof l)throw new Error("Can't pass string selected columns when not a DataFrame");if("number"==typeof l){let f=this.tf.tensor1d([l]);return u.gather(f,1)}{let f=this.tf.tensor1d(l);return u.gather(f,1)}}}function gb(o){return o.filter(l=>!function OC(o){return null==o||isNaN(o)&&"string"!=typeof o}(l))}class FC extends li{constructor({quantileRange:u=[25,75],withCentering:l=!0,withScaling:f=!0}={}){super(),De(this,"scale"),De(this,"center"),De(this,"nFeaturesIn"),De(this,"featureNamesIn"),De(this,"quantileRange"),De(this,"withScaling"),De(this,"withCentering"),De(this,"name","RobustScaler"),this.tf=Ie(),this.scale=this.tf.tensor1d([]),this.center=this.tf.tensor1d([]),this.quantileRange=u,this.withScaling=f,this.withCentering=l,this.nFeaturesIn=0,this.featureNamesIn=[]}isNumber(u){return"number"==typeof u&&isFinite(u)}fit(u){ue($t(u),"Data can not be converted to a 2D matrix."),ue(this.isNumber(this.quantileRange[0])&&this.isNumber(this.quantileRange[1]),"quantileRange values must be numbers");let l=this.quantileRange[0],f=this.quantileRange[1];ue(l<f&&0<=l&&l<=100&&0<=f&&f<=100,"quantileRange numbers must be between 0 and 100");const h=xt(u),p=h.transpose().arraySync();if(this.withCentering){const b=p.map(w=>ag(gb(w),.5));this.center=this.tf.tensor1d(b)}if(this.withScaling){const b=p.map(N=>ag(gb(N),[l/100,f/100])),w=this.tf.tensor1d(b.map(N=>N[1]-N[0]));this.scale=El(w)}return this.nFeaturesIn=h.shape[1],Tt(u)&&(this.featureNamesIn=[...u.columns]),this}transform(u){ue($t(u),"Data can not be converted to a 2D matrix.");let l=xt(u);return this.withCentering&&(l=l.sub(this.center)),this.withScaling&&(l=l.div(this.scale)),l}inverseTransform(u){ue($t(u),"Data can not be converted to a 2D matrix.");let l=xt(u);return this.withScaling&&(l=l.mul(this.scale)),this.withCentering&&(l=l.add(this.center)),l}}class LC extends Wn{constructor({nClusters:u=8,init:l="random",maxIter:f=300,tol:h=1e-4,nInit:p=10,randomState:b}={}){super(),De(this,"nClusters"),De(this,"init"),De(this,"nInit"),De(this,"maxIter"),De(this,"tol"),De(this,"randomState"),De(this,"clusterCenters"),De(this,"name","KMeans"),De(this,"tf"),this.tf=Ie(),this.nClusters=u,this.init=l,this.maxIter=f,this.tol=h,this.randomState=b,this.nInit=p,this.clusterCenters=this.tf.tensor2d([[]])}initCentroids(u){if("random"!==this.init)throw new Error(`init ${this.init} is not currently implemented`);{let l=Zr(u.shape[0],this.nClusters,this.randomState);this.clusterCenters=this.tf.gather(u,l)}}closestCentroid(u){return this.tf.tidy(()=>{const l=this.tf.expandDims(u,1),f=this.tf.expandDims(this.clusterCenters,0);return this.tf.squaredDifference(l,f).sum(2).argMin(1)})}updateCentroids(u,l){return this.tf.tidy(()=>{const f=[];for(let h=0;h<this.nClusters;h++){const p=this.tf.equal(l,this.tf.scalar(h).toInt()),b=this.tf.div(this.tf.sum(this.tf.mul(this.tf.expandDims(p.toFloat(),1),u),0),this.tf.sum(p.toFloat()));f.push(b)}return this.tf.stack(f)})}fit(u){let l=xt(u);this.initCentroids(l);for(let f=0;f<this.maxIter;f++){const h=this.closestCentroid(l);this.clusterCenters=this.updateCentroids(l,h)}return this}predict(u){let l=xt(u);return this.closestCentroid(l)}transform(u){return this.tf.tidy(()=>{const l=xt(u),f=this.tf.expandDims(l,1),h=this.tf.expandDims(this.clusterCenters,0);return this.tf.squaredDifference(f,h).sum(2).sqrt()})}fitPredict(u){return this.fit(u).predict(u)}fitTransform(u){return this.fit(u).transform(u)}score(u){return this.tf.tidy(()=>{const l=xt(u),f=this.tf.expandDims(l,1),h=this.tf.expandDims(this.clusterCenters,0);return this.tf.squaredDifference(f,h).sum(2).min(1).sqrt().sum()})}}const BC={loadBoston:"http://scikitjs.org/data/boston.csv",loadIris:"http://scikitjs.org/data/iris.csv",loadWine:"http://scikitjs.org/data/wine.csv",loadDiabetes:"http://scikitjs.org/data/diabetes.csv",loadBreastCancer:"http://scikitjs.org/data/breast_cancer.csv",loadDigits:"http://scikitjs.org/data/digits.csv",fetchCaliforniaHousing:"http://scikitjs.org/data/california_housing.csv"};class vb extends ku{constructor({estimators:u=[],weights:l}={}){super(),De(this,"estimators"),De(this,"weights"),De(this,"name","VotingRegressor"),this.tf=Ie(),this.estimators=u,this.weights=l}fit(u,l){var f=this;return(0,Re.Z)(function*(){var h;for(let p=0;p<(null==(h=f.estimators)?void 0:h.length);p++){let[b,w]=f.estimators[p];yield w.fit(u,l)}return f})()}predict(u){let l=[],f=this.estimators.length;const h=this.weights||Array(f).fill(1/f);for(let p=0;p<f;p++){let[b,w]=this.estimators[p],N=h[p];l.push(w.predict(u).mul(N))}return this.tf.addN(l)}transform(u){let l=[],f=this.estimators.length;for(let h=0;h<f;h++){let[p,b]=this.estimators[h];l.push(b.predict(u))}return l}fitTransform(u,l){var f=this;return(0,Re.Z)(function*(){return(yield f.fit(u,l)).transform(u)})()}}function PC(...o){let u=[];for(let l=0;l<o.length;l++){let f=o[l];u.push([f.name,f])}return new vb({estimators:u})}class yb extends ro{constructor({estimators:u=[],weights:l,voting:f="hard"}={}){super(),De(this,"estimators"),De(this,"weights"),De(this,"le"),De(this,"name","VotingClassifier"),De(this,"tf"),this.tf=Ie(),this.estimators=u,this.weights=l,this.voting=f,this.le=new MC}fit(u,l){var f=this;return(0,Re.Z)(function*(){var p;let h=f.le.fitTransform(l);for(let b=0;b<(null==(p=f.estimators)?void 0:p.length);b++){let[w,N]=f.estimators[b];yield N.fit(u,h)}return f})()}predictProba(u){let l=[],f=this.estimators.length;const h=this.weights||Array(f).fill(1/f);for(let p=0;p<f;p++){let[b,w]=this.estimators[p],N=h[p];l.push(w.predictProba(u).mul(N))}return this.tf.addN(l)}predict(u){let l=[],f=this.estimators.length;const h=this.weights||Array(f).fill(1/f);if("hard"===this.voting){for(let p=0;p<f;p++){let[b,w]=this.estimators[p],N=h[p],S=w.predict(u).toInt(),x=this.tf.oneHot(S,this.le.classes.length);l.push(x.mul(N))}return this.tf.tensor1d(this.le.inverseTransform(this.tf.addN(l).argMax(1)))}for(let p=0;p<f;p++){let[b,w]=this.estimators[p],N=h[p],S=w.predictProba(u);l.push(S.mul(N))}return this.tf.tensor1d(this.le.inverseTransform(this.tf.addN(l).argMax(1)))}transform(u){let l=[],f=this.estimators.length;if("hard"===this.voting){for(let h=0;h<f;h++){let[p,b]=this.estimators[h];l.push(b.predict(u))}return l}for(let h=0;h<f;h++){let[p,b]=this.estimators[h];l.push(b.predictProba(u))}return l}fitTransform(u,l){var f=this;return(0,Re.Z)(function*(){return(yield f.fit(u,l)).transform(u)})()}}function zC(...o){let u=[];for(let l=0;l<o.length;l++){let f=o[l];u.push([f.name,f])}return new yb({estimators:u})}class VC{constructor({metric:u,entries:l}){De(this,"_metric"),De(this,"_entries"),De(this,"tf"),this._metric=u,this._entries=l,this.tf=Ie()}kNearest(u,l){const{_metric:f,_entries:h}=this;return ue(h.shape[1]==l.shape[1],"X_train.shape[1] must equal X_predict.shape[1]"),this.tf.tidy(()=>{const p=this.tf.unstack(l).map(b=>this.tf.tidy(()=>{const w=f.tensorDistance(b,h).neg(),{values:N,indices:S}=this.tf.topk(w,u);return[N,S]}));return{distances:this.tf.stack(p.map(b=>b[0])).neg(),indices:this.tf.stack(p.map(b=>b[1]))}})}}const cd=o=>(u,l)=>{var b,w;let f=Ie();return ue((null!=(b=u.shape[u.rank-1])?b:NaN)===(null!=(w=l.shape[l.rank-1])?w:NaN),`minkowskiDistance(${o}).tensorDistance(u,v): u.shape[-1] must equal v.shape[-1].`),f.tidy(()=>f.norm(f.sub(u,l),o,-1))},fd=o=>{switch(o){case 1:return UC;case 2:return WC;case 1/0:return GC}ue(1<=o,"minkowskiMetric(p): Invalid p.");const u={tensorDistance:cd(o),distance(l,f){const h=l.length;if(h!==f.length)throw new Error(`minkowskiMetric(${o}).treeMetric(u,v): u and v must have same length.`);let p=0;for(let b=0;b<h;b++)p+=Math.abs(l[b]-f[b])**o;return p**(1/o)},distToBBox(l,f){if(2*l.length!=f.length)throw new Error(`minkowskiMetric(${o}).treeMetric.minDistToBBox(pt,bBox): pt.length*2 must equal bBox.length.`);let h=0;for(let p=0,b=0;b<l.length;b++)h+=Math.max(0,f[p++]-l[b],l[b]-f[p++])**o;return h**(1/o)},name:`minkowskiMetric(${o})`,toString(){return this.name}};return Object.freeze(u)},UC=Object.freeze({tensorDistance:cd(1),distance(o,u){const l=o.length;if(l!==u.length)throw new Error("minkowskiMetric(1).distance(u,v): u and v must have same length.");let f=0;for(let h=0;h<l;h++)f+=Math.abs(o[h]-u[h]);return f},minDistToBBox(o,u){const l=u.length;if(l!==o.length<<1)throw new Error("minkowskiMetric(1).minDistToBBox(pt,bBox): pt.length*2 must equal bBox.length.");let f=0;for(let h=0;h<l;){const p=o[h>>>1],b=u[h++]-p,w=p-u[h++];f+=.5*(Math.abs(b)+b+(Math.abs(w)+w))}return f},name:"manhattanMetric",toString(){return this.name}}),WC=Object.freeze({tensorDistance:cd(2),distance(o,u){const l=o.length;if(l!==u.length)throw new Error("minkowskiMetric(2).distance(u,v): u and v must have same length.");let f=0;for(let h=0;h<l;h++){const p=o[h]-u[h];f+=p*p}return Math.sqrt(f)},minDistToBBox(o,u){const l=u.length;if(l!==2*o.length)throw new Error("minkowskiMetric(2).minDistToBBox(pt,bBox): pt.length*2 must equal bBox.length.");let f=0;for(let h=0;h<l;){const p=o[h>>>1],b=u[h++]-p,w=p-u[h++],N=.5*(Math.abs(b)+b+(Math.abs(w)+w));f+=N*N}return Math.sqrt(f)},name:"euclideanMetric",toString(){return this.name}}),GC=Object.freeze({tensorDistance:cd(1/0),distance(o,u){const l=o.length;if(l!==u.length)throw new Error("minkowskiMetric(Infinity).distance(u,v): u and v must have same length.");let f=0;for(let h=0;h<l;h++){const p=Math.abs(o[h]-u[h]);f=Math.max(f,p)}return f},minDistToBBox(o,u){const l=u.length;if(l!==2*o.length)throw new Error("minkowskiMetric(Infinity).minDistToBBox(pt,bBox): pt.length*2 must equal bBox.length.");let f=-1/0;for(let h=0;h<l;){const p=o[h>>>1],b=u[h++]-p,w=p-u[h++],N=.5*(Math.abs(b)+b+(Math.abs(w)+w));f=Math.max(f,N)}return f},name:"chebyshevMetric",toString(){return this.name}});function qC(o,u){let l=new HC(o),f=()=>l.next();return function wD(o,u,l){let f=l&&l.state;f&&("object"==typeof f&&u.copy(f,u),o.state=()=>u.copy(u,{}))}(f,l,u),f}class HC{constructor(u){De(this,"c"),De(this,"s0"),De(this,"s1"),De(this,"s2"),null==u&&(u=+new Date);let l=4022871197;function f(h){h=String(h);for(let p=0;p<h.length;p++){l+=h.charCodeAt(p);let b=.02519603282416938*l;l=b>>>0,b-=l,b*=l,l=b>>>0,b-=l,l+=4294967296*b}return 2.3283064365386963e-10*(l>>>0)}this.c=1,this.s0=f(" "),this.s1=f(" "),this.s2=f(" "),this.s0-=f(u),this.s0<0&&(this.s0+=1),this.s1-=f(u),this.s1<0&&(this.s1+=1),this.s2-=f(u),this.s2<0&&(this.s2+=1)}next(){let{c:u,s0:l,s1:f,s2:h}=this,p=2091639*l+2.3283064365386963e-10*u;return this.s0=f,this.s1=h,this.s2=p-(this.c=0|p)}copy(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}}const bb=o=>(u,l)=>{if(u>=l)throw new Error("randInt(rng)(from,until): from must be less than until.");const f=Math.floor(u+(l-u)*o());return f===l?f-1:f};class ND{constructor(u,l){De(this,"_keys"),De(this,"_vals"),De(this,"_pos");const f=u.length;ue(f>0,"new CappedMaxHeap(keys,vals): keys.length must be positive."),ue(f===l.length,"new CappedMaxHeap(keys,vals): keys.length must equal vals.length."),u[0]=NaN,this._keys=u,this._vals=l,this._pos=f}get maxKey(){return this._keys[0]}add(u,l){let{_keys:f,_vals:h,_pos:p}=this;if(0<p)this._pos=--p;else if(f[0]<=u)return;const b=f.length-1;for(;;){let w=1+(p<<1);if(w>b||(w+=+(w<b&&f[w]<f[w+1]),f[w]<=u))break;f[p]=f[w],h[p]=h[w],p=w}f[p]=u,h[p]=l}sort(){const{_keys:u,_vals:l,_pos:f}=this;ue(0===f,"CappedMaxHeap().sort(): Heap is not full yet.");const h=(N,S)=>{let x=u[N];u[N]=u[S],u[S]=x;let v=l[N];l[N]=l[S],l[S]=v},p=N=>{u[N]>u[N+1]&&h(N,N+1)},b=N=>{p(N),u[N+1]>u[N+2]&&(h(N+1,N+2),p(N))},w=(N,S)=>{switch(S-N){case 0:case 1:return;case 2:return p(N);case 3:return b(N)}const x=N+S>>>1;b(x-1);const v=u[x];h(N,x);let I=N,_=N+1;for(let A=_;A<S;A++){let E=u[A];E<=v&&(h(A,_),E<v&&h(I++,_),_++)}w(N,I),w(_,S)};w(0,u.length)}}const xb=o=>1+(o<<1);class Sg{constructor(u,l,f,h,p,b,w){De(this,"_nSamples"),De(this,"_nFeatures"),De(this,"_metric"),De(this,"_points"),De(this,"_indices"),De(this,"_bBoxes"),De(this,"_offsets"),De(this,"tf"),this.tf=Ie(),this._nSamples=u,this._nFeatures=l,this._metric=f,this._points=h,this._bBoxes=p,this._offsets=b,this._indices=w,Object.freeze(this)}static build({metric:u,entries:l,leafSize:f=16}){return(0,Re.Z)(function*(){ue(1<f,"new KdTree({leafSize=16}): leafSize must be a positive number."),ue("function"==typeof u.minDistToBBox,"new KdTree({metric}): metric must implement `minDistToBBox` function.");const[h,p]=l.shape,b=new Int32Array(h);for(let W=0;W<h;W++)b[W]=W;const w=(yield l.data()).slice(),N=Array.from(b,(W,O)=>w.subarray(p*O,p*++O)),S=(ue(0<=(o=h/f)&&o<=1073741824,"ceilPow2(x): x must be in range [0, 1<<30]."),o=Math.ceil(o),o=Math.max(o,1),2147483648>>>-1+Math.clz32(o-1)),x=2*S-1,v=x-S,I=new Int32Array(S+1),_=function(){const W=2*p,O=new Float32Array(x*W),P=[];for(let z=0;z<x;)P.push(O.subarray(W*z,W*++z));return P}(),A=bb(qC(`KdTree[${h},${p}]`)),E=(W,O)=>{const P=b[W];b[W]=b[O],b[O]=P},B=(W,O,P)=>{const z=_[W];for(let X=0;X<z.length;X++)z[X]=X%2?-1/0:1/0;for(let X=O;X<P;X++){const H=p*b[X];for(let Q=0;Q<z.length;){const ne=w[H+(Q>>>1)];z[Q]=Math.min(z[Q++],ne),z[Q]=Math.max(z[Q++],ne)}}if(v<=W){const X=W-v;return I[X]=O,void(I[X+1]=P)}const F=function(){let X=0,H=-1/0;for(let Q=z.length;Q>0;){const ne=z[--Q]-z[--Q];ne>H&&(H=ne,X=Q>>>1)}return X}(),Z=O+P>>>1;for(let X=O,H=P;;){const Q=w[p*b[A(X,H)]+F];let ne=X,de=X;for(let we=X;we<H;we++){let Te=w[p*b[we]+F];Te<=Q&&(E(we,de),Te<Q&&E(ne++,de),de++)}if(ne>Z)H=ne;else{if(!(de<Z))break;X=de}}const j=xb(W);B(j,O,Z),B(j+1,Z,P)};var o;B(0,0,h);const L=(W,O)=>{O*=p;for(const P=(W*=p)+p;W<P;W++,O++){const z=w[W];w[W]=w[O],w[O]=z}};for(let W=b.slice(),O=0;O<h;O++)for(let P=O;;){let z=W[P];if(W[P]=P,z===O)break;L(P,P=z)}return new Sg(h,p,u,N,_,I,b)})()}kNearest(u,l){const{_nSamples:f,_nFeatures:h,_metric:p,_points:b,_bBoxes:w,_offsets:N,_indices:S}=this;u=Math.min(u,f);const[x,v]=l.shape;ue(h===v,"KNeighbors: X_train.shape[1] must equal X_predict.shape[1].");const I=new Float32Array(x*u),_=new Int32Array(x*u),A=1+(w.length-1-1>>1);if(0<u&&0<x){const E=l.dataSync();let B,L;const W=(O,P)=>{if(!(P>=B.maxKey))if(O<A){const z=xb(O),F=p.minDistToBBox(L,w[z]),Z=p.minDistToBBox(L,w[z+1]);F<=Z?(W(z,F),W(z+1,Z)):(W(z+1,Z),W(z,F))}else{const F=N[1+(O-=A)];for(let Z=N[O];Z<F;Z++){const j=p.distance(L,b[Z]);B.add(j,S[Z])}}};for(let O=0;O<x;O++){L=E.subarray(v*O,v*(O+1));const P=u*O,z=u+P;B=new ND(I.subarray(P,z),_.subarray(P,z)),W(0,p.minDistToBBox(L,w[0]))}}return{distances:this.tf.tensor2d(I,[x,u],"float32"),indices:this.tf.tensor2d(_,[x,u],"int32")}}}const XC={uniform(o){let u=Ie();const{shape:l}=o;return u.fill(l,1/l[1])},distance(o){let u=Ie();return u.tidy(()=>{const l=o.min(1,!0),f=u.divNoNan(l.toFloat(),o),h=o.lessEqual(0).toFloat(),p=u.where(l.lessEqual(0),h,f),b=p.sum(1,!0);return p.div(b)})}},YC={minkowski:o=>fd(o),manhattan:()=>fd(1),euclidean:()=>fd(2),chebyshev:()=>fd(1/0)},hd={kdTree:Sg.build,brute:(o=(0,Re.Z)(function*(u){return new VC(u)}),function(l){return o.apply(this,arguments)}),auto:o=>"function"==typeof o.metric.minDistToBBox?hd.kdTree(o):hd.brute(o)};var o;class Cg extends Wn{constructor(u={}){super(),De(this,"_neighborhood"),De(this,"_y"),De(this,"weights"),De(this,"algorithm"),De(this,"leafSize"),De(this,"p"),De(this,"metric"),De(this,"nNeighbors"),Object.assign(this,u)}_getFitParams(){const{_neighborhood:u,_y:l,nNeighbors:f=5,weights:h="uniform"}=this;return ue(0<=f&&f%1==0,"KNeighbors({nNeighbors})::predict(X): nNeighbors must be a positive int."),ue(Object.keys(XC).includes(h),"KNeighbors({weights})::predict(X): invalid weights."),ue(null!=u&&null!=l,"KNeighbors::predict(X): model not trained yet. Call `await fit(x, y)` first."),{nNeighbors:f,weightsFn:XC[h],neighborhood:u,y:l}}fit(u,l){var f=this;return(0,Re.Z)(function*(){const{algorithm:h="auto",metric:p="minkowski",p:b=2,leafSize:w}=f;ue(Object.keys(YC).includes(p),"KNeighbors({metric}).fit(X,y): invalid metric."),ue(Object.keys(hd).includes(h),"KNeighbors({algorithm}).fit(X,y): invalid algorithm.");const N=YC[p](b),S=xt(u);return f._neighborhood=yield hd[h]({entries:S,metric:N,leafSize:w}),f._y=Ze(l),f})()}}De(Cg,"SUPPORTED_ALGORITHMS",Object.freeze(Object.keys(hd)));class JC extends Cg{constructor(){super(...arguments),De(this,"name","KNeighborsRegressor")}predict(u){let l=Ie();const{neighborhood:f,y:h,nNeighbors:p,weightsFn:b}=this._getFitParams();return l.tidy(()=>{const w=xt(u),{distances:N,indices:S}=f.kNearest(p,w),x=h.gather(S),v=b(N);return l.matMul(x.reshape([-1,1,p]),v.reshape([-1,p,1])).as1D()})}}function QC(o){o.engine().backendNames().includes("tensorflow")&&!o.getKernel("Unique","tensorflow")&&(console.info("[scikit.js] Installing tfjs-node polyfill for tf.unique()."),o.registerKernel({kernelName:"Unique",backendName:"tensorflow",kernelFunc:u=>{const l=u.inputs.x,f=u.backend,{axis:h}=u.attrs,p=o.tensor1d([h],"int32"),b={float32:f.binding.TF_FLOAT,float64:f.binding.TF_DOUBLE,int32:f.binding.TF_INT32,int64:f.binding.TF_INT64,complex64:f.binding.TF_COMPLEX64,bool:f.binding.TF_BOOL,string:f.binding.TF_STRING};ue(Object.keys(b).includes(l.dtype),"Unexpected dtype.");try{return f.executeMultipleOutputs("UniqueV2",[{value:b[l.dtype],name:"T",type:f.binding.TF_ATTR_TYPE},{value:b.int32,name:"Taxis",type:f.binding.TF_ATTR_TYPE},{value:b.int32,name:"out_idx",type:f.binding.TF_ATTR_TYPE}],[l,p],2)}finally{p.dispose()}}}))}function CD(o,u){let l=Ie();return l.tidy(()=>{u=Ye(u);const f=this.predict(o);return l.equal(u,f).sum().div(u.shape[0])})}class ID extends Cg{constructor(){super(...arguments),De(this,"classes_"),De(this,"score",CD),De(this,"name","KNeighborsClassifier")}predictProba(u){var N;const{neighborhood:l,y:f,nNeighbors:h,weightsFn:p}=this._getFitParams(),[b]=null==(N=this.classes_)?void 0:N.shape;let w=Ie();return w.tidy(()=>{const S=xt(u),x=S.shape[0],{distances:v,indices:I}=l.kNearest(h,S),_=f.gather(I),A=p(v),E=w.oneHot(_,b);return w.mul(E.reshape([x,h,b]),A.reshape([x,h,1])).sum(1)})}predict(u){const l=this.classes_;return Ie().tidy(()=>{const p=this.predictProba(u).argMax(1);return l.gather(p)})}fit(u,l){var f=()=>super.fit,h=this;return(0,Re.Z)(function*(){let p=Ie();const{values:b,indices:w}=p.tidy(()=>{const N=Ye(l);return QC(p),p.unique(N)});return yield f().call(h,u,w),h.classes_=b,h})()}}class _D extends tn{constructor({penalty:u="l2",C:l=1,fitIntercept:f=!0}={}){let h=Ie();super({modelCompileArgs:{optimizer:h.train.adam(.1),loss:h.losses.hingeLoss,metrics:["accuracy"]},modelFitArgs:{batchSize:32,epochs:1e3,verbose:0,callbacks:[h.callbacks.earlyStopping({monitor:"loss",patience:50})]},denseLayerArgs:{units:1,useBias:Boolean(f),activation:"softmax",kernelInitializer:h.initializers.zeros(),biasInitializer:h.initializers.zeros(),kernelRegularizer:"l2"===u?h.regularizers.l2({l2:l}):"l1"===u?h.regularizers.l1({l1:l}):void 0},isClassification:!0,optimizerType:"adam",lossType:"hingeLoss"}),this.name="LinearSVC"}}class TD extends Hs{constructor({epsilon:u=0,C:l=1,fitIntercept:f=!0}={}){let h=Ie();super({modelCompileArgs:{optimizer:h.train.adam(.1),loss:function(p,b){return h.abs(h.sub(p,b)).sub(u).maximum(0)},metrics:["accuracy"]},modelFitArgs:{batchSize:32,epochs:1e3,verbose:0,callbacks:[h.callbacks.earlyStopping({monitor:"loss",patience:50})]},denseLayerArgs:{units:1,useBias:Boolean(f),kernelRegularizer:h.regularizers.l2({l2:l})},optimizerType:"adam",lossType:"custom"}),this.name="LinearSVR"}}class AD extends Wn{constructor(u={}){super(),De(this,"priors"),De(this,"varSmoothing"),De(this,"classes"),De(this,"means"),De(this,"variances"),De(this,"tf"),this.tf=Ie(),this.classes=this.tf.tensor1d([]),this.means=[],this.variances=[],u.priors&&(this.priors=Ye(u.priors)),this.varSmoothing=u.varSmoothing?u.varSmoothing:1e-9}fit(u,l){var f=this;return(0,Re.Z)(function*(){const h=xt(u),p=Ye(l),{values:b,meansByLabel:w,variancesByLabel:N}=f.tf.tidy(()=>{QC(f.tf);const S=[],x=[],{values:v}=f.tf.unique(p),{variance:I}=f.tf.moments(h,0),_=I.max().mul(f.varSmoothing);return f.tf.unstack(v).forEach(A=>{const E=f.tf.equal(p,A).toFloat(),B=f.tf.sum(E),L=f.tf.mul(h,E.expandDims(1)).sum(0).div(B),W=f.tf.sub(h,L).mul(E.expandDims(1)).pow(2).sum(0).div(B).add(_);S.push(L),x.push(W)}),{values:v,meansByLabel:S,variancesByLabel:x}});return f.classes=b,f.means=w,f.variances=N,f})()}predictProba(u){const l=xt(u);return this.tf.tidy(()=>{let h=[];this.classes.unstack().forEach((b,w)=>{const x=this.kernel(l,this.means[w],this.variances[w]);h.push(x)});const p=this.tf.stack(h,1);return this.priors?p.mul(this.priors):p})}predict(u){return this.predictProba(u).argMax(1)}}class ED extends AD{constructor(){super(...arguments),De(this,"name","GaussianNB")}kernel(u,l,f){let h=Ie();return h.tidy(()=>h.sub(u,l.expandDims(0)).pow(2).div(f.expandDims(0).mul(-2)).exp().div(f.mul(2*Math.PI).expandDims(0).sqrt()).prod(1))}}function eI(o,u){let l=0;for(let f=0;f<o.length;f++)l+=o[f]*o[f];return 1-l/(u*u)}function tI(o,u){let l=0;for(let f=0;f<o.length;f++){let h=o[f];h>0&&(h/=u,l-=h*Math.log2(h))}return l}function nI(o,u,l){let f=u/l;return o/l-f*f}class Ig extends Wn{constructor({impurityMeasure:u,y:l}){super(),De(this,"y"),De(this,"impurityMeasure"),De(this,"start",0),De(this,"end",0),De(this,"pos",0),De(this,"nLabels"),De(this,"labelFreqsTotal",[]),De(this,"labelFreqsLeft",[]),De(this,"labelFreqsRight",[]),De(this,"nSamples",0),De(this,"nSamplesLeft",0),De(this,"nSamplesRight",0),De(this,"name","ClassificationCriterion"),this.impurityMeasure=u,this.nLabels=function kD(o){let u=Number.NEGATIVE_INFINITY;for(let l=0;l<o.length;l++)o[l]>u&&(u=o[l]);return u}(l)+1,this.y=l,this.labelFreqsTotal=new Array(this.nLabels).fill(0),this.labelFreqsLeft=new Array(this.nLabels).fill(0),this.labelFreqsRight=new Array(this.nLabels).fill(0)}init(u,l,f){this.start=u,this.end=l,this.nSamples=l-u,this.labelFreqsTotal=this.labelFreqsTotal.fill(0),this.labelFreqsLeft=this.labelFreqsLeft.fill(0),this.labelFreqsRight=this.labelFreqsRight.fill(0);for(let h=u;h<l;h++)this.labelFreqsTotal[this.y[f[h]]]+=1}reset(){this.pos=this.start,this.labelFreqsLeft=this.labelFreqsLeft.fill(0),this.labelFreqsRight=this.labelFreqsRight.fill(0)}update(u,l){for(let f=this.pos;f<u;f++)this.labelFreqsLeft[this.y[l[f]]]+=1;for(let f=0;f<this.labelFreqsTotal.length;f++)this.labelFreqsRight[f]=this.labelFreqsTotal[f]-this.labelFreqsLeft[f];this.pos=u,this.nSamplesLeft=this.pos-this.start,this.nSamplesRight=this.end-this.pos}childrenImpurities(){let u="gini"===this.impurityMeasure?eI:tI;return{impurityLeft:u(this.labelFreqsLeft,this.nSamplesLeft),impurityRight:u(this.labelFreqsRight,this.nSamplesRight)}}impurityImprovement(){let{impurityLeft:u,impurityRight:l}=this.childrenImpurities();return-this.nSamplesLeft*u-this.nSamplesRight*l}nodeImpurity(){return("gini"===this.impurityMeasure?eI:tI)(this.labelFreqsTotal,this.nSamples)}nodeValue(){return this.labelFreqsTotal}static fromJson(u){const l=JSON.parse(u),f=new Ig({impurityMeasure:l.impurityMeasure,y:l.y});return Object.assign(f,l)}}class _g extends Wn{constructor({impurityMeasure:u,y:l}){super(),De(this,"y"),De(this,"impurityMeasure"),De(this,"start",0),De(this,"end",0),De(this,"pos",0),De(this,"squaredSum",0),De(this,"squaredSumLeft",0),De(this,"squaredSumRight",0),De(this,"sumTotal",0),De(this,"sumTotalLeft",0),De(this,"sumTotalRight",0),De(this,"nSamples",0),De(this,"nSamplesLeft",0),De(this,"nSamplesRight",0),De(this,"name","RegressionCriterion"),this.impurityMeasure=u,this.y=l}init(u,l,f){this.sumTotal=0,this.squaredSum=0,this.start=u,this.end=l,this.nSamples=l-u;for(let h=u;h<l;h++){let b=this.y[f[h]];this.sumTotal+=b,this.squaredSum+=b*b}}reset(){this.pos=this.start,this.squaredSumLeft=0,this.sumTotalLeft=0,this.squaredSumRight=0,this.sumTotalRight=0}update(u,l){for(let f=this.pos;f<u;f++){let p=this.y[l[f]];this.sumTotalLeft+=p,this.squaredSumLeft+=p*p}this.sumTotalRight=this.sumTotal-this.sumTotalLeft,this.squaredSumRight=this.squaredSum-this.squaredSumLeft,this.pos=u,this.nSamplesLeft=this.pos-this.start,this.nSamplesRight=this.end-this.pos}childrenImpurities(){let u=nI;return{impurityLeft:u(this.squaredSumLeft,this.sumTotalLeft,this.nSamplesLeft),impurityRight:u(this.squaredSumRight,this.sumTotalRight,this.nSamplesRight)}}impurityImprovement(){let{impurityLeft:u,impurityRight:l}=this.childrenImpurities();return-this.nSamplesLeft*u-this.nSamplesRight*l}nodeImpurity(){return nI(this.squaredSum,this.sumTotal,this.nSamples)}nodeValue(){return[this.sumTotal/this.nSamples]}static fromJson(u){const l=JSON.parse(u),f=new _g({impurityMeasure:l.impurityMeasure,y:l.y});return Object.assign(f,l)}}var MD=te(9336),DD=te.n(MD);function wb(){return{feature:0,threshold:0,pos:-1,impurityLeft:Number.POSITIVE_INFINITY,impurityRight:Number.POSITIVE_INFINITY,foundSplit:!1}}class rI extends Wn{constructor({X:u,y:l,minSamplesLeaf:f,impurityMeasure:h,maxFeatures:p,samplesSubset:b=[]}){if(super(),De(this,"kMinSplitDiff"),De(this,"X"),De(this,"y"),De(this,"criterion"),De(this,"start"),De(this,"end"),De(this,"minSamplesLeaf"),De(this,"maxFeatures"),De(this,"featureOrder"),De(this,"shuffleFeatures"),De(this,"sampleMap"),De(this,"nSamplesTotal"),De(this,"nFeatures"),De(this,"name","Splitter"),this.X=u,this.y=l,this.nFeatures=u[0].length,this.minSamplesLeaf=f,this.maxFeatures=Math.min(p,this.nFeatures),this.shuffleFeatures=p<this.nFeatures,this.sampleMap=new Int32Array(u.length),this.start=0,this.end=0,this.kMinSplitDiff=1e-8,0===b.length){this.nSamplesTotal=u.length;for(let w=0;w<this.nSamplesTotal;w++)this.sampleMap[w]=w}else{this.nSamplesTotal=b.length;for(let w=0;w<this.nSamplesTotal;w++)this.sampleMap[w]=b[w]}this.criterion="squared_error"===h?new _g({impurityMeasure:h,y:l}):new Ig({impurityMeasure:h,y:l}),this.featureOrder=[];for(let w=0;w<this.nFeatures;w++)this.featureOrder.push(w);this.resetSampleRange(0,this.nSamplesTotal)}resetSampleRange(u,l){this.start=u,this.end=l,this.criterion.init(u,l,this.sampleMap)}splitNode(){let u=wb(),l=wb(),f=Number.NEGATIVE_INFINITY,h=Number.NEGATIVE_INFINITY,p=0,b=0;for(u.foundSplit=!1,this.shuffleFeatures&&(this.featureOrder=DD()(this.featureOrder));p<this.maxFeatures;){b=this.featureOrder[p];let w=new Float32Array(this.end-this.start);for(let S=this.start;S<this.end;S++)w[S-this.start]=this.X[this.sampleMap[S]][b];if(w.sort(),this.criterion.reset(),this.sampleMap.subarray(this.start,this.end).sort((S,x)=>this.X[S][b]-this.X[x][b]),w[0]===w[w.length-1]){p+=1;continue}let N=this.start+1;for(;N<this.end;){for(;N<this.end&&w[N-this.start]<=w[N-this.start-1]+this.kMinSplitDiff;)N++;N!==this.end?(N-this.start<this.minSamplesLeaf||this.end-N<this.minSamplesLeaf||(u.pos=N,this.criterion.update(u.pos,this.sampleMap),f=this.criterion.impurityImprovement(),f>h&&(h=f,u.foundSplit=!0,u.feature=b,u.threshold=(w[N-this.start-1]+w[N-this.start])/2,l=Object.assign({},u))),N+=1):N++}p+=1}if(u.foundSplit){if(l.pos<this.end&&b!==l.feature){let S=this.start,x=this.end,v=0;for(;S<x;)this.X[this.sampleMap[S]][l.feature]<=l.threshold?S+=1:(x-=1,v=this.sampleMap[S],this.sampleMap[S]=this.sampleMap[x],this.sampleMap[x]=v)}this.criterion.reset(),this.criterion.update(l.pos,this.sampleMap);let{impurityLeft:w,impurityRight:N}=this.criterion.childrenImpurities();return l.impurityLeft=w,l.impurityRight=N,l}return u}}function Nb(o){if(0===o.length)throw new Error(`X can not be empty, but it has a length of 0. It is ${o}.`);for(let u=0;u<o.length;u++){let l=o[u];if(0===l.length)throw new Error(`Rows in X can not be empty, but row ${u} in X is ${l}.`);for(let f=0;f<l.length;f++)if("number"!=typeof l[f]||!Number.isFinite(l[f]))throw new Error(`X must contain finite non-NaN numbers, but the element at X[${u}][${f}] is ${l[f]}`)}}function $D(o){return o.map((u,l)=>[u,l]).reduce((u,l)=>l[0]>u[0]?l:u)[1]}class sI{constructor(){De(this,"nodes",[]),De(this,"isBuilt",!1),De(this,"name","DecisionTree")}getLeafNodes(u){let l=[];for(let f=0;f<u.length;f++){let h=0;for(;!this.nodes[h].isLeaf;)h=u[f][this.nodes[h].splitFeature]<=this.nodes[h].threshold?this.nodes[h].leftChildId:this.nodes[h].rightChildId;l.push(h)}return l}populateChildIds(){for(let u=1;u<this.nodes.length;u++)this.nodes[u].isLeft?this.nodes[this.nodes[u].parentId].leftChildId=u:this.nodes[this.nodes[u].parentId].rightChildId=u}predictProba(u){if(!this.isBuilt)throw new Error("Decision tree must be built with BuildTree method before predictions can be made.");let l=this.getLeafNodes(u),f=[];for(let h=0;h<l.length;h++){let p=[],b=l[h];for(let w=0;w<this.nodes[0].value.length;w++)p.push(this.nodes[b].value[w]/this.nodes[b].nSamples);f.push(p)}return f}predictClassification(u){if(!this.isBuilt)throw new Error("Decision tree must be built with BuildTree method before predictions can be made.");let l=this.getLeafNodes(u),f=[];for(let h=0;h<l.length;h++)f.push($D(this.nodes[l[h]].value));return f}predictRegression(u){if(!this.isBuilt)throw new Error("Decision tree must be built with BuildTree method before predictions can be made.");let l=this.getLeafNodes(u),f=[];for(let h=0;h<l.length;h++)f.push(this.nodes[l[h]].value[0]);return f}}class Sb extends Wn{constructor({criterion:u="gini",maxDepth:l=Number.POSITIVE_INFINITY,minSamplesSplit:f=2,minSamplesLeaf:h=1,maxFeatures:p,minImpurityDecrease:b=0}={}){super(),De(this,"splitter"),De(this,"stack",[]),De(this,"minSamplesLeaf"),De(this,"maxDepth"),De(this,"minSamplesSplit"),De(this,"minImpurityDecrease"),De(this,"tree"),De(this,"criterion"),De(this,"maxFeatures"),De(this,"maxFeaturesNumb"),De(this,"X",[]),De(this,"y",[]),De(this,"labelEncoder"),De(this,"name"),this.criterion=u,this.maxDepth=void 0===l?Number.POSITIVE_INFINITY:Number(l),this.minSamplesSplit=f,this.minSamplesLeaf=h,this.maxFeatures=p,this.minImpurityDecrease=b,this.maxFeaturesNumb=0,this.tree=new sI,this.name="DecisionTreeBase"}calcMaxFeatures(u,l){return"log2"===l?Math.floor(Math.log2(u)):"sqrt"===l||"auto"===l?Math.floor(Math.sqrt(u)):"number"==typeof l?(ue(l>=1,"maxFeatures must be greater than 1"),Math.min(Math.floor(l),u)):u}fit(u,l,f){this.X=u,this.y=l;let h=f||[];this.maxFeaturesNumb=this.calcMaxFeatures(u[0].length,this.maxFeatures),this.splitter=new rI({X:u,y:l,minSamplesLeaf:this.minSamplesLeaf,impurityMeasure:this.criterion,maxFeatures:this.maxFeaturesNumb,samplesSubset:h}),this.stack.push({start:0,end:this.splitter.sampleMap.length,depth:0,impurity:0,nSamples:this.splitter.sampleMap.length,parentId:-1,isLeft:!1});let b=!0;for(;0!==this.stack.length;){let w=this.stack.pop();this.splitter.resetSampleRange(w.start,w.end);let N=wb(),S=!(w.depth<this.maxDepth)||w.nSamples<this.minSamplesSplit||w.nSamples<2*this.minSamplesLeaf;b&&(w.impurity=this.splitter.criterion.nodeImpurity(),b=!1),S||(N=this.splitter.splitNode(),S=S||!N.foundSplit||w.impurity<=this.minImpurityDecrease);let x={parentId:w.parentId,impurity:w.impurity,isLeaf:S,isLeft:w.isLeft,nSamples:w.nSamples,splitFeature:N.feature,threshold:N.threshold,value:this.splitter.criterion.nodeValue().slice(),leftChildId:-1,rightChildId:-1};this.tree.nodes.push(x);let v=this.tree.nodes.length-1;S||(this.stack.push({start:N.pos,end:w.end,nSamples:w.end-N.pos,depth:w.depth+1,parentId:v,isLeft:!1,impurity:N.impurityRight}),this.stack.push({start:w.start,end:N.pos,nSamples:N.pos-w.start,depth:w.depth+1,parentId:v,isLeft:!0,impurity:N.impurityLeft}))}this.tree.populateChildIds(),this.tree.isBuilt=!0}}class OD extends Sb{constructor({criterion:u="gini",maxDepth:l,minSamplesSplit:f=2,minSamplesLeaf:h=1,maxFeatures:p,minImpurityDecrease:b=0}={}){ue(["gini","entropy"].includes(u),'For classification must pass either the "gini" or "entropy" criterion'),super({criterion:u,maxDepth:l,minSamplesSplit:f,minSamplesLeaf:h,maxFeatures:p,minImpurityDecrease:b}),De(this,"labelEncoder"),De(this,"name"),this.labelEncoder=new MC,this.name="DecisionTreeClassifier"}fit(u,l){ue(Yt(l),"y value is not a 1D container"),ue($t(u),"X value is not a 2D container");let f=or(u),h=ur(l);ue(f.length===h.length,"X and y must be the same size"),Nb(f),function RD(o){if(0===o.length)throw new Error(`y can not be empty, but it has a length of 0. It is ${o}.`);for(let u=0;u<o.length;u++){let l=o[u];if(!Number.isSafeInteger(l))throw new Error(`Some y values are not an integer. Found ${l} but must be an integer only`)}}(h);let p=this.labelEncoder.fitTransform(h);return super.fit(f,ur(p)),this}getNLeaves(){return this.tree.nodes.filter(u=>u.isLeaf).length}predict(u){ue($t(u),"X value is not a 2D container");let l=or(u);Nb(l);let f=this.tree.predictClassification(l);return this.labelEncoder.inverseTransform(f)}predictProba(u){return this.tree.predictProba(u)}score(u,l){return no(l,this.predict(u))}}class FD extends Sb{constructor({criterion:u="squared_error",maxDepth:l,minSamplesSplit:f=2,minSamplesLeaf:h=1,maxFeatures:p,minImpurityDecrease:b=0}={}){ue(["squared_error"].includes(u),'Must pass the regression criterion of "squared_error"'),super({criterion:u,maxDepth:l,minSamplesSplit:f,minSamplesLeaf:h,maxFeatures:p,minImpurityDecrease:b}),De(this,"name"),this.name="DecisionTreeRegressor"}fit(u,l){ue(Yt(l),"y value is not a 1D container"),ue($t(u),"X value is not a 2D container");let f=or(u),h=ur(l);return ue(f.length===h.length,"X and y must be the same size"),Nb(f),super.fit(f,h),this}getNLeaves(){return this.tree.nodes.filter(u=>u.isLeaf).length}predict(u){return this.tree.predictRegression(u)}score(u,l){return Tu(l,this.predict(u))}}const LD=({nSamples:o=100,nFeatures:u=100,nInformative:l=10,nTargets:f=1,noise:h=1,bias:p=0,effectiveRank:b=null,tailStrength:w=.5,shuffle:N=!1,coef:S=!1}={})=>{let x=Ie();return x.tidy(()=>{const v=Math.min(u,l);let I;I=null===b?x.randomNormal([o,u]):aI({nSamples:o,nFeatures:u,effectiveRank:b,tailStrength:w});const _=x.randomNormal([v,f]).mul(100),A=x.zeros([u-v,f]),E=x.concat([_,A]);let B=I.dot(E).add(p);if(h>0&&(B=B.add(x.randomNormal(B.shape,void 0,h))),N){const L=x.util.createShuffledIndices(o);I=I.gather(L)}return B=x.squeeze(B),S?[I,B,x.squeeze(E)]:[I,B]})},aI=({nSamples:o=100,nFeatures:u=100,effectiveRank:l=10,tailStrength:f=.5}={})=>{let h=Ie();return h.tidy(()=>{let p=Math.min(o,u),[b]=h.linalg.qr(h.randomNormal([o,p])),[w]=h.linalg.qr(h.randomNormal([u,p]));const S=h.range(0,p).div(l),x=h.exp(S.square().neg()).mul(1-f);let v=h.exp(S.mul(-.1)).mul(f),I=x.add(v);return b.mul(I).dot(w.transpose())})};class iI{constructor({nSplits:u=5,shuffle:l=!1,randomState:f}={}){De(this,"nSplits"),De(this,"shuffle"),De(this,"randomState"),De(this,"name"),De(this,"tf"),u=Number(u),ue(Number.isInteger(u)&&u>1,"new KFold({nSplits}): nSplits must be an int greater than 1."),this.tf=Ie(),this.nSplits=u,this.shuffle=Boolean(l),this.randomState=f,this.name="KFold"}getNumSplits(){return this.nSplits}*split(u,l,f){const{nSplits:h,shuffle:p,randomState:b}=this,w=lr(u);ue(h<=w,"KFold({nSplits})::split(X): nSplits must not be greater than X.shape[0]."),null!=l&&ue(w===lr(l),"KFold::split(X,y): X.shape[0] must equal y.shape[0]."),null!=f&&ue(w===lr(f),"KFold::split(X,y,groups): X.shape[0] must equal groups.shape[0].");const N=new Int32Array(w);for(let I=0;I<N.length;I++)N[I]=I;if(p){const I=(o=>qC(null==o?void 0:o.toString()))(b);(o=>u=>{const l=bb(o);for(let f=u.length;f>1;f--){const h=l(0,f),p=u[f-1];u[f-1]=u[h],u[h]=p}})(I)(N)}const S=Math.floor(w/h);let x=w%h,v=0;for(;v<w;){const I=x-- >0?S+1:S,_=new Int32Array(w-I);_.set(N.subarray(0,v),0),_.set(N.subarray(v+I),v);const A=N.slice(v,v+I);yield{trainIndex:this.tf.tensor1d(_,"int32"),testIndex:this.tf.tensor1d(A,"int32")},v+=I}}}function Tg(o,u){let l=Ie();return Ke(o)?l.gather(o,u):Tt(o)?o.iloc({rows:u}):nt(o)?o.iloc(u):u.map(f=>o[f])}function PD(o,u,l=.1,f,h){const p=lr(o);ue(p===lr(u),"X and y don't have the same number of elements. They are of different size");let[w,N]=function BD(o,u,l,f=.1){if(ue(void 0===l||"number"==typeof l,`Invalid value for trainSize: ${l}. Must be number or undefined`),ue(void 0===u||"number"==typeof u,`Invalid value for testSize: ${u}. Must be number or undefined`),void 0===u&&void 0===l&&(u=f),"number"==typeof u&&(Number.isInteger(u)&&(u>=o||u<=0)||!Number.isInteger(u)&&(u<=0||u>=1)))throw Error(`testSize=${u} should be either positive and smaller than the number of samples ${o} or a float in the (0, 1) range`);if("number"==typeof l&&(Number.isInteger(l)&&(l>=o||l<=0)||!Number.isInteger(l)&&(l<=0||l>=1)))throw Error(`trainSize=${l} should be either positive and smaller than the number of samples ${o} or a float in the (0, 1) range`);if(!Number.isInteger(l)&&!Number.isInteger(u)&&l&&u&&l+u>1)throw Error(`The sum of testSize and trainSize = ${l+u}, should be in the (0, 1) range. Reduce testSize and/or trainSize.`);let h,p;if(Number.isInteger(u)?h=u:"number"==typeof u&&(h=Math.ceil(u*o)),Number.isInteger(l)?p=l:"number"==typeof l&&(p=Math.ceil(l*o)),void 0===l&&(p=o-h),void 0===u&&(h=o-p),"number"!=typeof p||"number"!=typeof h)throw Error("nTrain and nTest must be a number");if(p+h>o)throw Error(`The sum of trainSize and testSize = ${p+h}, should be smaller than the number of samples ${o}. Reduce testSize and/or trainSize.`);if(p=Math.floor(p),h=Math.floor(h),0===p)throw Error(`With nSamples=${o}, testSize=${u} and trainSize=${l}, the resulting train set will be empty. Adjust any of the aforementioned parameters.`);return[p,h]}(p,l,f),S=Zr(p,p,h),x=S.slice(0,w),v=S.slice(w);return[Tg(o,x),Tg(o,v),Tg(u,x),Tg(u,v)]}function zD(o,u,l,f){return Cb.apply(this,arguments)}function Cb(){return Cb=(0,Re.Z)(function*(o,u,l,f){let h=Ie(),p=null==l||null==f&&!Yt(l);p&&(f=null!=f?f:l);let{cv:b=new iI,groups:w,scoring:N}=null!=f?f:{};null==N&&(ue("function"==typeof o.score,"crossValScore(estimator,[X,y],params): Either params.scoring or estimator.score(X,y) must be defined."),N=o.score);const S=[];let x;N=N.bind(o),h.engine().startScope();try{u=ve(u),p||(l=Ye(l));for(const{trainIndex:v,testIndex:I}of b.split(u,l,w)){let _;const A=u.gather(v),E=u.gather(I);if(p)yield o.fit(A),_=N(E);else{const B=l.gather(v),L=l.gather(I);yield o.fit(A,B),_=N(E,L),B.dispose(),L.dispose()}S.push(_),v.dispose(),I.dispose(),A.dispose(),E.dispose()}return x=h.stack(S)}finally{h.engine().endScope(x)}}),Cb.apply(this,arguments)}},340:(be,Ve,te)=>{var xe=te(9471),Re=te(2992),Ne=te(7657),Se=te(5583),Ie=te(1929),Ge=te(8083),vt=te(3818);vt.alea=xe,vt.xor128=Re,vt.xorwow=Ne,vt.xorshift7=Se,vt.xor4096=Ie,vt.tychei=Ge,be.exports=vt},9471:function(be,Ve,te){var xe;!function(Re,Ne,Se){function Ie(ue){var me=this,Y=function tt(){var ue=4022871197;return function(Y){Y=String(Y);for(var re=0;re<Y.length;re++){var ie=.02519603282416938*(ue+=Y.charCodeAt(re));ie-=ue=ie>>>0,ue=(ie*=ue)>>>0,ue+=4294967296*(ie-=ue)}return 2.3283064365386963e-10*(ue>>>0)}}();me.next=function(){var re=2091639*me.s0+2.3283064365386963e-10*me.c;return me.s0=me.s1,me.s1=me.s2,me.s2=re-(me.c=0|re)},me.c=1,me.s0=Y(" "),me.s1=Y(" "),me.s2=Y(" "),me.s0-=Y(ue),me.s0<0&&(me.s0+=1),me.s1-=Y(ue),me.s1<0&&(me.s1+=1),me.s2-=Y(ue),me.s2<0&&(me.s2+=1),Y=null}function Ge(ue,me){return me.c=ue.c,me.s0=ue.s0,me.s1=ue.s1,me.s2=ue.s2,me}function vt(ue,me){var Y=new Ie(ue),re=me&&me.state,ie=Y.next;return ie.int32=function(){return 4294967296*Y.next()|0},ie.double=function(){return ie()+11102230246251565e-32*(2097152*ie()|0)},ie.quick=ie,re&&("object"==typeof re&&Ge(re,Y),ie.state=function(){return Ge(Y,{})}),ie}Ne&&Ne.exports?Ne.exports=vt:te.amdD&&te.amdO?void 0!==(xe=function(){return vt}.call(Ve,te,Ve,Ne))&&(Ne.exports=xe):this.alea=vt}(0,be=te.nmd(be))},8083:function(be,Ve,te){var xe;!function(Re,Ne,Se){function Ie(tt){var ue=this,me="";ue.next=function(){var re=ue.b,ie=ue.c,ge=ue.d,Be=ue.a;return re=re<<25^re>>>7^ie,ie=ie-ge|0,ge=ge<<24^ge>>>8^Be,Be=Be-re|0,ue.b=re=re<<20^re>>>12^ie,ue.c=ie=ie-ge|0,ue.d=ge<<16^ie>>>16^Be,ue.a=Be-re|0},ue.a=0,ue.b=0,ue.c=-1640531527,ue.d=1367130551,tt===Math.floor(tt)?(ue.a=tt/4294967296|0,ue.b=0|tt):me+=tt;for(var Y=0;Y<me.length+20;Y++)ue.b^=0|me.charCodeAt(Y),ue.next()}function Ge(tt,ue){return ue.a=tt.a,ue.b=tt.b,ue.c=tt.c,ue.d=tt.d,ue}function vt(tt,ue){var me=new Ie(tt),Y=ue&&ue.state,re=function(){return(me.next()>>>0)/4294967296};return re.double=function(){do{var Be=((me.next()>>>11)+(me.next()>>>0)/4294967296)/(1<<21)}while(0===Be);return Be},re.int32=me.next,re.quick=re,Y&&("object"==typeof Y&&Ge(Y,me),re.state=function(){return Ge(me,{})}),re}Ne&&Ne.exports?Ne.exports=vt:te.amdD&&te.amdO?void 0!==(xe=function(){return vt}.call(Ve,te,Ve,Ne))&&(Ne.exports=xe):this.tychei=vt}(0,be=te.nmd(be))},2992:function(be,Ve,te){var xe;!function(Re,Ne,Se){function Ie(tt){var ue=this,me="";ue.x=0,ue.y=0,ue.z=0,ue.w=0,ue.next=function(){var re=ue.x^ue.x<<11;return ue.x=ue.y,ue.y=ue.z,ue.z=ue.w,ue.w^=ue.w>>>19^re^re>>>8},tt===(0|tt)?ue.x=tt:me+=tt;for(var Y=0;Y<me.length+64;Y++)ue.x^=0|me.charCodeAt(Y),ue.next()}function Ge(tt,ue){return ue.x=tt.x,ue.y=tt.y,ue.z=tt.z,ue.w=tt.w,ue}function vt(tt,ue){var me=new Ie(tt),Y=ue&&ue.state,re=function(){return(me.next()>>>0)/4294967296};return re.double=function(){do{var Be=((me.next()>>>11)+(me.next()>>>0)/4294967296)/(1<<21)}while(0===Be);return Be},re.int32=me.next,re.quick=re,Y&&("object"==typeof Y&&Ge(Y,me),re.state=function(){return Ge(me,{})}),re}Ne&&Ne.exports?Ne.exports=vt:te.amdD&&te.amdO?void 0!==(xe=function(){return vt}.call(Ve,te,Ve,Ne))&&(Ne.exports=xe):this.xor128=vt}(0,be=te.nmd(be))},1929:function(be,Ve,te){var xe;!function(Re,Ne,Se){function Ie(tt){var ue=this;ue.next=function(){var ge,Be,Y=ue.w,re=ue.X,ie=ue.i;return ue.w=Y=Y+1640531527|0,Be=re[ie+34&127],ge=re[ie=ie+1&127],Be^=Be<<13,ge^=ge<<17,Be=re[ie]=(Be^=Be>>>15)^(ge^=ge>>>12),ue.i=ie,Be+(Y^Y>>>16)|0},function me(Y,re){var ie,ge,Be,Ke,nt,Tt=[],Yt=128;for(re===(0|re)?(ge=re,re=null):(re+="\0",ge=0,Yt=Math.max(Yt,re.length)),Be=0,Ke=-32;Ke<Yt;++Ke)re&&(ge^=re.charCodeAt((Ke+32)%re.length)),0===Ke&&(nt=ge),ge^=ge<<10,ge^=ge>>>15,ge^=ge<<4,ge^=ge>>>13,Ke>=0&&(Be=0==(ie=Tt[127&Ke]^=ge+(nt=nt+1640531527|0))?Be+1:0);for(Be>=128&&(Tt[127&(re&&re.length||0)]=-1),Be=127,Ke=512;Ke>0;--Ke)ge=Tt[Be+34&127],ie=Tt[Be=Be+1&127],ge^=ge<<13,ie^=ie<<17,Tt[Be]=(ge^=ge>>>15)^(ie^=ie>>>12);Y.w=nt,Y.X=Tt,Y.i=Be}(ue,tt)}function Ge(tt,ue){return ue.i=tt.i,ue.w=tt.w,ue.X=tt.X.slice(),ue}function vt(tt,ue){null==tt&&(tt=+new Date);var me=new Ie(tt),Y=ue&&ue.state,re=function(){return(me.next()>>>0)/4294967296};return re.double=function(){do{var Be=((me.next()>>>11)+(me.next()>>>0)/4294967296)/(1<<21)}while(0===Be);return Be},re.int32=me.next,re.quick=re,Y&&(Y.X&&Ge(Y,me),re.state=function(){return Ge(me,{})}),re}Ne&&Ne.exports?Ne.exports=vt:te.amdD&&te.amdO?void 0!==(xe=function(){return vt}.call(Ve,te,Ve,Ne))&&(Ne.exports=xe):this.xor4096=vt}(0,be=te.nmd(be))},5583:function(be,Ve,te){var xe;!function(Re,Ne,Se){function Ie(tt){var ue=this;ue.next=function(){var ie,ge,Y=ue.x,re=ue.i;return ie=Y[re],ge=(ie^=ie>>>7)^ie<<24,ge^=(ie=Y[re+1&7])^ie>>>10,ge^=(ie=Y[re+3&7])^ie>>>3,ge^=(ie=Y[re+4&7])^ie<<7,ie=Y[re+7&7],Y[re]=ge^=(ie^=ie<<13)^ie<<9,ue.i=re+1&7,ge},function me(Y,re){var ie,Be=[];if(re===(0|re))Be[0]=re;else for(re=""+re,ie=0;ie<re.length;++ie)Be[7&ie]=Be[7&ie]<<15^re.charCodeAt(ie)+Be[ie+1&7]<<13;for(;Be.length<8;)Be.push(0);for(ie=0;ie<8&&0===Be[ie];++ie);for(8==ie&&(Be[7]=-1),Y.x=Be,Y.i=0,ie=256;ie>0;--ie)Y.next()}(ue,tt)}function Ge(tt,ue){return ue.x=tt.x.slice(),ue.i=tt.i,ue}function vt(tt,ue){null==tt&&(tt=+new Date);var me=new Ie(tt),Y=ue&&ue.state,re=function(){return(me.next()>>>0)/4294967296};return re.double=function(){do{var Be=((me.next()>>>11)+(me.next()>>>0)/4294967296)/(1<<21)}while(0===Be);return Be},re.int32=me.next,re.quick=re,Y&&(Y.x&&Ge(Y,me),re.state=function(){return Ge(me,{})}),re}Ne&&Ne.exports?Ne.exports=vt:te.amdD&&te.amdO?void 0!==(xe=function(){return vt}.call(Ve,te,Ve,Ne))&&(Ne.exports=xe):this.xorshift7=vt}(0,be=te.nmd(be))},7657:function(be,Ve,te){var xe;!function(Re,Ne,Se){function Ie(tt){var ue=this,me="";ue.next=function(){var re=ue.x^ue.x>>>2;return ue.x=ue.y,ue.y=ue.z,ue.z=ue.w,ue.w=ue.v,(ue.d=ue.d+362437|0)+(ue.v=ue.v^ue.v<<4^re^re<<1)|0},ue.x=0,ue.y=0,ue.z=0,ue.w=0,ue.v=0,tt===(0|tt)?ue.x=tt:me+=tt;for(var Y=0;Y<me.length+64;Y++)ue.x^=0|me.charCodeAt(Y),Y==me.length&&(ue.d=ue.x<<10^ue.x>>>4),ue.next()}function Ge(tt,ue){return ue.x=tt.x,ue.y=tt.y,ue.z=tt.z,ue.w=tt.w,ue.v=tt.v,ue.d=tt.d,ue}function vt(tt,ue){var me=new Ie(tt),Y=ue&&ue.state,re=function(){return(me.next()>>>0)/4294967296};return re.double=function(){do{var Be=((me.next()>>>11)+(me.next()>>>0)/4294967296)/(1<<21)}while(0===Be);return Be},re.int32=me.next,re.quick=re,Y&&("object"==typeof Y&&Ge(Y,me),re.state=function(){return Ge(me,{})}),re}Ne&&Ne.exports?Ne.exports=vt:te.amdD&&te.amdO?void 0!==(xe=function(){return vt}.call(Ve,te,Ve,Ne))&&(Ne.exports=xe):this.xorwow=vt}(0,be=te.nmd(be))},3818:function(be,Ve,te){var xe;!function(Re,Ne,Se){var ie,Ie=256,ue=Se.pow(Ie,6),me=Se.pow(2,52),Y=2*me;function ge(mn,on,kn){var Ye=[],Ze=Tt(nt((on=1==on?{entropy:!0}:on||{}).entropy?[mn,$t(Ne)]:null==mn?function Yt(){try{var mn;return ie&&(mn=ie.randomBytes)?mn=mn(Ie):(mn=new Uint8Array(Ie),(Re.crypto||Re.msCrypto).getRandomValues(mn)),$t(mn)}catch(Ye){var on=Re.navigator,kn=on&&on.plugins;return[+new Date,Re,kn,Re.screen,$t(Ne)]}}():mn,3),Ye),ve=new Be(Ye),Et=function(){for(var xt=ve.g(6),Cn=ue,In=0;xt<me;)xt=(xt+In)*Ie,Cn*=Ie,In=ve.g(1);for(;xt>=Y;)xt/=2,Cn/=2,In>>>=1;return(xt+In)/Cn};return Et.int32=function(){return 0|ve.g(4)},Et.quick=function(){return ve.g(4)/4294967296},Et.double=Et,Tt($t(ve.S),Ne),(on.pass||kn||function(xt,Cn,In,Zn){return Zn&&(Zn.S&&Ke(Zn,ve),xt.state=function(){return Ke(ve,{})}),In?(Se.random=xt,Cn):xt})(Et,Ze,"global"in on?on.global:this==Se,on.state)}function Be(mn){var on,kn=mn.length,Ye=this,Ze=0,ve=Ye.i=Ye.j=0,Et=Ye.S=[];for(kn||(mn=[kn++]);Ze<Ie;)Et[Ze]=Ze++;for(Ze=0;Ze<Ie;Ze++)Et[Ze]=Et[ve=255&ve+mn[Ze%kn]+(on=Et[Ze])],Et[ve]=on;(Ye.g=function(xt){for(var Cn,In=0,Zn=Ye.i,Er=Ye.j,kr=Ye.S;xt--;)Cn=kr[Zn=255&Zn+1],In=In*Ie+kr[255&(kr[Zn]=kr[Er=255&Er+Cn])+(kr[Er]=Cn)];return Ye.i=Zn,Ye.j=Er,In})(Ie)}function Ke(mn,on){return on.i=mn.i,on.j=mn.j,on.S=mn.S.slice(),on}function nt(mn,on){var Ze,kn=[],Ye=typeof mn;if(on&&"object"==Ye)for(Ze in mn)try{kn.push(nt(mn[Ze],on-1))}catch(ve){}return kn.length?kn:"string"==Ye?mn:mn+"\0"}function Tt(mn,on){for(var Ye,kn=mn+"",Ze=0;Ze<kn.length;)on[255&Ze]=255&(Ye^=19*on[255&Ze])+kn.charCodeAt(Ze++);return $t(on)}function $t(mn){return String.fromCharCode.apply(0,mn)}if(Tt(Se.random(),Ne),be.exports){be.exports=ge;try{ie=te(5042)}catch(mn){}}else void 0!==(xe=function(){return ge}.call(Ve,te,Ve,be))&&(be.exports=xe)}("undefined"!=typeof self?self:this,[],Math)},1977:function(be,Ve){"use strict";var te,Re;te=function(){function Ne(){return!0}function Se(){return!1}function Ie(){}return function Ge(){var vt=[{name:"number",test:function(Pe){return"number"==typeof Pe}},{name:"string",test:function(Pe){return"string"==typeof Pe}},{name:"boolean",test:function(Pe){return"boolean"==typeof Pe}},{name:"Function",test:function(Pe){return"function"==typeof Pe}},{name:"Array",test:Array.isArray},{name:"Date",test:function(Pe){return Pe instanceof Date}},{name:"RegExp",test:function(Pe){return Pe instanceof RegExp}},{name:"Object",test:function(Pe){return"object"==typeof Pe&&null!==Pe&&Pe.constructor===Object}},{name:"null",test:function(Pe){return null===Pe}},{name:"undefined",test:function(Pe){return void 0===Pe}}],tt={name:"any",test:Ne},ue=[],me=[],Y={types:vt,conversions:me,ignore:ue};function re(Pe){var et=zo(Y.types,function(q){return q.name===Pe});if(et)return et;if("any"===Pe)return tt;var ht=zo(Y.types,function(q){return q.name.toLowerCase()===Pe.toLowerCase()});throw new TypeError('Unknown type "'+Pe+'"'+(ht?'. Did you mean "'+ht.name+'"?':""))}function ie(Pe){return Pe===tt?999:Y.types.indexOf(Pe)}function ge(Pe){var et=zo(Y.types,function(ht){return ht.test(Pe)});if(et)return et.name;throw new TypeError("Value has unknown type. Value: "+Pe)}function nt(Pe){return Pe.map(function(et){var ht=et.types.map(ve);return(et.restParam?"...":"")+ht.join("|")}).join(",")}function Tt(Pe,et){var ht=0===Pe.indexOf("..."),Ft=(ht?Pe.length>3?Pe.slice(3):"any":Pe).split("|").map(_u).filter(Ms).filter(hf),rn=function or(Pe,et){var ht={};return Pe.forEach(function(q){-1===et.indexOf(q.from)&&-1!==et.indexOf(q.to)&&!ht[q.from]&&(ht[q.from]=q)}),Object.keys(ht).map(function(q){return ht[q]})}(et,Ft),ze=Ft.map(function(_t){var bn=re(_t);return{name:_t,typeIndex:ie(bn),test:bn.test,conversion:null,conversionIndex:-1}}),un=rn.map(function(_t){var bn=re(_t.from);return{name:_t.from,typeIndex:ie(bn),test:bn.test,conversion:_t,conversionIndex:et.indexOf(_t)}});return{types:ze.concat(un),restParam:ht}}function $t(Pe){var et=Tu(Pe);return!!et&&et.restParam}function mn(Pe){return Pe.types.some(function(et){return null!=et.conversion})}function on(Pe){if(!Pe||0===Pe.types.length)return Ne;if(1===Pe.types.length)return re(Pe.types[0].name).test;if(2===Pe.types.length){var et=re(Pe.types[0].name).test,ht=re(Pe.types[1].name).test;return function(rn){return et(rn)||ht(rn)}}var q=Pe.types.map(function(Ft){return re(Ft.name).test});return function(rn){for(var ze=0;ze<q.length;ze++)if(q[ze](rn))return!0;return!1}}function kn(Pe){var et,ht,q;if($t(Pe)){var Ft=(et=function Hg(Pe){return Pe.slice(0,Pe.length-1)}(Pe).map(on)).length,rn=on(Tu(Pe));return function(_t){for(var bn=0;bn<et.length;bn++)if(!et[bn](_t[bn]))return!1;return function(un){for(var _t=Ft;_t<un.length;_t++)if(!rn(un[_t]))return!1;return!0}(_t)&&_t.length>=Ft+1}}return 0===Pe.length?function(_t){return 0===_t.length}:1===Pe.length?(ht=on(Pe[0]),function(_t){return ht(_t[0])&&1===_t.length}):2===Pe.length?(ht=on(Pe[0]),q=on(Pe[1]),function(_t){return ht(_t[0])&&q(_t[1])&&2===_t.length}):(et=Pe.map(on),function(_t){for(var bn=0;bn<et.length;bn++)if(!et[bn](_t[bn]))return!1;return _t.length===et.length})}function Ye(Pe,et){return et<Pe.params.length?Pe.params[et]:$t(Pe.params)?Tu(Pe.params):null}function Ze(Pe,et,ht){var q=Ye(Pe,et);return(q?ht?q.types.filter(Et):q.types:[]).map(ve)}function ve(Pe){return Pe.name}function Et(Pe){return null==Pe.conversion}function xt(Pe,et){var ht=function Kg(Pe){for(var et={},ht=0;ht<Pe.length;ht++)et[Pe[ht]]=!0;return Object.keys(et)}(Wa(Pe,function(q){return Ze(q,et,!1)}));return-1!==ht.indexOf("any")?["any"]:ht}function Cn(Pe,et,ht){var q,Ft,un,rn=Pe||"unnamed",ze=ht;for(un=0;un<et.length;un++){var _t=ze.filter(function(da){var Aa=on(Ye(da,un));return(un<da.params.length||$t(da.params))&&Aa(et[un])});if(0===_t.length){if((Ft=xt(ze,un)).length>0){var bn=ge(et[un]);return(q=new TypeError("Unexpected type of argument in function "+rn+" (expected: "+Ft.join(" or ")+", actual: "+bn+", index: "+un+")")).data={category:"wrongType",fn:rn,index:un,actual:bn,expected:Ft},q}}else ze=_t}var qs=ze.map(function(da){return $t(da.params)?1/0:da.params.length});if(et.length<Math.min.apply(null,qs))return Ft=xt(ze,un),(q=new TypeError("Too few arguments in function "+rn+" (expected: "+Ft.join(" or ")+", index: "+et.length+")")).data={category:"tooFewArgs",fn:rn,index:et.length,expected:Ft},q;var Ns=Math.max.apply(null,qs);return et.length>Ns?((q=new TypeError("Too many arguments in function "+rn+" (expected: "+Ns+", actual: "+et.length+")")).data={category:"tooManyArgs",fn:rn,index:et.length,expectedLength:Ns},q):((q=new TypeError('Arguments of type "'+et.join(", ")+'" do not match any of the defined signatures of function '+rn+".")).data={category:"mismatch",actual:et.map(ge)},q)}function In(Pe){for(var et=999,ht=0;ht<Pe.types.length;ht++)Et(Pe.types[ht])&&(et=Math.min(et,Pe.types[ht].typeIndex));return et}function Zn(Pe){for(var et=999,ht=0;ht<Pe.types.length;ht++)Et(Pe.types[ht])||(et=Math.min(et,Pe.types[ht].conversionIndex));return et}function Er(Pe,et){var ht;return 0!=(ht=Pe.restParam-et.restParam)||0!=(ht=mn(Pe)-mn(et))||0!=(ht=In(Pe)-In(et))?ht:Zn(Pe)-Zn(et)}function kr(Pe,et){var q,Ft,ht=Math.min(Pe.params.length,et.params.length);if(0!=(Ft=Pe.params.some(mn)-et.params.some(mn)))return Ft;for(q=0;q<ht;q++)if(0!=(Ft=mn(Pe.params[q])-mn(et.params[q])))return Ft;for(q=0;q<ht;q++)if(0!==(Ft=Er(Pe.params[q],et.params[q])))return Ft;return Pe.params.length-et.params.length}function ks(Pe){var et,ht,q,Ft,rn=[],ze=[];switch(Pe.types.forEach(function(un){un.conversion&&(rn.push(re(un.conversion.from).test),ze.push(un.conversion.convert))}),ze.length){case 0:return function(_t){return _t};case 1:return et=rn[0],q=ze[0],function(_t){return et(_t)?q(_t):_t};case 2:return et=rn[0],ht=rn[1],q=ze[0],Ft=ze[1],function(_t){return et(_t)?q(_t):ht(_t)?Ft(_t):_t};default:return function(_t){for(var bn=0;bn<ze.length;bn++)if(rn[bn](_t))return ze[bn](_t);return _t}}}function Zr(Pe,et){return function ht(q,Ft,rn){if(Ft<q.length){var _t,ze=q[Ft],un=et?ze.types.filter(Et):ze.types;if(ze.restParam){var bn=un.filter(Et);_t=bn.length<un.length?[bn,un]:[un]}else _t=un.map(function(Ns){return[Ns]});return Wa(_t,function(Ns){return ht(q,Ft+1,rn.concat([Ns]))})}return[rn.map(function(Ns,da){return{types:Ns,restParam:da===q.length-1&&$t(q)}})]}(Pe,0,[])}function Po(Pe,et){if(0===Object.keys(et).length)throw new SyntaxError("No signatures provided");var ht=[];Object.keys(et).map(function(Ln){return function Yt(Pe,et,ht){var q=[];return""!==Pe.trim()&&(q=Pe.split(",").map(_u).map(function(Ft,rn,ze){var un=Tt(Ft,ht);if(un.restParam&&rn!==ze.length-1)throw new SyntaxError('Unexpected rest parameter "'+Ft+'": only allowed for the last parameter');return un})),q.some(Fe)?null:{params:q,fn:et}}(Ln,et[Ln],Y.conversions)}).filter(no).forEach(function(Ln){var wr=zo(ht,function(ta){return function xr(Pe,et){for(var ht=Math.max(Pe.params.length,et.params.length),q=0;q<ht;q++)if(!Gs(Ze(Pe,q,!0),Ze(et,q,!0)))return!1;var ze=Pe.params.length,un=et.params.length,_t=$t(Pe.params),bn=$t(et.params);return _t?bn?ze===un:un>=ze:bn?ze>=un:ze===un}(ta,Ln)});if(wr)throw new TypeError('Conflicting signatures "'+nt(wr.params)+'" and "'+nt(Ln.params)+'".');ht.push(Ln)});var q=Wa(ht,function(Ln){return(Ln?Zr(Ln.params,!1):[]).map(function(ta){return{params:ta,fn:Ln.fn}})}).filter(no);q.sort(kr);var Ft=q[0]&&q[0].params.length<=2&&!$t(q[0].params),rn=q[1]&&q[1].params.length<=2&&!$t(q[1].params),ze=q[2]&&q[2].params.length<=2&&!$t(q[2].params),un=q[3]&&q[3].params.length<=2&&!$t(q[3].params),_t=q[4]&&q[4].params.length<=2&&!$t(q[4].params),bn=q[5]&&q[5].params.length<=2&&!$t(q[5].params),qs=Ft&&rn&&ze&&un&&_t&&bn,Ns=q.map(function(Ln){return kn(Ln.params)}),da=Ft?on(q[0].params[0]):Se,Aa=rn?on(q[1].params[0]):Se,zl=ze?on(q[2].params[0]):Se,Eu=un?on(q[3].params[0]):Se,Mn=_t?on(q[4].params[0]):Se,Ea=bn?on(q[5].params[0]):Se,jr=Ft?on(q[0].params[1]):Se,Wn=rn?on(q[1].params[1]):Se,li=ze?on(q[2].params[1]):Se,Zg=un?on(q[3].params[1]):Se,ku=_t?on(q[4].params[1]):Se,ro=bn?on(q[5].params[1]):Se,so=q.map(function(Ln){return function ur(Pe,et){var ht=et;if(Pe.some(mn)){var q=$t(Pe),Ft=Pe.map(ks);ht=function(){for(var _t=[],bn=q?arguments.length-1:arguments.length,qs=0;qs<bn;qs++)_t[qs]=Ft[qs](arguments[qs]);return q&&(_t[bn]=arguments[bn].map(Ft[bn])),et.apply(this,_t)}}var rn=ht;if($t(Pe)){var ze=Pe.length-1;rn=function(){return ht.apply(this,Bl(arguments,0,ze).concat([Bl(arguments,ze)]))}}return rn}(Ln.params,Ln.fn)}),Hs=Ft?so[0]:Ie,Td=rn?so[1]:Ie,Vl=ze?so[2]:Ie,ao=un?so[3]:Ie,Ci=_t?so[4]:Ie,Mu=bn?so[5]:Ie,tn=Ft?q[0].params.length:-1,Ad=rn?q[1].params.length:-1,Xr=ze?q[2].params.length:-1,df=un?q[3].params.length:-1,Vo=_t?q[4].params.length:-1,zr=bn?q[5].params.length:-1,Ed=qs?6:0,Ks=q.length,pa=function(){for(var wr=Ed;wr<Ks;wr++)if(Ns[wr](arguments))return so[wr].apply(this,arguments);return Y.onMismatch(Pe,arguments,q)},yt=function Ln(wr,ta){return arguments.length===tn&&da(wr)&&jr(ta)?Hs.apply(Ln,arguments):arguments.length===Ad&&Aa(wr)&&Wn(ta)?Td.apply(Ln,arguments):arguments.length===Xr&&zl(wr)&&li(ta)?Vl.apply(Ln,arguments):arguments.length===df&&Eu(wr)&&Zg(ta)?ao.apply(Ln,arguments):arguments.length===Vo&&Mn(wr)&&ku(ta)?Ci.apply(Ln,arguments):arguments.length===zr&&Ea(wr)&&ro(ta)?Mu.apply(Ln,arguments):pa.apply(Ln,arguments)};try{Object.defineProperty(yt,"name",{value:Pe})}catch(Ln){}return yt.signatures=function lr(Pe){var et={};return Pe.forEach(function(ht){ht.params.some(mn)||Zr(ht.params,!0).forEach(function(q){et[nt(q)]=ht.fn})}),et}(q),yt}function Ll(Pe,et,ht){throw Cn(Pe,et,ht)}function hf(Pe){return-1===Y.ignore.indexOf(Pe)}function _u(Pe){return Pe.trim()}function Ms(Pe){return!!Pe}function no(Pe){return null!==Pe}function Fe(Pe){return 0===Pe.types.length}function Tu(Pe){return Pe[Pe.length-1]}function Bl(Pe,et,ht){return Array.prototype.slice.call(Pe,et,ht)}function Pl(Pe,et){return-1!==Pe.indexOf(et)}function Gs(Pe,et){for(var ht=0;ht<Pe.length;ht++)if(Pl(et,Pe[ht]))return!0;return!1}function zo(Pe,et){for(var ht=0;ht<Pe.length;ht++)if(et(Pe[ht]))return Pe[ht]}function Wa(Pe,et){return Array.prototype.concat.apply([],Pe.map(et))}function Au(Pe){for(var et="",ht=0;ht<Pe.length;ht++){var q=Pe[ht];if(("object"==typeof q.signatures||"string"==typeof q.signature)&&""!==q.name)if(""===et)et=q.name;else if(et!==q.name){var Ft=new Error("Function names do not match (expected: "+et+", actual: "+q.name+")");throw Ft.data={actual:q.name,expected:et},Ft}}return et}function Ga(Pe){var et,ht={};function q(un,_t){if(ht.hasOwnProperty(un)&&_t!==ht[un])throw(et=new Error('Signature "'+un+'" is defined twice')).data={signature:un},et}for(var Ft=0;Ft<Pe.length;Ft++){var rn=Pe[Ft];if("object"==typeof rn.signatures)for(var ze in rn.signatures)rn.signatures.hasOwnProperty(ze)&&(q(ze,rn.signatures[ze]),ht[ze]=rn.signatures[ze]);else{if("string"!=typeof rn.signature)throw(et=new TypeError("Function is no typed-function (index: "+Ft+")")).data={index:Ft},et;q(rn.signature,rn),ht[rn.signature]=rn}}return ht}return(Y=Po("typed",{"string, Object":Po,Object:function(Pe){var et=[];for(var ht in Pe)Pe.hasOwnProperty(ht)&&et.push(Pe[ht]);return Po(Au(et),Pe)},"...Function":function(Pe){return Po(Au(Pe),Ga(Pe))},"string, ...Function":function(Pe,et){return Po(Pe,Ga(et))}})).create=Ge,Y.types=vt,Y.conversions=me,Y.ignore=ue,Y.onMismatch=Ll,Y.throwMismatchError=Ll,Y.createError=Cn,Y.convert=function Ke(Pe,et){var ht=ge(Pe);if(et===ht)return Pe;for(var q=0;q<Y.conversions.length;q++){var Ft=Y.conversions[q];if(Ft.from===ht&&Ft.to===et)return Ft.convert(Pe)}throw new Error("Cannot convert from "+ht+" to "+et)},Y.find=function Be(Pe,et){if(!Pe.signatures)throw new TypeError("Function is no typed-function");var ht;if("string"==typeof et){ht=et.split(",");for(var q=0;q<ht.length;q++)ht[q]=ht[q].trim()}else{if(!Array.isArray(et))throw new TypeError("String array or a comma separated string expected");ht=et}var Ft=ht.join(","),rn=Pe.signatures[Ft];if(rn)return rn;throw new TypeError("Signature not found (signature: "+(Pe.name||"unnamed")+"("+ht.join(", ")+"))")},Y.addType=function(Pe,et){if(!Pe||"string"!=typeof Pe.name||"function"!=typeof Pe.test)throw new TypeError("Object with properties {name: string, test: function} expected");if(!1!==et)for(var ht=0;ht<Y.types.length;ht++)if("Object"===Y.types[ht].name)return void Y.types.splice(ht,0,Pe);Y.types.push(Pe)},Y.addConversion=function(Pe){if(!Pe||"string"!=typeof Pe.from||"string"!=typeof Pe.to||"function"!=typeof Pe.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");Y.conversions.push(Pe)},Y}()},void 0!==(Re=te.apply(Ve,[]))&&(be.exports=Re)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},8963:()=>{},5042:()=>{},5861:(be,Ve,te)=>{"use strict";function xe(Ne,Se,Ie,Ge,vt,tt,ue){try{var me=Ne[tt](ue),Y=me.value}catch(re){return void Ie(re)}me.done?Se(Y):Promise.resolve(Y).then(Ge,vt)}function Re(Ne){return function(){var Se=this,Ie=arguments;return new Promise(function(Ge,vt){var tt=Ne.apply(Se,Ie);function ue(Y){xe(tt,Ge,vt,ue,me,"next",Y)}function me(Y){xe(tt,Ge,vt,ue,me,"throw",Y)}ue(void 0)})}}te.d(Ve,{Z:()=>Re})}},ea={};function ft(be){var Ve=ea[be];if(void 0!==Ve)return Ve.exports;var te=ea[be]={id:be,loaded:!1,exports:{}};return to[be].call(te.exports,te,te.exports,ft),te.loaded=!0,te.exports}ft.amdD=function(){throw new Error("define cannot be used indirect")},ft.amdO={},ft.n=be=>{var Ve=be&&be.__esModule?()=>be.default:()=>be;return ft.d(Ve,{a:Ve}),Ve},ft.d=(be,Ve)=>{for(var te in Ve)ft.o(Ve,te)&&!ft.o(be,te)&&Object.defineProperty(be,te,{enumerable:!0,get:Ve[te]})},ft.o=(be,Ve)=>Object.prototype.hasOwnProperty.call(be,Ve),ft.r=be=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(be,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(be,"__esModule",{value:!0})},ft.nmd=be=>(be.paths=[],be.children||(be.children=[]),be),(()=>{"use strict";var be={};ft.r(be),ft.d(be,{arraysEqual:()=>_t,assert:()=>q,assertNonNegativeIntegerDimensions:()=>Ks,assertNonNull:()=>rn,assertShapesMatch:()=>Ft,bytesFromStringArray:()=>so,bytesPerElement:()=>ro,checkConversionForErrors:()=>li,clamp:()=>Wa,computeStrides:()=>tn,convertBackendValuesAndArrayBuffer:()=>df,createScalarValue:()=>Qo,createShuffledIndices:()=>da,decodeString:()=>fo,distSquared:()=>ht,encodeString:()=>_i,fetch:()=>nx,fingerPrint64:()=>jI,flatten:()=>Ti,getArrayFromDType:()=>Wn,getTypedArrayFromDType:()=>jr,hasEncodingLoss:()=>ku,hexToLong:()=>ah,indexToLoc:()=>yt,inferDtype:()=>ao,inferFromImplicitShape:()=>Eu,isBoolean:()=>Td,isFunction:()=>Ci,isInt:()=>bn,isNumber:()=>Vl,isPromise:()=>Ln,isScalarShape:()=>un,isString:()=>Hs,isTypedArray:()=>hs,isValidDtype:()=>Zg,locToIndex:()=>pa,makeOnesTypedArray:()=>Vo,makeZerosNestedTypedArray:()=>Ed,makeZerosTypedArray:()=>zr,nearestDivisor:()=>Mu,nearestLargerEven:()=>Au,now:()=>Cs,parseAxisParam:()=>Mn,randUniform:()=>et,repeatedTry:()=>zl,rightPad:()=>Aa,shuffle:()=>zo,shuffleCombo:()=>Kg,sizeFromShape:()=>ze,sizeToSquarishShape:()=>Ns,squeezeShape:()=>Ea,sum:()=>Pe,swap:()=>Ga,tanh:()=>qs,toNestedArray:()=>Xr,toTypedArray:()=>is});var Ve={};ft.r(Ve),ft.d(Ve,{assertTypesMatch:()=>ux,getTensorsInContainer:()=>ho,isTensorInList:()=>_p,makeTypesMatch:()=>Dr});var te={};ft.r(te),ft.d(te,{isBrowser:()=>av,isMobile:()=>sv,mockIsMobile:()=>c_});var xe={};ft.r(xe),ft.d(xe,{Serializable:()=>el,SerializationMap:()=>Fa,registerClass:()=>Ct});var Re={};ft.r(Re),ft.d(Re,{assertAndGetBroadcastShape:()=>An,getBroadcastDims:()=>tl,getReductionAxes:()=>Ur});var Ne={};ft.r(Ne),ft.d(Ne,{browserFiles:()=>jx,browserHTTPRequest:()=>t1,concatenateArrayBuffers:()=>$a,copyModel:()=>w_,decodeWeights:()=>px,encodeWeights:()=>Bn,fromMemory:()=>r1,fromMemorySync:()=>vh,getLoadHandlers:()=>h_,getModelArtifactsForJSON:()=>sr,getModelArtifactsForJSONSync:()=>kp,getModelArtifactsInfoForJSON:()=>Xu,getSaveHandlers:()=>Hn,getWeightSpecs:()=>Mp,http:()=>Mv,isHTTPScheme:()=>kv,listModels:()=>x_,loadWeights:()=>Jx,moveModel:()=>_x,registerLoadRouter:()=>yx,registerSaveRouter:()=>vx,removeModel:()=>vv,weightsLoaderFactory:()=>Qx,withSaveHandler:()=>s1,withSaveHandlerSync:()=>a1});var Se={};ft.r(Se),ft.d(Se,{confusionMatrix:()=>W_});var Ie={};ft.r(Ie),ft.d(Ie,{fromPixels:()=>Ov,fromPixelsAsync:()=>K_,toPixels:()=>Z_});var Ge={};ft.r(Ge),ft.d(Ge,{prepareAndValidate:()=>Hp});var vt={};ft.r(vt),ft.d(vt,{calculateShapes:()=>ou,validateInput:()=>bh,validateUpdateShape:()=>Fv});var tt={};ft.r(tt),ft.d(tt,{assertParamsValid:()=>Bv,computeFlatOffset:()=>vi,computeOutShape:()=>Ka,getNormalizedAxes:()=>X_,isSliceContinous:()=>Pv,maskToAxes:()=>j_,parseSliceParams:()=>xo,sliceInfo:()=>zv,startForAxis:()=>g1,startIndicesWithElidedDims:()=>Y_,stopForAxis:()=>v1,stopIndicesWithElidedDims:()=>p1,stridesForAxis:()=>m1,stridesWithElidedDims:()=>h1});var ue={};ft.r(ue),ft.d(ue,{TEST_EPSILON_FLOAT16:()=>Vv,createVideoElement:()=>N1,encodeStrings:()=>w1,expectArrayBuffersEqual:()=>r2,expectArraysClose:()=>Q_,expectArraysEqual:()=>t2,expectNumbersClose:()=>x1,expectPromiseToFail:()=>e2,expectValuesInRange:()=>n2,play:()=>s2,testEpsilon:()=>Uv});var me={};ft.r(me),ft.d(me,{conv2d:()=>Kw,depthwiseConv2d:()=>Xw,matMul:()=>Gy});var Y={};ft.r(Y),ft.d(Y,{collectGatherOpShapeInfo:()=>Hm,computeOutShape:()=>KN,segOpComputeOptimalWindowSize:()=>HN});var re={};ft.r(re),ft.d(re,{ERF_A1:()=>a0,ERF_A2:()=>Xh,ERF_A3:()=>i0,ERF_A4:()=>o0,ERF_A5:()=>u0,ERF_P:()=>s0,PARALLELIZE_THRESHOLD:()=>Bm,RowPartitionType:()=>Ja,SELU_SCALE:()=>Um,SELU_SCALEALPHA:()=>Vm,applyActivation:()=>Kh,assertAndGetBroadcastShape:()=>An,assertAxesAreInnerMostDims:()=>gs,assertParamsConsistent:()=>e0,assignToTypedArray:()=>DN,axesAreInnerMostDims:()=>hy,calculateShapes:()=>ou,checkEinsumDimSizes:()=>h0,checkPadOnDimRoundingMode:()=>$s,combineLocations:()=>dy,combineRaggedTensorToTensorShapes:()=>_N,complexWithEvenIndex:()=>kN,complexWithOddIndex:()=>MN,computeConv2DInfo:()=>Rr,computeConv3DInfo:()=>wo,computeDefaultPad:()=>Jp,computeDilation2DInfo:()=>Ch,computeOptimalWindowSize:()=>Pm,computeOutAndReduceShapes:()=>ms,computeOutShape:()=>yi,computePool2DInfo:()=>ma,computePool3DInfo:()=>Ri,convertConv2DDataFormat:()=>No,decodeEinsumEquation:()=>Wm,eitherStridesOrDilationsAreOne:()=>ds,expandShapeToKeepDim:()=>Wr,exponent:()=>$N,exponents:()=>RN,fromStringArrayToUint8:()=>ZN,fromUint8ToStringArray:()=>ko,getAxesPermutation:()=>Or,getBroadcastDims:()=>tl,getComplexWithIndex:()=>l0,getEinsumComputePath:()=>Gm,getEinsumPermutation:()=>f0,getFusedBiasGradient:()=>Rm,getFusedDyActivation:()=>Dm,getImageCenter:()=>n0,getInnerMostAxes:()=>Br,getPermuted:()=>Zh,getRaggedRank:()=>TN,getReductionAxes:()=>Ur,getReshaped:()=>qc,getReshapedPermuted:()=>jh,getRowPartitionTypesHelper:()=>t0,getSliceBeginCoords:()=>zm,getSliceSize:()=>r0,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>BN,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>PN,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>m0,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>g0,getSparseReshapeInputOutputMismatchErrorMessage:()=>WN,getSparseReshapeInputOutputMultipleErrorMessage:()=>UN,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>zN,getSparseReshapeNegativeOutputDimErrorMessage:()=>VN,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>v0,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>qm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>GN,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>qN,getUndoAxesPermutation:()=>fu,isIdentityPermutation:()=>d0,log:()=>UI,mergeRealAndImagArrays:()=>Eo,prepareAndValidate:()=>Hp,prepareSplitSize:()=>p0,segment_util:()=>Y,shouldFuse:()=>$m,slice_util:()=>tt,splitRealAndImagArrays:()=>EN,stridesOrDilationsArePositive:()=>rl,tupleValuesAreOne:()=>lu,upcastType:()=>ra,validateDefaultValueShape:()=>AN,validateInput:()=>bh,validateUpdateShape:()=>Fv,warn:()=>Ra});var ie={};ft.r(ie),ft.d(ie,{nonMaxSuppressionV3Impl:()=>Gc,nonMaxSuppressionV4Impl:()=>Fm,nonMaxSuppressionV5Impl:()=>Lm,whereImpl:()=>qh});var ge={};ft.r(ge),ft.d(ge,{maxNorm:()=>R$,minMaxNorm:()=>GS,nonNeg:()=>pM,unitNorm:()=>Ps});var Be={};ft.r(Be),ft.d(Be,{constant:()=>mM,glorotNormal:()=>P$,glorotUniform:()=>B$,heNormal:()=>bM,heUniform:()=>z$,identity:()=>L$,leCunNormal:()=>V$,leCunUniform:()=>xM,ones:()=>O$,orthogonal:()=>wM,randomNormal:()=>F$,randomUniform:()=>gM,truncatedNormal:()=>vM,varianceScaling:()=>yM,zeros:()=>$$});var Ke={};ft.r(Ke),ft.d(Ke,{Layer:()=>Pn,RNN:()=>Ji,RNNCell:()=>yg,activation:()=>DD,add:()=>FD,alphaDropout:()=>J,average:()=>LD,averagePooling1d:()=>u,averagePooling2d:()=>h,averagePooling3d:()=>w,avgPool1d:()=>l,avgPool2d:()=>p,avgPool3d:()=>N,avgPooling1d:()=>f,avgPooling2d:()=>b,avgPooling3d:()=>S,batchNormalization:()=>zD,bidirectional:()=>Q,categoryEncoding:()=>Xe,centerCrop:()=>bt,concatenate:()=>aI,conv1d:()=>AD,conv2d:()=>ED,conv2dTranspose:()=>eI,conv3d:()=>tI,conv3dTranspose:()=>nI,convLstm2d:()=>Z,convLstm2dCell:()=>j,cropping2D:()=>Ig,dense:()=>wb,depthwiseConv2d:()=>MD,dot:()=>PD,dropout:()=>rI,elu:()=>RO,embedding:()=>OD,flatten:()=>RD,gaussianDropout:()=>We,gaussianNoise:()=>ee,globalAveragePooling1d:()=>x,globalAveragePooling2d:()=>v,globalMaxPool1d:()=>de,globalMaxPool2d:()=>we,globalMaxPooling1d:()=>I,globalMaxPooling2d:()=>_,gru:()=>L,gruCell:()=>W,input:()=>aC,inputLayer:()=>QC,layerNormalization:()=>Cb,leakyReLU:()=>CD,lstm:()=>O,lstmCell:()=>P,masking:()=>Me,maxPool1d:()=>Te,maxPool2d:()=>ye,maxPooling1d:()=>A,maxPooling2d:()=>E,maxPooling3d:()=>B,maximum:()=>iI,minimum:()=>BD,multiply:()=>Tg,permute:()=>Sb,prelu:()=>ID,randomWidth:()=>mt,reLU:()=>$O,repeatVector:()=>$D,rescaling:()=>je,reshape:()=>sI,resizing:()=>Le,rnn:()=>X,separableConv2d:()=>kD,simpleRNN:()=>z,simpleRNNCell:()=>F,softmax:()=>_D,spatialDropout1d:()=>Nb,stackedRNNCells:()=>H,thresholdedReLU:()=>TD,timeDistributed:()=>ne,upSampling2d:()=>_g,zeroPadding2d:()=>o});var nt={};ft.r(nt),ft.d(nt,{MAPE:()=>Ee,MSE:()=>It,binaryAccuracy:()=>rt,binaryCrossentropy:()=>St,categoricalAccuracy:()=>Bt,categoricalCrossentropy:()=>dt,cosineProximity:()=>Wt,mape:()=>lt,meanAbsoluteError:()=>Jt,meanAbsolutePercentageError:()=>fe,meanSquaredError:()=>Qe,mse:()=>Rt,precision:()=>gn,recall:()=>fn,sparseCategoricalAccuracy:()=>Mt});var Tt={};ft.r(Tt),ft.d(Tt,{modelFromJSON:()=>wO});var Yt={};ft.r(Yt),ft.d(Yt,{l1:()=>xn,l1l2:()=>Xt,l2:()=>$n});var $t={};ft.r($t),ft.d($t,{json:()=>hP});var mn={};ft.r(mn),ft.d(mn,{json:()=>dP});var on={};ft.r(on),ft.d(on,{json:()=>pP});var kn={};ft.r(kn),ft.d(kn,{json:()=>mP});var Ye={};ft.r(Ye),ft.d(Ye,{json:()=>gP});var Ze={};ft.r(Ze),ft.d(Ze,{json:()=>vP});var ve={};ft.r(ve),ft.d(ve,{json:()=>yP});var Et={};ft.r(Et),ft.d(Et,{json:()=>bP});var xt={};ft.r(xt),ft.d(xt,{json:()=>xP});var Cn={};ft.r(Cn),ft.d(Cn,{json:()=>wP});var In={};ft.r(In),ft.d(In,{json:()=>NP});var Zn={};ft.r(Zn),ft.d(Zn,{json:()=>SP});var Er={};ft.r(Er),ft.d(Er,{json:()=>CP});var kr={};ft.r(kr),ft.d(kr,{json:()=>IP});var or={};ft.r(or),ft.d(or,{json:()=>_P});var ur={};ft.r(ur),ft.d(ur,{json:()=>TP});var ks={};ft.r(ks),ft.d(ks,{json:()=>AP});var lr={};ft.r(lr),ft.d(lr,{json:()=>EP});var Zr={};ft.r(Zr),ft.d(Zr,{json:()=>kP});var xr={};ft.r(xr),ft.d(xr,{OP_SCOPE_SUFFIX:()=>iv,abs:()=>es,acos:()=>Zp,acosh:()=>Hv,add:()=>Nt,addN:()=>I1,all:()=>wh,any:()=>Nh,argMax:()=>nl,argMin:()=>jp,asin:()=>Xp,asinh:()=>Kv,atan:()=>Yp,atan2:()=>Zv,atanh:()=>jv,avgPool:()=>_h,avgPool3d:()=>Xv,basicLSTMCell:()=>$1,batchNorm:()=>al,batchNorm2d:()=>Yv,batchNorm3d:()=>Jv,batchNorm4d:()=>em,batchToSpaceND:()=>Th,bincount:()=>Qv,booleanMaskAsync:()=>Pw,broadcastArgs:()=>L1,broadcastTo:()=>cu,buffer:()=>En,cast:()=>Lt,ceil:()=>tm,clipByValue:()=>oa,clone:()=>ki,complex:()=>po,concat:()=>$r,concat1d:()=>nm,concat2d:()=>ty,concat3d:()=>ny,concat4d:()=>rm,conv1d:()=>sm,conv2d:()=>So,conv2dTranspose:()=>am,conv3d:()=>sy,conv3dTranspose:()=>iy,cos:()=>Ah,cosh:()=>Eh,cosineWindow:()=>Em,cumprod:()=>kh,cumsum:()=>im,denseBincount:()=>Mh,depthToSpace:()=>oy,depthwiseConv2d:()=>Fc,diag:()=>uy,dilation2d:()=>ly,div:()=>nn,divNoNan:()=>um,dot:()=>cy,dropout:()=>Hh,einsum:()=>H1,elu:()=>il,enclosingPowerOfTwo:()=>Uy,equal:()=>ga,erf:()=>fy,euclideanNorm:()=>py,exp:()=>va,expandDims:()=>Os,expm1:()=>my,eye:()=>Dh,fft:()=>Wh,fill:()=>su,floor:()=>Bc,floorDiv:()=>Lp,fused:()=>me,gather:()=>Pc,gatherND:()=>qw,greater:()=>Fs,greaterEqual:()=>Co,ifft:()=>pl,imag:()=>yh,image:()=>Ya,inTopKAsync:()=>Hw,irfft:()=>Im,isFinite:()=>gy,isInf:()=>lm,isNaN:()=>vy,leakyRelu:()=>Rh,less:()=>ul,lessEqual:()=>hu,linalg:()=>Yy,linspace:()=>Q1,localResponseNormalization:()=>Pa,log:()=>ya,log1p:()=>$h,logSigmoid:()=>yy,logSoftmax:()=>cm,logSumExp:()=>ts,logicalAnd:()=>ja,logicalNot:()=>Oh,logicalOr:()=>Kn,logicalXor:()=>by,losses:()=>Jy,lowerBound:()=>Io,matMul:()=>Rn,max:()=>La,maxPool:()=>Fh,maxPool3d:()=>pm,maxPoolWithArgmax:()=>tw,maximum:()=>gi,mean:()=>Ir,meshgrid:()=>pT,min:()=>Lc,minimum:()=>du,mirrorPad:()=>xy,mod:()=>wy,moments:()=>vs,movingAverage:()=>Vw,mul:()=>Ce,multiRNNCell:()=>sw,multinomial:()=>Ny,neg:()=>cr,norm:()=>ol,notEqual:()=>ll,oneHot:()=>Dc,ones:()=>la,onesLike:()=>ba,op:()=>_e,outerProduct:()=>iw,pad:()=>_s,pad1d:()=>uw,pad2d:()=>NT,pad3d:()=>cw,pad4d:()=>Sy,pool:()=>Cy,pow:()=>yo,prelu:()=>Bh,print:()=>Op,prod:()=>mm,raggedGather:()=>hw,raggedRange:()=>Iy,raggedTensorToTensor:()=>dw,rand:()=>pw,randomGamma:()=>vw,randomNormal:()=>Ph,randomStandardNormal:()=>yw,randomUniform:()=>fl,range:()=>hl,real:()=>Rc,reciprocal:()=>Ty,relu:()=>Oi,relu6:()=>ym,reshape:()=>$e,reverse:()=>Xa,reverse1d:()=>Sw,reverse2d:()=>Ay,reverse3d:()=>Iw,reverse4d:()=>Ey,rfft:()=>Uc,round:()=>bm,rsqrt:()=>xm,scalar:()=>ln,scatterND:()=>gl,searchSorted:()=>hm,selu:()=>zh,separableConv2d:()=>wm,setdiff1dAsync:()=>Aw,sigmoid:()=>Za,sign:()=>My,signal:()=>Xy,sin:()=>Dy,sinh:()=>Sm,slice:()=>qn,slice1d:()=>Vc,slice2d:()=>Cm,slice3d:()=>Vh,slice4d:()=>dl,softmax:()=>Uh,softplus:()=>$i,spaceToBatchND:()=>Lh,sparse:()=>CN,sparseToDense:()=>Ww,spectral:()=>SN,split:()=>ca,sqrt:()=>Is,square:()=>ir,squaredDifference:()=>_m,squeeze:()=>pu,stack:()=>xa,step:()=>ml,stridedSlice:()=>Tm,string:()=>IN,sub:()=>Ht,sum:()=>Kt,tan:()=>Oy,tanh:()=>sl,tensor:()=>aa,tensor1d:()=>rs,tensor2d:()=>_o,tensor3d:()=>Rv,tensor4d:()=>Rw,tensor5d:()=>$w,tensor6d:()=>Fy,tensorScatterUpdate:()=>Ow,tile:()=>Ba,topk:()=>Ly,transpose:()=>Vn,truncatedNormal:()=>Gh,unique:()=>By,unsortedSegmentSum:()=>Am,unstack:()=>za,upperBound:()=>Bw,variable:()=>Py,where:()=>ps,whereAsync:()=>mu,zeros:()=>ns,zerosLike:()=>Gn});var Po={};ft.r(Po),ft.d(Po,{CSVDataset:()=>sF,Dataset:()=>kb,FileDataSource:()=>lF,TextLineDataset:()=>tF,URLDataSource:()=>cF,array:()=>zz,csv:()=>Yz,func:()=>Jz,generator:()=>Qz,microphone:()=>t4,version_data:()=>fF,webcam:()=>e4,zip:()=>Vz});var Ll={};ft.r(Ll),ft.d(Ll,{addImpl:()=>mF,bincountImpl:()=>fR,bincountReduceImpl:()=>gF,castImpl:()=>pF,ceilImpl:()=>vF,concatImpl:()=>yF,equalImpl:()=>bF,expImpl:()=>wF,expm1Impl:()=>SF,floorDivImpl:()=>IF,floorImpl:()=>CF,gatherNdImpl:()=>_F,gatherV2Impl:()=>TF,greaterEqualImpl:()=>EF,greaterImpl:()=>AF,lessEqualImpl:()=>MF,lessImpl:()=>kF,linSpaceImpl:()=>DF,logImpl:()=>RF,maxImpl:()=>$F,maximumImpl:()=>OF,minimumImpl:()=>FF,multiplyImpl:()=>hR,negImpl:()=>LF,notEqualImpl:()=>BF,prodImpl:()=>PF,raggedGatherImpl:()=>VF,raggedRangeImpl:()=>WF,raggedTensorToTensorImpl:()=>HF,rangeImpl:()=>KF,rsqrtImpl:()=>ZF,scatterImpl:()=>gd,sigmoidImpl:()=>Y4,simpleAbsImpl:()=>dF,sliceImpl:()=>XF,sparseFillEmptyRowsImpl:()=>YF,sparseReshapeImpl:()=>JF,sparseSegmentReductionImpl:()=>pR,sqrtImpl:()=>eV,squaredDifferenceImpl:()=>QF,staticRegexReplaceImpl:()=>e3,stridedSliceImpl:()=>t3,stringNGramsImpl:()=>n3,stringSplitImpl:()=>r3,stringToHashBucketFastImpl:()=>s3,subImpl:()=>a3,tileImpl:()=>i3,topKImpl:()=>u3,transposeImpl:()=>dR,uniqueImpl:()=>l3});var hf={};ft.r(hf),ft.d(hf,{assertNotComplex:()=>Og,bindCanvasToFramebuffer:()=>R6,bindColorTextureToFramebuffer:()=>SI,bindTextureToProgramUniformSampler:()=>G3,bindTextureUnit:()=>V3,bindVertexBufferToProgramAttribute:()=>SR,callAndCheck:()=>Vt,canBeRepresented:()=>k3,createFragmentShader:()=>R3,createFramebuffer:()=>z3,createProgram:()=>$3,createStaticIndexBuffer:()=>L3,createStaticVertexBuffer:()=>F3,createTexture:()=>B3,createVertexShader:()=>D3,getBatchDim:()=>yd,getExtensionOrThrow:()=>Fb,getFramebufferErrorMessage:()=>q3,getMaxTexturesInShader:()=>j3,getNumChannels:()=>M6,getProgramUniformLocation:()=>W3,getProgramUniformLocationOrThrow:()=>U3,getRowsCols:()=>bd,getShapeAs3D:()=>Bb,getTextureShapeFromLogicalShape:()=>K3,getWebGLDisjointQueryTimerVersion:()=>X3,getWebGLErrorMessage:()=>M3,getWebGLMaxTextureSize:()=>Z3,hasExtension:()=>wi,isCapableOfRenderingToFloatTexture:()=>Y3,isDownloadFloatTextureEnabled:()=>J3,isReshapeFree:()=>Pb,isWebGLFenceEnabled:()=>Q3,isWebGLVersionEnabled:()=>IR,linkProgram:()=>O3,logShaderSourceAndInfoLog:()=>NR,resetMaxTextureSize:()=>$6,resetMaxTexturesInShader:()=>O6,unbindColorTextureFromFramebuffer:()=>CR,unbindTextureUnit:()=>D6,validateFramebuffer:()=>Lb,validateProgram:()=>NI,validateTextureSize:()=>P3});var _u={};ft.r(_u),ft.d(_u,{bindVertexProgramAttributeStreams:()=>mL,createBufferFromOutputTexture:()=>yL,createFloat16MatrixTexture:()=>fL,createFloat16PackedMatrixTexture:()=>pL,createFloat32MatrixTexture:()=>cL,createIndexBuffer:()=>lL,createPackedMatrixTexture:()=>dL,createUnsignedBytesMatrixTexture:()=>hL,createVertexBuffer:()=>uL,createVertexShader:()=>oL,downloadByteEncodedFloatMatrixFromOutputTexture:()=>xL,downloadFloat32MatrixFromBuffer:()=>bL,downloadMatrixFromPackedOutputTexture:()=>NL,downloadPackedMatrixFromBuffer:()=>wL,getInternalFormatForFloat16MatrixTexture:()=>MR,getInternalFormatForFloat16PackedMatrixTexture:()=>$R,getInternalFormatForFloat32MatrixTexture:()=>kR,getInternalFormatForPackedMatrixTexture:()=>RR,getInternalFormatForUnsignedBytesMatrixTexture:()=>DR,uploadDenseMatrixToTexture:()=>gL,uploadPixelDataToTexture:()=>vL});var Ms={};ft.r(Ms),ft.d(Ms,{Abs:()=>Wl,Acos:()=>Yr,Acosh:()=>Mr,AdadeltaOptimizer:()=>Pp,AdagradOptimizer:()=>zp,AdamOptimizer:()=>Cv,AdamaxOptimizer:()=>Iv,Add:()=>Du,AddN:()=>pf,All:()=>Rd,Any:()=>mf,ArgMax:()=>na,ArgMin:()=>pn,Asin:()=>Gl,Asinh:()=>ql,Atan:()=>Uo,Atan2:()=>Vr,Atanh:()=>wt,AvgPool:()=>Ss,AvgPool3D:()=>Go,AvgPool3DGrad:()=>$d,AvgPoolGrad:()=>Wo,BatchMatMul:()=>rr,BatchToSpaceND:()=>sn,Bincount:()=>ka,BroadcastArgs:()=>Ru,BroadcastTo:()=>gf,Callback:()=>Sr,CallbackList:()=>ag,Cast:()=>Zs,Ceil:()=>$u,ClipByValue:()=>Ma,Complex:()=>vf,ComplexAbs:()=>Hl,Concat:()=>Kl,Conv2D:()=>Ou,Conv2DBackpropFilter:()=>fi,Conv2DBackpropInput:()=>Zl,Conv3D:()=>Fu,Conv3DBackpropFilterV2:()=>Od,Conv3DBackpropInputV2:()=>Fd,Cos:()=>hi,Cosh:()=>oo,CropAndResize:()=>bf,Cumprod:()=>yf,Cumsum:()=>Lu,CustomCallback:()=>CM,DataStorage:()=>Bl,DenseBincount:()=>Ld,DepthToSpace:()=>Bd,DepthwiseConv2dNative:()=>xf,DepthwiseConv2dNativeBackpropFilter:()=>Pd,DepthwiseConv2dNativeBackpropInput:()=>zd,Diag:()=>Vd,Dilation2D:()=>wf,Dilation2DBackpropFilter:()=>Wd,Dilation2DBackpropInput:()=>Ud,ENV:()=>ci,EarlyStopping:()=>Ys,Einsum:()=>Gd,Elu:()=>Xl,EluGrad:()=>qd,Environment:()=>ta,Equal:()=>Nf,Erf:()=>Yl,Exp:()=>Bu,ExpandDims:()=>Sf,Expm1:()=>Jl,FFT:()=>Hd,Fill:()=>Kd,FlipLeftRight:()=>Cf,Floor:()=>Ql,FloorDiv:()=>ec,FromPixels:()=>th,FusedBatchNorm:()=>If,FusedConv2D:()=>nh,FusedDepthwiseConv2D:()=>rh,GPGPUContext:()=>EI,GatherNd:()=>Zd,GatherV2:()=>_f,GraphModel:()=>eR,Greater:()=>Tf,GreaterEqual:()=>tc,History:()=>SM,IFFT:()=>jd,Identity:()=>nc,Imag:()=>Xd,InputSpec:()=>Hr,IsFinite:()=>rc,IsInf:()=>sc,IsNan:()=>ac,KernelBackend:()=>Pl,LRN:()=>lo,LRNGrad:()=>Pu,LayerVariable:()=>qi,LayersModel:()=>Il,LeakyRelu:()=>Af,Less:()=>Ef,LessEqual:()=>kf,LinSpace:()=>Yd,Log:()=>ic,Log1p:()=>oc,LogSoftmax:()=>Yn,LogicalAnd:()=>Mf,LogicalNot:()=>uo,LogicalOr:()=>qo,LogicalXor:()=>ar,LowerBound:()=>Ho,MathBackendCPU:()=>hF,MathBackendWebGL:()=>DL,MatrixBandPart:()=>Da,Max:()=>nr,MaxPool:()=>Ko,MaxPool3D:()=>di,MaxPool3DGrad:()=>uc,MaxPoolGrad:()=>zu,MaxPoolWithArgmax:()=>Zo,Maximum:()=>vn,Mean:()=>Df,Min:()=>lc,Minimum:()=>Vu,MirrorPad:()=>Rf,Mod:()=>cc,MomentumOptimizer:()=>Up,Multinomial:()=>Jd,Multiply:()=>fc,Neg:()=>$f,NonMaxSuppressionV3:()=>Qd,NonMaxSuppressionV4:()=>ep,NonMaxSuppressionV5:()=>tp,NotEqual:()=>Of,OP_SCOPE_SUFFIX:()=>iv,OneHot:()=>Lf,OnesLike:()=>Ff,Optimizer:()=>Di,OptimizerConstructors:()=>S1,Pack:()=>Bf,PadV2:()=>Pf,Pool:()=>zI,Pow:()=>hc,Prelu:()=>dc,Prod:()=>zf,RMSPropOptimizer:()=>_v,RNN:()=>Ji,RaggedGather:()=>np,RaggedRange:()=>rp,RaggedTensorToTensor:()=>sp,Range:()=>ap,Rank:()=>xp,Real:()=>Vf,RealDiv:()=>jl,Reciprocal:()=>mr,Reduction:()=>Bs,Relu:()=>hn,Relu6:()=>Wu,Reshape:()=>Uf,ResizeBilinear:()=>jo,ResizeBilinearGrad:()=>Xg,ResizeNearestNeighbor:()=>Uu,ResizeNearestNeighborGrad:()=>ip,Reverse:()=>op,RotateWithOffset:()=>mp,Round:()=>Wf,Rsqrt:()=>pc,SGDOptimizer:()=>Vp,ScatterNd:()=>Qn,SearchSorted:()=>Gf,Select:()=>mc,Selu:()=>qf,Sequential:()=>eb,Sigmoid:()=>gc,Sign:()=>pe,Sin:()=>Kf,Sinh:()=>Gu,Slice:()=>Hf,Softmax:()=>Jf,Softplus:()=>Zf,SpaceToBatchND:()=>Xf,SparseFillEmptyRows:()=>up,SparseReshape:()=>lp,SparseSegmentMean:()=>Ds,SparseSegmentSum:()=>Qt,SparseToDense:()=>pi,SplitV:()=>Yf,Sqrt:()=>Xo,Square:()=>cp,SquaredDifference:()=>vc,StaticRegexReplace:()=>yc,Step:()=>wc,StridedSlice:()=>fp,StringNGrams:()=>hp,StringSplit:()=>bc,StringToHashBucketFast:()=>Ii,Sub:()=>co,Sum:()=>jf,SymbolicTensor:()=>Hi,Tan:()=>xc,Tanh:()=>qu,Tensor:()=>jn,TensorBuffer:()=>Jr,TensorScatterUpdate:()=>Yg,Tile:()=>Hu,TopK:()=>dp,Transform:()=>Ku,Transpose:()=>qa,Unique:()=>pp,Unpack:()=>Qf,UnsortedSegmentSum:()=>Rs,UpperBound:()=>VI,Variable:()=>lh,ZerosLike:()=>eh,_FusedMatMul:()=>Nc,abs:()=>es,acos:()=>Zp,acosh:()=>Hv,add:()=>Nt,addN:()=>I1,all:()=>wh,any:()=>Nh,argMax:()=>nl,argMin:()=>jp,asin:()=>Xp,asinh:()=>Kv,atan:()=>Yp,atan2:()=>Zv,atanh:()=>jv,avgPool:()=>_h,avgPool3d:()=>Xv,backend:()=>Nv,backend_util:()=>re,basicLSTMCell:()=>$1,batchNorm:()=>al,batchNorm2d:()=>Yv,batchNorm3d:()=>Jv,batchNorm4d:()=>em,batchToSpaceND:()=>Th,bincount:()=>Qv,booleanMaskAsync:()=>Pw,broadcastArgs:()=>L1,broadcastTo:()=>cu,broadcast_util:()=>Re,browser:()=>Ie,buffer:()=>En,callbacks:()=>fa,cast:()=>Lt,ceil:()=>tm,clipByValue:()=>oa,clone:()=>ki,complex:()=>po,concat:()=>$r,concat1d:()=>nm,concat2d:()=>ty,concat3d:()=>ny,concat4d:()=>rm,constraints:()=>ge,conv1d:()=>sm,conv2d:()=>So,conv2dTranspose:()=>am,conv3d:()=>sy,conv3dTranspose:()=>iy,copyRegisteredKernels:()=>vp,cos:()=>Ah,cosh:()=>Eh,cosineWindow:()=>Em,cumprod:()=>kh,cumsum:()=>im,customGrad:()=>Mi,data:()=>Po,denseBincount:()=>Mh,deprecationWarn:()=>bv,depthToSpace:()=>oy,depthwiseConv2d:()=>Fc,deregisterOp:()=>Tb,device_util:()=>te,diag:()=>uy,dilation2d:()=>ly,disableDeprecationWarnings:()=>kx,dispose:()=>Tn,disposeVariables:()=>Mx,div:()=>nn,divNoNan:()=>um,dot:()=>cy,dropout:()=>Hh,einsum:()=>H1,elu:()=>il,enableDebugMode:()=>Ex,enableProdMode:()=>mh,enclosingPowerOfTwo:()=>Uy,engine:()=>Ha,env:()=>He,equal:()=>ga,erf:()=>fy,euclideanNorm:()=>py,exp:()=>va,expandDims:()=>Os,expm1:()=>my,eye:()=>Dh,fft:()=>Wh,fill:()=>su,findBackend:()=>Fx,findBackendFactory:()=>Lx,floor:()=>Bc,floorDiv:()=>Lp,forceHalfFloat:()=>$L,fused:()=>me,gather:()=>Pc,gatherND:()=>qw,gather_util:()=>Ge,getBackend:()=>$x,getGradient:()=>jb,getKernel:()=>Yo,getKernelsForBackend:()=>Cc,gpgpu_util:()=>_u,grad:()=>Vx,grads:()=>Ux,greater:()=>Fs,greaterEqual:()=>Co,ifft:()=>pl,imag:()=>yh,image:()=>Ya,inTopKAsync:()=>Hw,initializers:()=>Be,input:()=>aC,io:()=>Ne,irfft:()=>Im,isFinite:()=>gy,isInf:()=>lm,isNaN:()=>vy,keep:()=>Qr,kernel_impls:()=>ie,layers:()=>Ke,leakyRelu:()=>Rh,less:()=>ul,lessEqual:()=>hu,linalg:()=>Yy,linspace:()=>Q1,loadGraphModel:()=>vz,loadGraphModelSync:()=>yz,loadLayersModel:()=>dg,localResponseNormalization:()=>Pa,log:()=>ya,log1p:()=>$h,logSigmoid:()=>yy,logSoftmax:()=>cm,logSumExp:()=>ts,logicalAnd:()=>ja,logicalNot:()=>Oh,logicalOr:()=>Kn,logicalXor:()=>by,losses:()=>Jy,lowerBound:()=>Io,matMul:()=>Rn,math:()=>Se,max:()=>La,maxPool:()=>Fh,maxPool3d:()=>pm,maxPoolWithArgmax:()=>tw,maximum:()=>gi,mean:()=>Ir,memory:()=>Fp,meshgrid:()=>pT,metrics:()=>nt,min:()=>Lc,minimum:()=>du,mirrorPad:()=>xy,mod:()=>wy,model:()=>sC,models:()=>Tt,moments:()=>vs,movingAverage:()=>Vw,mul:()=>Ce,multiRNNCell:()=>sw,multinomial:()=>Ny,neg:()=>cr,nextFrame:()=>Qy,norm:()=>ol,notEqual:()=>ll,oneHot:()=>Dc,ones:()=>la,onesLike:()=>ba,op:()=>_e,outerProduct:()=>iw,pad:()=>_s,pad1d:()=>uw,pad2d:()=>NT,pad3d:()=>cw,pad4d:()=>Sy,pool:()=>Cy,pow:()=>yo,prelu:()=>Bh,print:()=>Op,prod:()=>mm,profile:()=>Dx,raggedGather:()=>hw,raggedRange:()=>Iy,raggedTensorToTensor:()=>dw,rand:()=>pw,randomGamma:()=>vw,randomNormal:()=>Ph,randomStandardNormal:()=>yw,randomUniform:()=>fl,range:()=>hl,ready:()=>C_,real:()=>Rc,reciprocal:()=>Ty,registerBackend:()=>wv,registerCallbackConstructor:()=>ZM,registerGradient:()=>Xb,registerKernel:()=>gp,registerOp:()=>Ib,regularizers:()=>Yt,relu:()=>Oi,relu6:()=>ym,removeBackend:()=>Ox,reshape:()=>$e,reverse:()=>Xa,reverse1d:()=>Sw,reverse2d:()=>Ay,reverse3d:()=>Iw,reverse4d:()=>Ey,rfft:()=>Uc,round:()=>bm,rsqrt:()=>xm,scalar:()=>ln,scatterND:()=>gl,scatter_util:()=>vt,searchSorted:()=>hm,selu:()=>zh,separableConv2d:()=>wm,sequential:()=>KM,serialization:()=>xe,setBackend:()=>xv,setPlatform:()=>I_,setWebGLContext:()=>E3,setdiff1dAsync:()=>Aw,shared:()=>Ll,sigmoid:()=>Za,sign:()=>My,signal:()=>Xy,sin:()=>Dy,sinh:()=>Sm,slice:()=>qn,slice1d:()=>Vc,slice2d:()=>Cm,slice3d:()=>Vh,slice4d:()=>dl,slice_util:()=>tt,softmax:()=>Uh,softplus:()=>$i,spaceToBatchND:()=>Lh,sparse:()=>CN,sparseToDense:()=>Ww,spectral:()=>SN,split:()=>ca,sqrt:()=>Is,square:()=>ir,squaredDifference:()=>_m,squeeze:()=>pu,stack:()=>xa,step:()=>ml,stridedSlice:()=>Tm,string:()=>IN,sub:()=>Ht,sum:()=>Kt,sumOutType:()=>Ip,tan:()=>Oy,tanh:()=>sl,tensor:()=>aa,tensor1d:()=>rs,tensor2d:()=>_o,tensor3d:()=>Rv,tensor4d:()=>Rw,tensor5d:()=>$w,tensor6d:()=>Fy,tensorScatterUpdate:()=>Ow,tensor_util:()=>Ve,test_util:()=>ue,tidy:()=>qe,tile:()=>Ba,time:()=>Rx,topk:()=>Ly,train:()=>Ao,transpose:()=>Vn,truncatedNormal:()=>Gh,unique:()=>By,unregisterGradient:()=>WI,unregisterKernel:()=>Jg,unsortedSegmentSum:()=>Am,unstack:()=>za,upcastType:()=>ra,upperBound:()=>Bw,util:()=>be,valueAndGrad:()=>Wx,valueAndGrads:()=>k_,variable:()=>Py,variableGrads:()=>Sv,version:()=>DY,version_converter:()=>qO,version_core:()=>qv,version_cpu:()=>c3,version_layers:()=>Z0,version_webgl:()=>RL,webgl:()=>Kq,webgl_util:()=>hf,where:()=>ps,whereAsync:()=>mu,zeros:()=>ns,zerosLike:()=>Gn});var no=ft(56),Fe=ft(5861);class Bl{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Pl{refCount(t){return Gs("refCount")}incRef(t){return Gs("incRef")}timerAvailable(){return!0}time(t){return Gs("time")}read(t){return Gs("read")}readSync(t){return Gs("readSync")}readToGPU(t,e){return Gs("readToGPU")}numDataIds(){return Gs("numDataIds")}disposeData(t,e){return Gs("disposeData")}write(t,e,r){return Gs("write")}move(t,e,r,s,a){return Gs("move")}createTensorFromGPUData(t,e,r){return Gs("createTensorFromGPUData")}memory(){return Gs("memory")}floatPrecision(){return Gs("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Gs("dispose")}}function Gs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function zo(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Ga(n,t,e)}function Kg(n,t){if(n.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${t.length}`);let e=n.length,r=0;for(;e>0;)r=Math.random()*e|0,e--,Ga(n,e,r),Ga(t,e,r)}function Wa(n,t,e){return Math.max(n,Math.min(t,e))}function Au(n){return n%2==0?n:n+1}function Ga(n,t,e){const r=n[t];n[t]=n[e],n[e]=r}function Pe(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function et(n,t){const e=Math.random();return t*e+(1-e)*n}function ht(n,t){let e=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(t[r]);e+=s*s}return e}function q(n,t){if(!n)throw new Error("string"==typeof t?t:t())}function Ft(n,t,e=""){q(_t(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function rn(n){q(null!=n,()=>"The input to the tensor constructor must be a non-null value.")}function ze(n){if(0===n.length)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function un(n){return 0===n.length}function _t(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function bn(n){return n%1==0}function qs(n){if(null!=Math.tanh)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const t=Math.exp(2*n);return(t-1)/(t+1)}}function Ns(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function da(n){const t=new Uint32Array(n);for(let e=0;e<n;++e)t[e]=e;return zo(t),t}function Aa(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function zl(n,t=(s=>0),e,r){return new Promise((s,a)=>{let i=0;const c=()=>{if(n())return void s();i++;const d=t(i);null!=e&&i>=e?a():null!=r?r(c,d):setTimeout(c,d)};c()})}function Eu(n,t){let e=1,r=-1;for(let a=0;a<n.length;++a)if(n[a]>=0)e*=n[a];else if(-1===n[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(n[a]<0)throw Error(`Shapes can not be < 0. Found ${n[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(0===e)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const s=n.slice();return s[r]=t/e,s}function Mn(n,t){const e=t.length;return q((n=null==n?t.map((r,s)=>s):[].concat(n)).every(r=>r>=-e&&r<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),q(n.every(r=>bn(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?e+r:r)}function Ea(n,t){const e=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:Mn(t,n).sort();let i=0;for(let c=0;c<n.length;++c){if(null!=a){if(a[i]===c&&1!==n[c])throw new Error(`Can't squeeze axis ${c} since its dim '${n[c]}' is not 1`);(null==a[i]||a[i]>c)&&1===n[c]&&(e.push(n[c]),r.push(c)),a[i]<=c&&i++}1!==n[c]&&(e.push(n[c]),r.push(c))}return{newShape:e,keptDims:r}}function jr(n,t){return Wn(n,t)}function Wn(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else if("bool"===n)e=new Uint8Array(t);else{if("string"!==n)throw new Error(`Unknown data type ${n}`);e=new Array(t)}return e}function li(n,t){for(let e=0;e<n.length;e++){const r=n[e];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Zg(n){return"bool"===n||"complex64"===n||"float32"===n||"int32"===n||"string"===n}function ku(n,t){return!("complex64"===t||"float32"===t&&"complex64"!==n||"int32"===t&&"float32"!==n&&"complex64"!==n||"bool"===t&&"bool"===n)}function ro(n){if("float32"===n||"int32"===n)return 4;if("complex64"===n)return 8;if("bool"===n)return 1;throw new Error(`Unknown dtype ${n}`)}function so(n){if(null==n)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Hs(n){return"string"==typeof n||n instanceof String}function Td(n){return"boolean"==typeof n}function Vl(n){return"number"==typeof n}function ao(n){return Array.isArray(n)?ao(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Vl(n)?"float32":Hs(n)?"string":Td(n)?"bool":"float32"}function Ci(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Mu(n,t){for(let e=t;e<n;++e)if(n%e==0)return e;return n}function tn(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let r=t-3;r>=0;--r)e[r]=e[r+1]*n[r+1];return e}function Ad(n,t,e,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let i=0;i<a;i++)s[i]=e[n+i]}else{const a=t[0],i=t.slice(1),c=i.reduce((d,m)=>d*m)*(r?2:1);for(let d=0;d<a;d++)s[d]=Ad(n+d*c,i,e,r)}return s}function Xr(n,t,e=!1){if(0===n.length)return t[0];const r=n.reduce((s,a)=>s*a)*(e?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Ad(0,n,t,e)}function df(n,t){if(Array.isArray(n))return n;if("float32"===t)return n instanceof Float32Array?n:new Float32Array(n);if("int32"===t)return n instanceof Int32Array?n:new Int32Array(n);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Vo(n,t){const e=zr(n,t);for(let r=0;r<e.length;r++)e[r]=1;return e}function zr(n,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t)return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function Ed(n,t){const e=n.reduce((r,s)=>r*s,1);if(null==t||"float32"===t)return Xr(n,new Float32Array(e));if("int32"===t)return Xr(n,new Int32Array(e));if("bool"===t)return Xr(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Ks(n){n.forEach(t=>{q(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function pa(n,t,e){if(0===t)return 0;if(1===t)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=e[s]*n[s];return r}function yt(n,t,e){if(0===t)return[];if(1===t)return[n];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/e[s]),n-=r[s]*e[s];return r[r.length-1]=n,r}function Ln(n){return n&&n.then&&"function"==typeof n.then}const wr="tfjsflags";class ta{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=kd,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,r){if(this.flagRegistry[t]={evaluationFn:e,setHook:r},null!=this.urlFlags[t]){const s=this.urlFlags[t];He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${s}.`),this.set(t,s)}}getAsync(t){var e=this;return(0,Fe.Z)(function*(){return t in e.flags||(e.flags[t]=yield e.evaluateFlag(t)),e.flags[t]})()}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Ln(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);wr in t&&t[wr].split(",").forEach(r=>{const[s,a]=r.split(":");this.urlFlags[s]=function jg(n,t){const e=t.toLowerCase();return"true"===e||"false"===e?"true"===e:""+ +e===e?+e:t}(0,a)})}}function kd(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>(function Md(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}(t,r[0],r[1]),r.join("="))),t}function He(){return ci}let Ul,ci=null;function io(){if(null==Ul){let n;if("undefined"!=typeof window)n=window;else if("undefined"!=typeof global)n=global;else if("undefined"!=typeof process)n=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");n=self}Ul=n}return Ul}function Dd(n,t){const e=function Zb(){const n=io();return null==n._tfGlobals&&(n._tfGlobals=new Map),n._tfGlobals}();if(e.has(n))return e.get(n);{const r=t();return e.set(n,r),e.get(n)}}const Wl="Abs",Yr="Acos",Mr="Acosh",Du="Add",pf="AddN",Rd="All",mf="Any",na="ArgMax",pn="ArgMin",Gl="Asin",ql="Asinh",Uo="Atan",wt="Atanh",Vr="Atan2",Ss="AvgPool",Wo="AvgPoolGrad",Go="AvgPool3D",$d="AvgPool3DGrad",rr="BatchMatMul",sn="BatchToSpaceND",ka="Bincount",gf="BroadcastTo",Ru="BroadcastArgs",Zs="Cast",$u="Ceil",Ma="ClipByValue",vf="Complex",Hl="ComplexAbs",Kl="Concat",Ou="Conv2D",fi="Conv2DBackpropFilter",Zl="Conv2DBackpropInput",Fu="Conv3D",Od="Conv3DBackpropFilterV2",Fd="Conv3DBackpropInputV2",hi="Cos",oo="Cosh",yf="Cumprod",Lu="Cumsum",bf="CropAndResize",Ld="DenseBincount",Bd="DepthToSpace",xf="DepthwiseConv2dNative",Pd="DepthwiseConv2dNativeBackpropFilter",zd="DepthwiseConv2dNativeBackpropInput",Vd="Diag",wf="Dilation2D",Ud="Dilation2DBackpropInput",Wd="Dilation2DBackpropFilter",jl="RealDiv",Gd="Einsum",Xl="Elu",qd="EluGrad",Yl="Erf",Nf="Equal",Bu="Exp",Sf="ExpandDims",Jl="Expm1",Hd="FFT",Kd="Fill",Cf="FlipLeftRight",Ql="Floor",ec="FloorDiv",If="FusedBatchNorm",_f="GatherV2",Zd="GatherNd",Tf="Greater",tc="GreaterEqual",nc="Identity",jd="IFFT",Xd="Imag",rc="IsFinite",sc="IsInf",ac="IsNan",Af="LeakyRelu",Ef="Less",kf="LessEqual",Yd="LinSpace",ic="Log",oc="Log1p",Mf="LogicalAnd",uo="LogicalNot",qo="LogicalOr",ar="LogicalXor",Yn="LogSoftmax",Ho="LowerBound",lo="LRN",Pu="LRNGrad",Da="MatrixBandPart",nr="Max",vn="Maximum",Ko="MaxPool",zu="MaxPoolGrad",di="MaxPool3D",uc="MaxPool3DGrad",Zo="MaxPoolWithArgmax",Df="Mean",lc="Min",Vu="Minimum",Rf="MirrorPad",cc="Mod",Jd="Multinomial",fc="Multiply",$f="Neg",Of="NotEqual",Qd="NonMaxSuppressionV3",ep="NonMaxSuppressionV4",tp="NonMaxSuppressionV5",Ff="OnesLike",Lf="OneHot",Bf="Pack",Pf="PadV2",zI="Pool",hc="Pow",dc="Prelu",zf="Prod",np="RaggedGather",rp="RaggedRange",sp="RaggedTensorToTensor",ap="Range",Vf="Real",mr="Reciprocal",hn="Relu",Uf="Reshape",Uu="ResizeNearestNeighbor",ip="ResizeNearestNeighborGrad",jo="ResizeBilinear",Xg="ResizeBilinearGrad",Wu="Relu6",op="Reverse",Wf="Round",pc="Rsqrt",Qn="ScatterNd",Yg="TensorScatterUpdate",Gf="SearchSorted",mc="Select",qf="Selu",Hf="Slice",Kf="Sin",Gu="Sinh",pe="Sign",gc="Sigmoid",Zf="Softplus",Xo="Sqrt",jf="Sum",Xf="SpaceToBatchND",Yf="SplitV",Jf="Softmax",up="SparseFillEmptyRows",lp="SparseReshape",Ds="SparseSegmentMean",Qt="SparseSegmentSum",pi="SparseToDense",vc="SquaredDifference",cp="Square",yc="StaticRegexReplace",fp="StridedSlice",hp="StringNGrams",bc="StringSplit",Ii="StringToHashBucketFast",co="Sub",xc="Tan",qu="Tanh",Hu="Tile",dp="TopK",Ku="Transform",qa="Transpose",pp="Unique",Qf="Unpack",Rs="UnsortedSegmentSum",VI="UpperBound",eh="ZerosLike",wc="Step",th="FromPixels",mp="RotateWithOffset",Nc="_FusedMatMul",nh="FusedConv2D",rh="FusedDepthwiseConv2D";function Ra(...n){He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(...n)}function UI(...n){He().getBool("IS_TEST")||He().getBool("PROD")||console.log(...n)}const Sc=Dd("kernelRegistry",()=>new Map),sh=Dd("gradRegistry",()=>new Map);function Yo(n,t){const e=Qg(n,t);return Sc.get(e)}function jb(n){return sh.get(n)}function Cc(n){const t=Sc.entries(),e=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[c]=a.split("_");c===n&&e.push(i)}return e}function gp(n){const{kernelName:t,backendName:e}=n,r=Qg(t,e);Sc.has(r)&&Ra(`The kernel '${t}' for backend '${e}' is already registered`),Sc.set(r,n)}function Xb(n){const{kernelName:t}=n;sh.has(t)&&He().getBool("DEBUG")&&Ra(`Overriding the gradient for '${t}'`),sh.set(t,n)}function Jg(n,t){const e=Qg(n,t);if(!Sc.has(e))throw new Error(`The kernel '${n}' for backend '${t}' is not registered`);Sc.delete(e)}function WI(n){if(!sh.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);sh.delete(n)}function vp(n,t){Cc(n).forEach(r=>{gp(Object.assign({},r,{backendName:t}))})}function Qg(n,t){return`${t}_${n}`}function Yb(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Jb=ft(7658);const Zu=ft.n(Jb)()||Jb;function ah(n){return Zu.fromString(n,!0,16)}const Qb=ah("c3a5c85c97cb3127"),ju=ah("b492b66fbe98f273"),js=ah("9ae16a3b2f90404f");function ev(n){return n.xor(n.shru(47))}function ex(n,t,e){const r=n.slice(t,t+e);return Zu.fromBytes(Array.from(r),!0,!0)}function gr(n,t){return ex(n,t,8)}function tx(n,t){return ex(n,t,4)}function fs(n,t){return 0===t?n:n.shru(t).or(n.shl(64-t))}function Jo(n,t,e=ah("9ddfea08eb382d69")){let r=n.xor(t).mul(e);r=r.xor(r.shru(47));let s=t.xor(r).mul(e);return s=s.xor(s.shru(47)),s=s.mul(e),s}function yp(n,t,e,r){return function qI(n,t,e,r,s,a){s=s.add(n),a=fs(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(e),a=a.add(fs(s,44)),[s.add(r),a.add(i)]}(gr(n,t),gr(n,t+8),gr(n,t+16),gr(n,t+24),e,r)}function jI(n,t=n.length){const e=Zu.fromNumber(81,!0);if(t<=32)return t<=16?function HI(n,t=n.length){if(t>=8){const e=js.add(2*t),r=gr(n,0).add(js),s=gr(n,t-8);return Jo(fs(s,37).mul(e).add(r),fs(r,25).add(s).mul(e),e)}if(t>=4){const e=js.add(2*t);return Jo(tx(n,0).shl(3).add(t),tx(n,t-4),e)}if(t>0){const i=t+(n[t-1]<<2);return ev(js.mul(n[0]+(n[t>>1]<<8)).xor(Qb.mul(i))).mul(js)}return js}(n,t):function KI(n,t=n.length){const e=js.add(2*t),r=gr(n,0).mul(ju),s=gr(n,8),a=gr(n,t-8).mul(e),i=gr(n,t-16).mul(js);return Jo(fs(r.add(s),43).add(fs(a,30)).add(i),r.add(fs(s.add(js),18)).add(a),e)}(n,t);if(t<=64)return function ZI(n,t=n.length){const e=js.add(2*t),r=gr(n,0).mul(js),s=gr(n,8),a=gr(n,t-8).mul(e),i=gr(n,t-16).mul(js),c=fs(r.add(s),43).add(fs(a,30)).add(i),d=Jo(c,r.add(fs(s.add(js),18)).add(a),e),m=gr(n,16).mul(e),g=gr(n,24),y=c.add(gr(n,t-32)).mul(e),C=d.add(gr(n,t-24)).mul(e);return Jo(fs(m.add(g),43).add(fs(y,30)).add(C),m.add(fs(g.add(r),18)).add(y),e)}(n,t);let r=e,s=e.mul(ju).add(113),a=ev(s.mul(js).add(113)).mul(js),i=[Zu.UZERO,Zu.UZERO],c=[Zu.UZERO,Zu.UZERO];r=r.mul(js).add(gr(n,0));let d=0;const m=64*(t-1>>6),g=m+(t-1&63)-63;do{r=fs(r.add(s).add(i[0]).add(gr(n,d+8)),37).mul(ju),s=fs(s.add(i[1]).add(gr(n,d+48)),42).mul(ju),r=r.xor(c[1]),s=s.add(i[0]).add(gr(n,d+40)),a=fs(a.add(c[0]),33).mul(ju),i=yp(n,d,i[1].mul(ju),r.add(c[0])),c=yp(n,d+32,a.add(c[1]),s.add(gr(n,d+16))),[a,r]=[r,a],d+=64}while(d!==m);const y=ju.add(a.and(255).shl(1));return d=g,c[0]=c[0].add(t-1&63),i[0]=i[0].add(c[0]),c[0]=c[0].add(i[0]),r=fs(r.add(s).add(i[0]).add(gr(n,d+8)),37).mul(y),s=fs(s.add(i[1]).add(gr(n,d+48)),42).mul(y),r=r.xor(c[1].mul(9)),s=s.add(i[0].mul(9).add(gr(n,d+40))),a=fs(a.add(c[0]),33).mul(y),i=yp(n,d,i[1].mul(y),r.add(c[0])),c=yp(n,d+32,a.add(c[1]),s.add(gr(n,d+16))),[a,r]=[r,a],Jo(Jo(i[0],c[0],y).add(ev(s).mul(Qb)).add(a),Jo(i[1],c[1],y).add(r),y)}function Qo(n,t){return"string"===t?_i(n):is([n],t)}function is(n,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Ti(n)),He().getBool("DEBUG")&&li(n,t),function XI(n,t){return n instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t}(n,t))return n;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t){const e=new Uint8Array(n.length);for(let r=0;r<e.length;++r)0!==Math.round(n[r])&&(e[r]=1);return e}throw new Error(`Unknown data type ${t}`)}function Cs(){return He().platform.now()}function nx(n,t){return He().platform.fetch(n,t)}function _i(n,t="utf-8"){return t=t||"utf-8",He().platform.encode(n,t)}function fo(n,t="utf-8"){return t=t||"utf-8",He().platform.decode(n,t)}function hs(n){return null!=He().platform.isTypedArray?He().platform.isTypedArray(n):Yb(n)}function Ti(n,t=[],e=!1){if(null==t&&(t=[]),"boolean"==typeof n||"number"==typeof n||"string"==typeof n||Ln(n)||null==n||hs(n)&&e)t.push(n);else if(Array.isArray(n)||hs(n))for(let r=0;r<n.length;++r)Ti(n[r],t,e);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)Ti(n[s],t,e)}return t}class YI{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new QI)}profileKernel(t,e,r){let s;const a=()=>{s=r()};let i;const c=Cs();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const m of s)m.dataSync();i=Promise.resolve({kernelMs:Cs()-c})}if(He().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let m=0;m<s.length;m++){const g=s[m];g.data().then(y=>{JI(y,g.dtype,t)})}return{kernelName:t,outputs:s,inputs:e,timeMs:i.then(m=>m.kernelMs),extraInfo:i.then(m=>null!=m.getExtraProfileInfo?m.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:r,timeMs:s,inputs:a,extraInfo:i}=t;r.forEach(c=>{Promise.all([c.data(),s,i]).then(d=>{this.logger.logKernelProfile(e,c,d[0],d[1],a,d[2])})})}}function JI(n,t,e){if("float32"!==t)return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${e}'`),!0}return!1}class QI{logKernelProfile(t,e,r,s,a,i){const c="number"==typeof s?Aa(`${s}ms`,9):s.error,d=Aa(t,25),m=e.rank,g=e.size,y=Aa(e.shape.toString(),14);let C="";for(const T in a){const k=a[T];if(null!=k){const D=k.shape||e.shape,M=D.length;C+=`${T}: ${M}D ${M>0?D:""} `}}console.log(`%c${d}\t%c${c}\t%c${m}D ${y}\t%c${g}\t%c${C}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function n_(n,t,e,r){const s=tn(t),a=function KR(n,t,e,r){const s=ze(t),a=r[r.length-1],i=new Array(a).fill(0),c=t.length,d="complex64"===e?uh(n):n;if(c>1)for(let m=0;m<s/a;m++){const g=m*a;for(let y=0;y<a;y++)i[y]=Math.max(i[y],oh(d[g+y],0,e).length)}return i}(n,t,e,s),i=t.length,c=bp(n,t,e,s,a),d=["Tensor"];return r&&(d.push(`  dtype: ${e}`),d.push(`  rank: ${i}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(c.map(m=>"    "+m).join("\n")),d.join("\n")}function oh(n,t,e){let r;return r=Array.isArray(n)?`${parseFloat(n[0].toFixed(7))} + ${parseFloat(n[1].toFixed(7))}j`:Hs(n)?`'${n}'`:"bool"===e?sx(n):parseFloat(n.toFixed(7)).toString(),Aa(r,t)}function sx(n){return 0===n?"false":"true"}function bp(n,t,e,r,s,a=!0){const i="complex64"===e?2:1,c=t[0],d=t.length;if(0===d)return"complex64"===e?[oh(uh(n)[0],0,e)]:"bool"===e?[sx(n[0])]:[n[0].toString()];if(1===d){if(c>20){let R=Array.from(n.slice(0,3*i)),$=Array.from(n.slice((c-3)*i,c*i));return"complex64"===e&&(R=uh(R),$=uh($)),["["+R.map((V,G)=>oh(V,s[G],e)).join(", ")+", ..., "+$.map((V,G)=>oh(V,s[c-3+G],e)).join(", ")+"]"]}return["["+("complex64"===e?uh(n):Array.from(n)).map((M,R)=>oh(M,s[R],e)).join(", ")+"]"]}const m=t.slice(1),g=r.slice(1),y=r[0]*i,C=[];if(c>20){for(let D=0;D<3;D++){const M=D*y;C.push(...bp(n.slice(M,M+y),m,e,g,s,!1))}C.push("...");for(let D=c-3;D<c;D++){const M=D*y;C.push(...bp(n.slice(M,M+y),m,e,g,s,D===c-1))}}else for(let D=0;D<c;D++){const M=D*y;C.push(...bp(n.slice(M,M+y),m,e,g,s,D===c-1))}const T=2===d?",":"";C[0]="["+(c>0?C[0]+T:"");for(let D=1;D<C.length-1;D++)C[D]=" "+C[D]+T;let k=",\n";for(let D=2;D<d;D++)k+="\n";return C[C.length-1]=" "+C[C.length-1]+"]"+(a?"":k),C}function uh(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}class Jr{constructor(t,e,r){if(this.dtype=e,this.shape=t.slice(),this.size=ze(t),null!=r){const s=r.length;q(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Wn(e,this.size),this.strides=tn(t)}set(t,...e){0===e.length&&(e=[0]),q(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const r=this.locToIndex(e);this.values[r]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const s of t){if(s<0||s>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=${this.shape}`);e++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let r=0;r<t.length-1;++r)e+=this.strides[r]*t[r];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let r=0;r<e.length-1;++r)e[r]=Math.floor(t/this.strides[r]),t-=e[r]*this.strides[r];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return mi().makeTensor(this.values,this.shape,this.dtype)}}let mi=null,Ic=null,ax=null;class jn{constructor(t,e,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ze(t),this.strides=tn(t),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.data();return Ic.buffer(t.shape,t.dtype,e)})()}bufferSync(){return Ic.buffer(this.shape,this.dtype,this.dataSync())}array(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.data();return Xr(t.shape,e,"complex64"===t.dtype)})()}arraySync(){return Xr(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var t=this;return(0,Fe.Z)(function*(){t.throwIfDisposed();const e=mi().read(t.dataId);if("string"===t.dtype){const r=yield e;try{return r.map(s=>fo(s))}catch(s){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})()}dataToGPU(t){return this.throwIfDisposed(),mi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=mi().readSync(this.dataId);if("string"===this.dtype)try{return t.map(e=>fo(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){var t=this;return(0,Fe.Z)(function*(){t.throwIfDisposed();const e=yield mi().read(t.dataId);return"string"===t.dtype?e:new Uint8Array(e.buffer)})()}dispose(){this.isDisposed||(mi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ic.print(this,t)}clone(){return this.throwIfDisposed(),Ic.clone(this)}toString(t=!1){return n_(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ic.cast(this,t)}variable(t=!0,e,r){return this.throwIfDisposed(),mi().makeVariable(this,t,e,r)}}function it(){return Dd("Tensor",()=>jn)}Object.defineProperty(jn,Symbol.hasInstance,{value:n=>!!n&&null!=n.data&&null!=n.dataSync&&null!=n.throwIfDisposed}),it();class lh extends jn{constructor(t,e,r,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=r}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!_t(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);mi().disposeTensor(this),this.dataId=t.dataId,mi().incRef(this,null)}dispose(){mi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(lh,Symbol.hasInstance,{value:n=>n instanceof jn&&null!=n.assign&&n.assign instanceof Function});var xp=(()=>{return(n=xp||(xp={})).R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6",xp;var n})(),wp=(()=>{return(n=wp||(wp={})).float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64",wp;var n})(),Np=(()=>{return(n=Np||(Np={})).float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64",Np;var n})(),Sp=(()=>{return(n=Sp||(Sp={})).float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64",Sp;var n})(),Cp=(()=>{return(n=Cp||(Cp={})).float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64",Cp;var n})();const i_={float32:Sp,int32:wp,bool:Np,complex64:Cp};function ra(n,t){if("string"===n||"string"===t){if("string"===n&&"string"===t)return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return i_[n][t]}function Ip(n){return ra(n,"int32")}function ix(n){return null!=n&&"object"==typeof n&&"texture"in n&&n.texture instanceof WebGLTexture}function ox(n){return"undefined"!=typeof GPUBuffer&&null!=n&&"object"==typeof n&&"buffer"in n&&n.buffer instanceof GPUBuffer}function Dr(n,t){if(n.dtype===t.dtype)return[n,t];const e=ra(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function ux(n,t){q(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function _p(n,t){return t.some(e=>e.id===n.id)}function ho(n){const t=[];return lx(n,t,new Set),t}function lx(n,t,e){if(null==n)return;if(n instanceof jn)return void t.push(n);if(!function o_(n){return Array.isArray(n)||"object"==typeof n}(n))return;const r=n;for(const s in r){const a=r[s];e.has(a)||(e.add(a),lx(a,t,e))}}function nv(n){return null!=n.kernelName}class cx{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}let u_=(()=>{class n{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new cx}ready(){var e=this;return(0,Fe.Z)(function*(){if(null!=e.pendingBackendInit)return e.pendingBackendInit.then(()=>{});if(null!=e.backendInstance)return;const r=e.getSortedBackends();for(let s=0;s<r.length;s++){const a=r[s];if(yield e.initializeBackend(a).success)return void(yield e.setBackend(a))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:r}=this.initializeBackendsAndReturnBest();if(r)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:r}=this.initializeBackend(e);if(r)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,r,s=1){return e in this.registryFactory?(Ra(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:r,priority:s},!0)}setBackend(e){var r=this;return(0,Fe.Z)(function*(){if(null==r.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(r.backendName=e,null==r.registry[e]){r.backendInstance=null;const{success:s,asyncInit:a}=r.initializeBackend(e);if(!(a?yield s:s))return!1}return r.backendInstance=r.registry[e],r.setupRegisteredKernels(),r.profiler=new YI(r.backendInstance),!0})()}setupRegisteredKernels(){Cc(this.backendName).forEach(r=>{null!=r.setupFunc&&r.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Cc(e).forEach(s=>{null!=s.disposeFunc&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const r=this.registryFactory[e];if(null==r)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=r.factory();if(!s||s instanceof Pl||"function"!=typeof s.then)return this.registry[e]=s,{success:!0,asyncInit:!1};{const a=++this.pendingBackendInitId,i=s.then(c=>!(a<this.pendingBackendInitId||(this.registry[e]=c,this.pendingBackendInit=null,0))).catch(c=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Ra(`Initialization of backend ${e} failed`),Ra(c.stack||c.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}}catch(s){return Ra(`Initialization of backend ${e} failed`),Ra(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,r)=>this.registryFactory[r].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let r=0;r<e.length;r++){const s=e[r],{success:a,asyncInit:i}=this.initializeBackend(s);if(i||a)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,r){const s=this.state.tensorInfo.get(r),a=s.backend,i=this.readSync(r),c=a.refCount(r);a.disposeData(r,!0),s.backend=e,e.move(r,i,s.shape,s.dtype,c),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,r){let a,s=null;if(null==r){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");r=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof r)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun(()=>this.startScope(s),()=>this.endScope(a),()=>(a=r(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,r,s){e();try{const a=s();return r(),a}catch(a){throw r(),a}}nextTensorId(){return n.nextTensorId++}nextVariableId(){return n.nextVariableId++}clone(e){const r=ce.runKernel(nc,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[r],c=>({x:()=>ce.runKernel(Zs,{x:c},{dtype:"float32"})}),[],{}),r}runKernel(e,r,s){if(null==Yo(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:r,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,r,s){const a=this.backend.numDataIds();let i=0;s.forEach(m=>{i+="complex64"===m.dtype?3:1});const d=a-r-i-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(d>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${d} data ids) after running '${e}'`)}runKernelFunc(e){let r,s=[];const a=this.isTapeOn(),i=this.state.numBytes,c=this.state.numTensors;let d,m;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const g=nv(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(nv(e)){const{kernelName:D,inputs:M,attrs:R}=e,$=Yo(D,this.backendName);q(null!=$,()=>`Cannot find registered kernel '${D}' for backend '${this.backendName}'`),d=()=>{const V=this.backend.numDataIds();m=$.kernelFunc({inputs:M,attrs:R,backend:this.backend});const G=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(D,V,G);const K=G.map(ae=>null!=ae.rank?ae:this.makeTensorFromTensorInfo(ae));if(a){const ae=this.getTensorsForGradient(D,M,K);s=this.saveTensorsForBackwardMode(ae)}return K}}else{const{forwardFunc:D}=e,M=R=>{!a||(s=R.map($=>this.keep(this.clone($))))};d=()=>{const R=this.backend.numDataIds();m=this.tidy(()=>D(this.backend,M));const $=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,R,$),$}}const{inputs:y,attrs:C}=e,T=nv(e)?null:e.backwardsFunc;let k;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(k=this.profiler.profileKernel(g,y,()=>d()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(k),r=k.outputs):r=d()}),a&&this.addTapeNode(g,y,r,T,s,C),this.state.profiling&&this.state.activeProfile.kernels.push({name:g,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(y).map(D=>null!=y[D]?y[D].shape:null),outputShapes:r.map(D=>D.shape),kernelTimeMs:k.timeMs,extraInfo:k.extraInfo}),Array.isArray(m)?r:r[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,r,s){const a=jb(e);if(null!=a){const i=a.inputsToSave||[],c=a.outputsToSave||[];let d;a.saveAllInputs?(q(Array.isArray(r),()=>"saveAllInputs is true, expected inputs to be an array."),d=Object.keys(r).map(g=>r[g])):d=i.map(g=>r[g]);const m=s.filter((g,y)=>c[y]);return d.concat(m)}return[]}makeTensor(e,r,s,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");a=a||this.backend;let i=e;"string"===(s=s||"float32")&&Hs(e[0])&&(i=e.map(m=>_i(m)));const c=a.write(i,r,s),d=new jn(r,s,c,this.nextTensorId());if(this.trackTensor(d,a),"string"===s){const m=this.state.tensorInfo.get(c),g=so(i);this.state.numBytes+=g-m.bytes,m.bytes=g}return d}makeTensorFromDataId(e,r,s,a){return this.makeTensorFromTensorInfo({dataId:e,shape:r,dtype:s=s||"float32"},a)}makeTensorFromTensorInfo(e,r){const{dataId:s,shape:a,dtype:i}=e,c=new jn(a,i,s,this.nextTensorId());return this.trackTensor(c,r),c}makeVariable(e,r=!0,s,a){s=s||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const i=new lh(e,r,s,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,r){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let s=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(s=e.size*ro(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:r||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof lh||this.track(e)}incRef(e,r){this.trackTensor(e,r),this.backend.incRef(e.dataId)}removeDataId(e,r){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===r&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const r=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=r.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const s=e.size*ro(e.dtype);this.state.numBytes-=s}r.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,r.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){var r=this;return(0,Fe.Z)(function*(){r.state.profiling=!0;const s=r.state.numBytes,a=r.state.numTensors;r.state.activeProfile.kernels=[],r.state.activeProfile.result=yield e(),r.state.profiling=!1,r.state.activeProfile.peakBytes=Math.max(...r.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),r.state.activeProfile.newBytes=r.state.numBytes-s,r.state.activeProfile.newTensors=r.state.numTensors-a;for(const i of r.state.activeProfile.kernels)i.kernelTimeMs=yield i.kernelTimeMs,i.extraInfo=yield i.extraInfo;return r.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,r,s,a,i,c){const d={id:this.state.nextTapeNodeId++,kernelName:e,inputs:r,outputs:s,saved:i},m=jb(e);null!=m&&(a=m.gradFunc),null!=a&&(d.gradient=g=>(g=g.map((y,C)=>{if(null==y){const T=s[C],k=zr(T.size,T.dtype);return this.makeTensor(k,T.shape,T.dtype)}return y}),a(g.length>1?g:g[0],i,c))),this.state.activeTape.push(d)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const r={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(r.name=e),this.state.scopeStack.push(r),this.state.activeScope=r}endScope(e){const r=ho(e),s=new Set(r.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const c=this.state.activeScope.track[i];!c.kept&&!s.has(c.id)&&c.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],r.forEach(i=>{!i.kept&&i.scopeId===a.id&&this.track(i)})}gradients(e,r,s,a=!1){if(q(r.length>0,()=>"gradients() received an empty list of xs."),null!=s&&"float32"!==s.dtype)throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));q(i instanceof jn,()=>"The result y returned by f() must be a tensor.");const c=function e_(n,t,e){const r={},s={};for(let d=0;d<t.length;d++)r[t[d].id]=!0;for(let d=0;d<n.length;d++){const m=n[d],g=m.inputs;for(const y in g){const C=g[y];let T=!1;for(let k=0;k<t.length;k++)if(r[C.id]){m.outputs.forEach(D=>r[D.id]=!0),T=!0,s[m.id]=!0;break}if(T)break}}const a={};a[e.id]=!0;const i={};for(let d=n.length-1;d>=0;d--){const m=n[d],g=m.inputs;for(let y=0;y<m.outputs.length;y++)if(a[m.outputs[y].id]){for(const C in g)a[g[C].id]=!0,i[m.id]=!0;break}}const c=[];for(let d=0;d<n.length;d++){const m=n[d];if(s[m.id]&&i[m.id]){const g={};for(const C in m.inputs){const T=m.inputs[C];r[T.id]&&(g[C]=T)}const y=Object.assign({},m);y.inputs=g,y.outputs=m.outputs,c.push(y)}}return c}(this.state.activeTape,r,i);if(!a&&0===c.length&&r.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const d={};d[i.id]=null==s?function l_(n){const t=Vo(ze(n),"float32");return ce.makeTensor(t,n,"float32")}(i.shape):s,function t_(n,t,e,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach(d=>{const m=n[d.id];i.push(null!=m?m:null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const c=a.gradient(i);for(const d in a.inputs){if(!(d in c))throw new Error(`Cannot backprop through input ${d}. Available gradients found: ${Object.keys(c)}.`);const m=e(()=>c[d]());if("float32"!==m.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${d} must have 'float32' dtype, but has '${m.dtype}'`);const g=a.inputs[d];if(!_t(m.shape,g.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${d}' has shape '${m.shape}', which does not match the shape of the input '${g.shape}'`);if(null==n[g.id])n[g.id]=m;else{const y=n[g.id];n[g.id]=r(y,m),y.dispose()}}}}(d,c,g=>this.tidy(g),Tp);const m=r.map(g=>d[g.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(g=>{for(const y of g.saved)y.dispose()}),this.state.activeTape=null),{value:i,grads:m}})}customGrad(e){return q(Ci(e),()=>"The f passed in customGrad(f) must be a function."),(...r)=>{let s;q(r.every(d=>d instanceof jn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const a={};return r.forEach((d,m)=>{a[m]=d}),this.runKernelFunc({forwardFunc:(d,m)=>(s=e(...r,m),q(s.value instanceof jn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),q(Ci(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),backwardsFunc:(d,m)=>{const g=s.gradFunc(d,m),y=Array.isArray(g)?g:[g];q(y.length===r.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),q(y.every(T=>T instanceof jn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const C={};return y.forEach((T,k)=>{C[k]=()=>T}),C},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,r){return this.state.tensorInfo.get(e).backend.readToGPU(e,r)}time(e){var r=this;return(0,Fe.Z)(function*(){const s=Cs(),a=yield r.backend.time(e);return a.wallMs=Cs()-s,a})()}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new cx;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return n.nextTensorId=0,n.nextVariableId=0,n})();function fx(){const n=io();if(null==n._tfengine){const t=new ta(n);n._tfengine=new u_(t)}return function _n(n){ci=n}(n._tfengine.ENV),function r_(n){mi=n}(()=>n._tfengine),n._tfengine}const ce=fx();function Tp(n,t){return ce.runKernel(Du,{a:n,b:t})}let rv;function c_(n){rv=n}function sv(n){if(void 0!==rv)return rv;if(n||function _c(){return"undefined"!=typeof navigator&&null!=navigator}()){if(n||(n=navigator),"ReactNative"===n.product)return!0;const t=n.userAgent||n.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function av(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const sa=He();function Ai(n,t){let e=n;if(hs(n))return"string"===t?[]:[n.length];if(ix(n))return[n.height,n.width*(n.channels||"RGBA").length];if(ox(n))return[n.buffer.size/(null==t?4:ro(t))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(e)||hs(e)&&"string"!==t;)r.push(e.length),e=e[0];return Array.isArray(n)&&He().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&hx(n,r,[]),r}function hx(n,t,e){if(e=e||[],!Array.isArray(n)&&!hs(n))return void q(0===t.length,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);q(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),q(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const r=t.slice(1);for(let s=0;s<n.length;++s)hx(n[s],r,e.concat(s))}function dx(n,t,e,r){if("string_or_numeric"!==n){if(null==n)throw new Error("Expected dtype cannot be null.");if("numeric"!==n&&n!==t||"numeric"===n&&"string"===t)throw new Error(`Argument '${e}' passed to '${r}' must be ${n} tensor, but got ${t} tensor`)}}function se(n,t,e,r="numeric"){if(n instanceof jn)return dx(r,n.dtype,t,e),n;let s=ao(n);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),dx(r,s,t,e),null==n||!hs(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${null==n?"null":n.constructor.name}'`);const a=Ai(n,s);!hs(n)&&!Array.isArray(n)&&(n=[n]);const c="string"!==s?is(n,s):Ti(n,[],!0);return ce.makeTensor(c,a,s)}function ch(n,t,e,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((a,i)=>se(a,`${t}[${i}]`,e,r))}sa.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),sa.registerFlag("IS_BROWSER",()=>av()),sa.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),sa.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),sa.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),sa.registerFlag("PROD",()=>!1),sa.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>sa.getBool("DEBUG")),sa.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),sa.registerFlag("IS_TEST",()=>!1),sa.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>sa.getBool("DEBUG")),sa.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),sa.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),sa.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const iv="__op";function _e(n){const t=Object.keys(n);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const r=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e+=iv;const s=(...a)=>{ce.startScope(e);try{const i=r(...a);return Ln(i)&&console.error("Cannot return a Promise inside of tidy."),ce.endScope(i),i}catch(i){throw ce.endScope(null),i}};return Object.defineProperty(s,"name",{value:e,configurable:!0}),s}const po=_e({complex_:function ov(n,t){const e=se(n,"real","complex"),r=se(t,"imag","complex");return Ft(e.shape,r.shape,`real and imag shapes, ${e.shape} and ${r.shape}, must match in call to tf.complex().`),ce.runKernel(vf,{real:e,imag:r})}});function eu(n,t,e,r){if(null==r)r=ao(n);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ox(n)||ix(n)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return ce.backend.createTensorFromGPUData(n,t||e,r)}if(!hs(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ks(t);const s=ze(t),a=ze(e);q(s===a,()=>`Based on the provided shape, [${t}], the tensor should have ${s} values but has ${a}`);for(let i=0;i<e.length;++i){const c=e[i],d=i!==e.length-1||c!==ze(t.slice(i));q(e[i]===t[i]||!d,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!hs(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n="string"!==r?is(n,r):Ti(n,[],!0),ce.makeTensor(n,t,r)}function aa(n,t,e){return eu(n,t,Ai(n,e),e)}const uv={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function Bn(n,t){return lv.apply(this,arguments)}function lv(){return lv=(0,Fe.Z)(function*(n,t){const e=[],r=[],s=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<s.length;++i){const c=s[i],d=Array.isArray(n)?n[i].tensor:n[c];if("float32"!==d.dtype&&"int32"!==d.dtype&&"bool"!==d.dtype&&"string"!==d.dtype&&"complex64"!==d.dtype)throw new Error(`Unsupported dtype in weight '${c}': ${d.dtype}`);const m={name:c,shape:d.shape,dtype:d.dtype};if("string"===d.dtype){const g=new Promise(function(){var y=(0,Fe.Z)(function*(C){const T=yield d.bytes(),k=T.reduce((R,$)=>R+$.length,0)+4*T.length,D=new Uint8Array(k);let M=0;for(let R=0;R<T.length;R++){const $=T[R],V=new Uint8Array(new Uint32Array([$.length]).buffer);D.set(V,M),M+=4,D.set($,M),M+=$.length}C(D)});return function(C){return y.apply(this,arguments)}}());r.push(g)}else r.push(d.data());null!=t&&(m.group=t),e.push(m)}return{data:ZR(yield Promise.all(r)),specs:e}}),lv.apply(this,arguments)}function px(n,t){const e={};let r,s=0;for(const a of t){const i=a.name,c=a.dtype,d=a.shape,m=ze(d);let g;if("quantization"in a){const y=a.quantization;if("uint8"===y.dtype||"uint16"===y.dtype){if(!("min"in y)||!("scale"in y))throw new Error(`Weight ${a.name} with quantization ${y.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==y.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${y.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==c)throw new Error(`Weight ${a.name} is quantized with ${y.dtype} which only supports weights of type float32 not ${c}.`)}const C=uv[y.dtype],T=n.slice(s,s+m*C),k="uint8"===y.dtype?new Uint8Array(T):new Uint16Array(T);if("float32"===c)if("uint8"===y.dtype||"uint16"===y.dtype){g=new Float32Array(k.length);for(let D=0;D<k.length;D++)g[D]=k[D]*y.scale+y.min}else{if("float16"!==y.dtype)throw new Error(`Unsupported quantization type ${y.dtype} for weight type float32.`);void 0===r&&(r=Dp()),g=r(k)}else{if("int32"!==c)throw new Error(`Unsupported dtype in weight '${i}': ${c}`);if("uint8"!==y.dtype&&"uint16"!==y.dtype)throw new Error(`Unsupported quantization type ${y.dtype} for weight type int32.`);g=new Int32Array(k.length);for(let D=0;D<k.length;D++)g[D]=Math.round(k[D]*y.scale+y.min)}s+=m*C}else if("string"===c){const y=ze(a.shape);g=[];for(let C=0;C<y;C++){const T=new Uint32Array(n.slice(s,s+4))[0];s+=4;const k=new Uint8Array(n.slice(s,s+T));g.push(k),s+=T}}else{const y=uv[c],C=n.slice(s,s+m*y);if("float32"===c)g=new Float32Array(C);else if("int32"===c)g=new Int32Array(C);else if("bool"===c)g=new Uint8Array(C);else{if("complex64"!==c)throw new Error(`Unsupported dtype in weight '${i}': ${c}`);{g=new Float32Array(C);const T=new Float32Array(g.length/2),k=new Float32Array(g.length/2);for(let R=0;R<T.length;R++)T[R]=g[2*R],k[R]=g[2*R+1];const D=aa(T,d,"float32"),M=aa(k,d,"float32");e[i]=po(D,M),D.dispose(),M.dispose()}}s+=m*y}"complex64"!==c&&(e[i]=aa(g,d,c))}return e}function ZR(n){if(null===n)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(a=>{if(t+=a.byteLength,e.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const r=new Uint8Array(t);let s=0;return e.forEach(a=>{r.set(new Uint8Array(a.buffer),s),s+=a.byteLength}),r.buffer}const Ep="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function mx(n){return Ep?Buffer.byteLength(n):new Blob([n]).size}function $a(n){if(1===n.length)return n[0];let t=0;n.forEach(s=>{t+=s.byteLength});const e=new Uint8Array(t);let r=0;return n.forEach(s=>{e.set(new Uint8Array(s),r),r+=s.byteLength}),e.buffer}function On(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);const e=n.split("/");return e[e.length-1]}function cv(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return null!=n.signature&&(e.signature=n.signature),null!=n.userDefinedMetadata&&(e.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(e.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(e.initializerSignature=n.initializerSignature),null!=n.trainingConfig&&(e.trainingConfig=n.trainingConfig),e}function kp(n,t,e){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(null!=n.trainingConfig&&(r.trainingConfig=n.trainingConfig),null!=n.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=e}return null!=n.signature&&(r.signature=n.signature),null!=n.userDefinedMetadata&&(r.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(r.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(r.initializerSignature=n.initializerSignature),r}function sr(n,t){return tu.apply(this,arguments)}function tu(){return(tu=(0,Fe.Z)(function*(n,t){let e,r;return null!=n.weightsManifest&&([e,r]=yield t(n.weightsManifest)),kp(n,e,r)})).apply(this,arguments)}function Xu(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==n.modelTopology?0:mx(JSON.stringify(n.modelTopology)),weightSpecsBytes:null==n.weightSpecs?0:mx(JSON.stringify(n.weightSpecs)),weightDataBytes:null==n.weightData?0:n.weightData.byteLength}}function Mp(n){const t=[];for(const e of n)t.push(...e.weights);return t}function Dp(){const n=function fv(){const n=e=>{let r=e<<13,s=0;for(;0==(8388608&r);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function gx(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}(),e=function f_(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const c=r[i];a[i]=n[e[c>>10]+(1023&c)]+t[c>>10]}return new Float32Array(s)}}class Cr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Cr.instance&&(Cr.instance=new Cr),Cr.instance}static registerSaveRouter(t){Cr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Cr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Cr.getHandlers(t,"save")}static getLoadHandlers(t,e){return Cr.getHandlers(t,"load",e)}static getHandlers(t,e,r){const s=[];return("load"===e?Cr.getInstance().loadRouters:Cr.getInstance().saveRouters).forEach(i=>{const c=i(t,r);null!==c&&s.push(c)}),s}}const vx=n=>Cr.registerSaveRouter(n),yx=n=>Cr.registerLoadRouter(n),Hn=n=>Cr.getSaveHandlers(n),h_=(n,t)=>Cr.getLoadHandlers(n,t),Rp="tensorflowjs",nu="models_store",Yu="model_info_store";function Ju(){if(!He().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n="undefined"==typeof window?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function bx(n){const t=n.result;t.createObjectStore(nu,{keyPath:"modelPath"}),t.createObjectStore(Yu,{keyPath:"modelPath"})}let hh=(()=>{class n{constructor(e){if(this.indexedDB=Ju(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){var r=this;return(0,Fe.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return r.databaseAction(r.modelPath,e)})()}load(){var e=this;return(0,Fe.Z)(function*(){return e.databaseAction(e.modelPath)})()}databaseAction(e,r){return new Promise((s,a)=>{const i=this.indexedDB.open(Rp,1);i.onupgradeneeded=()=>bx(i),i.onsuccess=()=>{const c=i.result;if(null==r){const d=c.transaction(nu,"readonly"),g=d.objectStore(nu).get(this.modelPath);g.onsuccess=()=>{if(null==g.result)return c.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(g.result.modelArtifacts)},g.onerror=y=>(c.close(),a(g.error)),d.oncomplete=()=>c.close()}else{const d=Xu(r),m=c.transaction(Yu,"readwrite");let y,C,g=m.objectStore(Yu);try{y=g.put({modelPath:this.modelPath,modelArtifactsInfo:d})}catch(T){return a(T)}y.onsuccess=()=>{C=c.transaction(nu,"readwrite");const T=C.objectStore(nu);let k;try{k=T.put({modelPath:this.modelPath,modelArtifacts:r,modelArtifactsInfo:d})}catch(D){return a(D)}k.onsuccess=()=>s({modelArtifactsInfo:d}),k.onerror=D=>{g=m.objectStore(Yu);const M=g.delete(this.modelPath);M.onsuccess=()=>(c.close(),a(k.error)),M.onerror=R=>(c.close(),a(k.error))}},y.onerror=T=>(c.close(),a(y.error)),m.oncomplete=()=>{null==C?c.close():C.oncomplete=()=>c.close()}}},i.onerror=c=>a(i.error)})}}return n.URL_SCHEME="indexeddb://",n})();const d_=n=>He().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(hh.URL_SCHEME)?function p_(n){return new hh(n)}(n.slice(hh.URL_SCHEME.length)):null;Cr.registerSaveRouter(d_),Cr.registerLoadRouter(d_);class g_{constructor(){this.indexedDB=Ju()}listModels(){var t=this;return(0,Fe.Z)(function*(){return new Promise((e,r)=>{const s=t.indexedDB.open(Rp,1);s.onupgradeneeded=()=>bx(s),s.onsuccess=()=>{const a=s.result,i=a.transaction(Yu,"readonly"),d=i.objectStore(Yu).getAll();d.onsuccess=()=>{const m={};for(const g of d.result)m[g.modelPath]=g.modelArtifactsInfo;e(m)},d.onerror=m=>(a.close(),r(d.error)),i.oncomplete=()=>a.close()},s.onerror=a=>r(s.error)})})()}removeModel(t){var e=this;return(0,Fe.Z)(function*(){return t=function m_(n){return n.startsWith(hh.URL_SCHEME)?n.slice(hh.URL_SCHEME.length):n}(t),new Promise((r,s)=>{const a=e.indexedDB.open(Rp,1);a.onupgradeneeded=()=>bx(a),a.onsuccess=()=>{const i=a.result,c=i.transaction(Yu,"readwrite"),d=c.objectStore(Yu),m=d.get(t);let g;m.onsuccess=()=>{if(null==m.result)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const y=d.delete(t),C=()=>{g=i.transaction(nu,"readwrite");const k=g.objectStore(nu).delete(t);k.onsuccess=()=>r(m.result.modelArtifactsInfo),k.onerror=D=>s(m.error)};y.onsuccess=C,y.onerror=T=>(C(),i.close(),s(m.error))}},m.onerror=y=>(i.close(),s(m.error)),c.oncomplete=()=>{null==g?i.close():g.oncomplete=()=>i.close()}},a.onerror=i=>s(a.error)})})()}}const Ei="/",Qu="tensorflowjs_models",xx="info",wx="model_topology",Nx="weight_specs",Sx="weight_data",jR="model_metadata";function dv(n){return{info:[Qu,n,xx].join(Ei),topology:[Qu,n,wx].join(Ei),weightSpecs:[Qu,n,Nx].join(Ei),weightData:[Qu,n,Sx].join(Ei),modelMetadata:[Qu,n,jR].join(Ei)}}function v_(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function pv(n){const t=n.split(Ei);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Ei)}let Ec=(()=>{class n{constructor(e){if(!He().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=dv(this.modelPath)}save(e){var r=this;return(0,Fe.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const s=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),i=Xu(e);try{return r.LS.setItem(r.keys.info,JSON.stringify(i)),r.LS.setItem(r.keys.topology,s),r.LS.setItem(r.keys.weightSpecs,a),r.LS.setItem(r.keys.weightData,function Tc(n){if(Ep)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let r=0,s=t.length;r<s;r++)e+=String.fromCharCode(t[r]);return btoa(e)}(e.weightData)),r.LS.setItem(r.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:i}}catch(c){throw v_(r.keys),new Error(`Failed to save model '${r.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}})()}load(){var e=this;return(0,Fe.Z)(function*(){const r=JSON.parse(e.LS.getItem(e.keys.info));if(null==r)throw new Error(`In local storage, there is no model with name '${e.modelPath}'`);if("JSON"!==r.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const s={},a=JSON.parse(e.LS.getItem(e.keys.topology));if(null==a)throw new Error(`In local storage, the topology of model '${e.modelPath}' is missing.`);s.modelTopology=a;const i=JSON.parse(e.LS.getItem(e.keys.weightSpecs));if(null==i)throw new Error(`In local storage, the weight specs of model '${e.modelPath}' are missing.`);s.weightSpecs=i;const c=e.LS.getItem(e.keys.modelMetadata);if(null!=c){const m=JSON.parse(c);s.format=m.format,s.generatedBy=m.generatedBy,s.convertedBy=m.convertedBy,null!=m.signature&&(s.signature=m.signature),null!=m.userDefinedMetadata&&(s.userDefinedMetadata=m.userDefinedMetadata),null!=m.modelInitializer&&(s.modelInitializer=m.modelInitializer),null!=m.initializerSignature&&(s.initializerSignature=m.initializerSignature),null!=m.trainingConfig&&(s.trainingConfig=m.trainingConfig)}const d=e.LS.getItem(e.keys.weightData);if(null==d)throw new Error(`In local storage, the binary weight values of model '${e.modelPath}' are missing.`);return s.weightData=function Dn(n){if(Ep){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let r=0;r<t.length;++r)e.set([t.charCodeAt(r)],r);return e.buffer}(d),s})()}}return n.URL_SCHEME="localstorage://",n})();const Ix=n=>He().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ec.URL_SCHEME)?function mv(n){return new Ec(n)}(n.slice(Ec.URL_SCHEME.length)):null;Cr.registerSaveRouter(Ix),Cr.registerLoadRouter(Ix);class y_{constructor(){q(He().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),q("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var t=this;return(0,Fe.Z)(function*(){const e={},r=Qu+Ei,s=Ei+xx;for(let a=0;a<t.LS.length;++a){const i=t.LS.key(a);i.startsWith(r)&&i.endsWith(s)&&(e[pv(i)]=JSON.parse(t.LS.getItem(i)))}return e})()}removeModel(t){var e=this;return(0,Fe.Z)(function*(){const r=dv(t=function Cx(n){return n.startsWith(Ec.URL_SCHEME)?n.slice(Ec.URL_SCHEME.length):n}(t));if(null==e.LS.getItem(r.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(e.LS.getItem(r.info));return v_(r),s})()}}const dh="://";class ia{constructor(){this.managers={}}static getInstance(){return null==ia.instance&&(ia.instance=new ia),ia.instance}static registerManager(t,e){q(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(dh)&&(t=t.slice(0,t.indexOf(dh))),q(t.length>0,()=>"scheme must not be an empty string.");const r=ia.getInstance();q(null==r.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=e}static getManager(t){const e=ia.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(ia.getInstance().managers)}}function kc(n){if(-1===n.indexOf(dh))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ia.getSchemes().join(",")}`);return{scheme:n.split(dh)[0],path:n.split(dh)[1]}}function b_(n,t){return $p.apply(this,arguments)}function $p(){return($p=(0,Fe.Z)(function*(n,t,e=!1){q(n!==t,()=>`Old path and new path are the same: '${n}'`);const r=Cr.getLoadHandlers(n);q(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),q(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],a=Cr.getSaveHandlers(t);q(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),q(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],c=kc(n).scheme,d=kc(n).path,m=c===kc(n).scheme,g=yield s.load();e&&m&&(yield ia.getManager(c).removeModel(d));const y=yield i.save(g);return e&&!m&&(yield ia.getManager(c).removeModel(d)),y.modelArtifactsInfo})).apply(this,arguments)}function x_(){return gv.apply(this,arguments)}function gv(){return(gv=(0,Fe.Z)(function*(){const n=ia.getSchemes(),t={};for(const e of n){const r=yield ia.getManager(e).listModels();for(const s in r)t[e+dh+s]=r[s]}return t})).apply(this,arguments)}function vv(n){return Mc.apply(this,arguments)}function Mc(){return(Mc=(0,Fe.Z)(function*(n){const t=kc(n);return ia.getManager(t.scheme).removeModel(t.path)})).apply(this,arguments)}function w_(n,t){return ph.apply(this,arguments)}function ph(){return(ph=(0,Fe.Z)(function*(n,t){return b_(n,t,!1)})).apply(this,arguments)}function _x(n,t){return ru.apply(this,arguments)}function ru(){return(ru=(0,Fe.Z)(function*(n,t){return b_(n,t,!0)})).apply(this,arguments)}class mo{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!=typeof window&&He().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{r.source===window&&r.data.name===this.messageName&&(r.stopPropagation(),this.functionRefs[r.data.index](),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}isTypedArray(t){return Yb(t)}}if(He().get("IS_BROWSER")){He().setPlatform("browser",new mo);try{ia.registerManager(Ec.URL_SCHEME,new y_)}catch(n){}try{ia.registerManager(hh.URL_SCHEME,new g_)}catch(n){}}let go;function En(n,t="float32",e){return t=t||"float32",Ks(n),new Jr(n,t,e)}He().get("IS_NODE")&&!He().get("IS_BROWSER")&&He().setPlatform("node",new class vo{constructor(){this.util=ft(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=He().global.fetch?He().global.fetch(t,e):(null==go&&(go=ft(5410)),go(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}});const Lt=_e({cast_:function Tx(n,t){const e=se(n,"x","cast");if(!Zg(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return ce.runKernel(Zs,{x:e},{dtype:t})}}),ki=_e({clone_:function Ax(n){const e={x:se(n,"x","clone","string_or_numeric")};return ce.runKernel(nc,e)}});function Op(n,t=!1){console.log(n.toString(t))}function mh(){He().set("PROD",!0)}function Ex(){He().set("DEBUG",!0)}function kx(){He().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function bv(n){He().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Mx(){ce.disposeVariables()}function Ha(){return ce}function Fp(){return ce.memory()}function Dx(n){return ce.profile(n)}function qe(n,t){return ce.tidy(n,t)}function Tn(n){ho(n).forEach(e=>e.dispose())}function Qr(n){return ce.keep(n)}function Rx(n){return ce.time(n)}function xv(n){return ce.setBackend(n)}function C_(){return ce.ready()}function $x(){return ce.backendName}function Ox(n){ce.removeBackend(n)}function Fx(n){return ce.findBackend(n)}function Lx(n){return ce.findBackendFactory(n)}function wv(n,t,e=1){return ce.registerBackend(n,t,e)}function Nv(){return ce.backend}function I_(n,t){He().setPlatform(n,t)}fx(),function s_(n){Ic=n}({buffer:En,cast:Lt,clone:ki,print:Op}),function a_(n){ax=n}(bv);const Nt=_e({add_:function __(n,t){let e=se(n,"a","add"),r=se(t,"b","add");return[e,r]=Dr(e,r),ce.runKernel(Du,{a:e,b:r})}}),Lp=_e({floorDiv_:function T_(n,t){let e=se(n,"a","floorDiv"),r=se(t,"b","floorDiv");return[e,r]=Dr(e,r),ce.runKernel(ec,{a:e,b:r})}}),nn=_e({div_:function Bx(n,t){let e=se(n,"a","div"),r=se(t,"b","div");return[e,r]=Dr(e,r),"int32"===e.dtype&&"int32"===r.dtype?Lp(e,r):ce.runKernel(jl,{a:e,b:r},{})}}),Ce=_e({mul_:function A_(n,t){let e=se(n,"a","mul"),r=se(t,"b","mul");return[e,r]=Dr(e,r),ce.runKernel(fc,{a:e,b:r})}}),Is=_e({sqrt_:function E_(n){const e={x:se(n,"x","sqrt","float32")};return ce.runKernel(Xo,e)}}),ir=_e({square_:function Px(n){const t=se(n,"x","square");return ce.runKernel("Square",{x:t},{})}}),Gn=_e({zerosLike_:function zx(n){const e={x:se(n,"x","zerosLike")};return ce.runKernel(eh,e)}});function Vx(n){return q(Ci(n),()=>"The f passed in grad(f) must be a function"),(t,e)=>{const r=se(t,"x","tf.grad","string_or_numeric"),s=null!=e?se(e,"dy","tf.grad"):null;return ce.tidy(()=>{const{value:a,grads:i}=ce.gradients(()=>n(r),[r],s);return null!=s&&Ft(a.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Bp(i),i[0]})}}function Ux(n){return q(Ci(n),()=>"The f passed in grads(f) must be a function"),(t,e)=>{q(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=ch(t,"args","tf.grads","string_or_numeric"),s=null!=e?se(e,"dy","tf.grads"):null;return ce.tidy(()=>{const{value:a,grads:i}=ce.gradients(()=>n(...r),r,s);return null!=s&&Ft(a.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bp(i),i})}}function Wx(n){return q(Ci(n),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{q(t instanceof jn,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),q(null==e||e instanceof jn,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=ce.gradients(()=>n(t),[t],e);return Bp(r),{grad:r[0],value:s}}}function k_(n){return q(Ci(n),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{q(Array.isArray(t)&&t.every(s=>s instanceof jn),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),q(null==e||e instanceof jn,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ce.gradients(()=>n(...t),t,e);return null!=e&&Ft(r.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bp(r.grads),r}}function Sv(n,t){q(Ci(n),()=>"The f passed in variableGrads(f) must be a function"),q(null==t||Array.isArray(t)&&t.every(m=>m instanceof lh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=null!=t;if(!e){t=[];for(const m in ce.registeredVariables)t.push(ce.registeredVariables[m])}const r=e?t.filter(m=>!m.trainable):null,s=t.length;q((t=t.filter(m=>m.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:i,grads:c}=ce.gradients(n,t,null,!0);q(c.some(m=>null!=m),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),q(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const d={};return t.forEach((m,g)=>{null!=c[g]&&(d[m.name]=c[g])}),null!=r&&r.forEach(m=>d[m.name]=null),{value:i,grads:d}}function Mi(n){return ce.customGrad(n)}function Bp(n){if(n.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function ln(n,t){if((hs(n)&&"string"!==t||Array.isArray(n))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&hs(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return eu(n,[],[],t)}class el{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Fa{constructor(){this.classNameMap={}}static getMap(){return null==Fa.instance&&(Fa.instance=new Fa),Fa.instance}static register(t){Fa.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Ct(n){q(null!=n.className,()=>"Class being registered does not have the static className property defined."),q("string"==typeof n.className,()=>"className is required to be a string, but got type "+typeof n.className),q(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Fa.register(n)}class Di extends el{minimize(t,e=!1,r){const{value:s,grads:a}=this.computeGradients(t,r);if(null!=r){const i=r.map(c=>({name:c.name,tensor:a[c.name]}));this.applyGradients(i)}else this.applyGradients(a);return Tn(a),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Sv(t,e)}dispose(){null!=this.iterations_&&Tn(this.iterations_)}saveIterations(){var t=this;return(0,Fe.Z)(function*(){return null==t.iterations_&&(t.iterations_=0),{name:"iter",tensor:ln(t.iterations_,"int32")}})()}getWeights(){return(0,Fe.Z)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(t){var e=this;return(0,Fe.Z)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${e.getClassName()}`)})()}extractIterations(t){var e=this;return(0,Fe.Z)(function*(){return e.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})()}}Object.defineProperty(Di,Symbol.hasInstance,{value:n=>null!=n.minimize&&null!=n.computeGradients&&null!=n.applyGradients});class Pp extends Di{static get className(){return"Adadelta"}constructor(t,e,r=null){super(),this.learningRate=t,this.rho=e,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==r&&(this.epsilon=ce.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,s)=>{const a=ce.registeredVariables[r];null==this.accumulatedGrads[s]&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:qe(()=>Gn(a).variable(!1))}),null==this.accumulatedUpdates[s]&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:qe(()=>Gn(a).variable(!1))});const c=Array.isArray(t)?t[s].tensor:t[r];if(null==c)return;const d=this.accumulatedGrads[s].variable,m=this.accumulatedUpdates[s].variable;qe(()=>{const g=Nt(Ce(d,this.rho),Ce(ir(c),1-this.rho)),y=Ce(nn(Is(Nt(m,this.epsilon)),Is(Nt(d,this.epsilon))),c),C=Nt(Ce(m,this.rho),Ce(ir(y),1-this.rho));d.assign(g),m.assign(C);const T=Nt(Ce(y,-this.learningRate),a);a.assign(T)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Tn(this.accumulatedGrads.map(t=>t.variable)),Tn(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){var t=this;return(0,Fe.Z)(function*(){const e=[...t.accumulatedGrads,...t.accumulatedUpdates];return[yield t.saveIterations()].concat(e.map(r=>({name:r.originalName,tensor:r.variable})))})()}setWeights(t){var e=this;return(0,Fe.Z)(function*(){const r=(t=yield e.extractIterations(t)).length/2;e.accumulatedGrads=t.slice(0,r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),e.accumulatedUpdates=t.slice(r,2*r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function su(n,t,e){return Ks(n),e=e||ao(t),ce.runKernel(Kd,{},{shape:n,value:t,dtype:e})}class zp extends Di{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,s)=>{const a=ce.registeredVariables[r];null==this.accumulatedGrads[s]&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:qe(()=>su(a.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[s].tensor:t[r];if(null==i)return;const c=this.accumulatedGrads[s].variable;qe(()=>{const d=Nt(c,ir(i));c.assign(d);const m=Nt(Ce(nn(i,Is(Nt(d,ce.backend.epsilon()))),-this.learningRate),a);a.assign(m)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Tn(this.accumulatedGrads.map(t=>t.variable))}getWeights(){var t=this;return(0,Fe.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,Fe.Z)(function*(){t=yield e.extractIterations(t),e.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}const yo=_e({pow_:function Gx(n,t){let e=se(n,"base","pow"),r=se(t,"exp","pow");return[e,r]=Dr(e,r),ce.runKernel(hc,{a:e,b:r})}}),Ht=_e({sub_:function qx(n,t){let e=se(n,"a","sub"),r=se(t,"b","sub");return[e,r]=Dr(e,r),ce.runKernel(co,{a:e,b:r})}});class Cv extends Di{static get className(){return"Adam"}constructor(t,e,r,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],qe(()=>{this.accBeta1=ln(e).variable(),this.accBeta2=ln(r).variable()}),null==s&&(this.epsilon=ce.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);qe(()=>{const r=Ht(1,this.accBeta1),s=Ht(1,this.accBeta2);e.forEach((a,i)=>{const c=ce.registeredVariables[a];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:qe(()=>Gn(c).variable(!1))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:qe(()=>Gn(c).variable(!1))});const m=Array.isArray(t)?t[i].tensor:t[a];if(null==m)return;const g=this.accumulatedFirstMoment[i].variable,y=this.accumulatedSecondMoment[i].variable,C=Nt(Ce(g,this.beta1),Ce(m,1-this.beta1)),T=Nt(Ce(y,this.beta2),Ce(ir(m),1-this.beta2)),k=nn(C,r),D=nn(T,s);g.assign(C),y.assign(T);const M=Nt(Ce(nn(k,Nt(Is(D),this.epsilon)),-this.learningRate),c);c.assign(M)}),this.accBeta1.assign(Ce(this.accBeta1,this.beta1)),this.accBeta2.assign(Ce(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Tn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Tn(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){var t=this;return(0,Fe.Z)(function*(){const e=[...t.accumulatedFirstMoment,...t.accumulatedSecondMoment];return[yield t.saveIterations()].concat(e.map(r=>({name:r.originalName,tensor:r.variable})))})()}setWeights(t){var e=this;return(0,Fe.Z)(function*(){t=yield e.extractIterations(t),qe(()=>{e.accBeta1.assign(yo(e.beta1,e.iterations_+1)),e.accBeta2.assign(yo(e.beta2,e.iterations_+1))});const r=t.length/2;e.accumulatedFirstMoment=t.slice(0,r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),e.accumulatedSecondMoment=t.slice(r,2*r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}const es=_e({abs_:function Hx(n){const t=se(n,"x","abs");return ce.runKernel("complex64"===t.dtype?Hl:Wl,{x:t})}});function tl(n,t){const e=n.length,r=[];for(let s=0;s<e;s++){const a=e-1-s,i=n[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Ur(n,t){const e=[];for(let r=0;r<t.length;r++){const s=n[n.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&e.unshift(a)}return e}function An(n,t){const e=Math.max(n.length,t.length),r=new Array(e);for(let s=0;s<e;s++){let a=n[n.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[e-s-1]=i;else if(1===i)r[e-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`);r[e-s-1]=a}}return r}const gi=_e({maximum_:function M_(n,t){let e=se(n,"a","maximum"),r=se(t,"b","maximum");return[e,r]=Dr(e,r),"bool"===e.dtype&&(e=Lt(e,"int32"),r=Lt(r,"int32")),An(e.shape,r.shape),ce.runKernel(vn,{a:e,b:r})}});class Iv extends Di{static get className(){return"Adamax"}constructor(t,e,r,s=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=s,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],qe(()=>{this.iteration=ln(0).variable(),this.accBeta1=ln(e).variable()}),null==s&&(this.epsilon=ce.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);qe(()=>{const r=Ht(1,this.accBeta1),s=nn(-this.learningRate,Nt(Ce(this.iteration,this.decay),1));e.forEach((a,i)=>{const c=ce.registeredVariables[a];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:Gn(c).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:Gn(c).variable(!1)});const m=Array.isArray(t)?t[i].tensor:t[a];if(null==m)return;const g=this.accumulatedFirstMoment[i].variable,y=this.accumulatedWeightedInfNorm[i].variable,C=Nt(Ce(g,this.beta1),Ce(m,1-this.beta1)),T=Ce(y,this.beta2),k=es(m),D=gi(T,k);g.assign(C),y.assign(D);const M=Nt(Ce(nn(s,r),nn(C,Nt(D,this.epsilon))),c);c.assign(M)}),this.iteration.assign(Nt(this.iteration,1)),this.accBeta1.assign(Ce(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Tn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Tn(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return(0,Fe.Z)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(t){return(0,Fe.Z)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class Vp extends Di{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,s)=>{const a=Array.isArray(t)?t[s].tensor:t[r];if(null==a)return;const i=ce.registeredVariables[r];qe(()=>{const c=Nt(Ce(this.c,a),i);i.assign(c)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Qr(ln(-t))}dispose(){this.c.dispose()}getWeights(){var t=this;return(0,Fe.Z)(function*(){return[yield t.saveIterations()]})()}setWeights(t){var e=this;return(0,Fe.Z)(function*(){if(0!==(t=yield e.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class Up extends Vp{static get className(){return"Momentum"}constructor(t,e,r=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=r,this.accumulations=[],this.m=ln(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,s)=>{const a=ce.registeredVariables[r];null==this.accumulations[s]&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:qe(()=>Gn(a).variable(!1))});const i=this.accumulations[s].variable,c=Array.isArray(t)?t[s].tensor:t[r];null!=c&&qe(()=>{let d;const m=Nt(Ce(this.m,i),c);d=Nt(Ce(this.c,this.useNesterov?Nt(c,Ce(m,this.m)):m),a),i.assign(m),a.assign(d)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Tn(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){var t=this;return(0,Fe.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,Fe.Z)(function*(){t=yield e.extractIterations(t),e.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class _v extends Di{static get className(){return"RMSProp"}constructor(t,e=.9,r=0,s=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==s&&(this.epsilon=ce.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,s)=>{const a=ce.registeredVariables[r],i=!1;null==this.accumulatedMeanSquares[s]&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:qe(()=>Gn(a).variable(i))}),null==this.accumulatedMoments[s]&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:qe(()=>Gn(a).variable(i))}),null==this.accumulatedMeanGrads[s]&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:qe(()=>Gn(a).variable(i))});const c=Array.isArray(t)?t[s].tensor:t[r];if(null==c)return;const d=this.accumulatedMeanSquares[s].variable,m=this.accumulatedMoments[s].variable;qe(()=>{const g=Nt(Ce(d,this.decay),Ce(ir(c),1-this.decay));if(this.centered){const y=this.accumulatedMeanGrads[s].variable,C=Nt(Ce(y,this.decay),Ce(c,1-this.decay)),T=nn(Ce(c,this.learningRate),Is(Ht(g,Nt(ir(C),this.epsilon)))),k=Nt(Ce(m,this.momentum),T);d.assign(g),y.assign(C),m.assign(k);const D=Ht(a,k);a.assign(D)}else{const y=Nt(Ce(d,this.decay),Ce(ir(c),1-this.decay)),C=Nt(Ce(m,this.momentum),nn(Ce(c,this.learningRate),Is(Nt(y,this.epsilon))));d.assign(y),m.assign(C);const T=Ht(a,C);a.assign(T)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Tn(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Tn(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Tn(this.accumulatedMoments.map(t=>t.variable))}getWeights(){var t=this;return(0,Fe.Z)(function*(){const e=[...t.accumulatedMeanSquares,...t.accumulatedMoments];return t.centered&&e.push(...t.accumulatedMeanGrads),[yield t.saveIterations()].concat(e.map(r=>({name:r.originalName,tensor:r.variable})))})()}setWeights(t){var e=this;return(0,Fe.Z)(function*(){t=yield e.extractIterations(t);const r=e.centered?t.length/3:t.length/2,s=!1;e.accumulatedMeanSquares=t.slice(0,r).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),e.accumulatedMoments=t.slice(r,2*r).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),e.centered&&(e.accumulatedMeanGrads=t.slice(2*r,3*r).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const D_=[Pp,zp,Cv,Iv,Up,_v,Vp];function Zx(n){return new Promise(t=>setTimeout(t)).then(n)}let Tv=(()=>{class n{constructor(e){if(!He().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(n.URL_SCHEME)&&(e=e.slice(n.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}save(e){var r=this;return(0,Fe.Z)(function*(){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const s=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const i=cv(e,[{paths:["./"+r.weightDataFileName],weights:e.weightSpecs}]),c=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),d=null==r.modelJsonAnchor?document.createElement("a"):r.modelJsonAnchor;if(d.download=r.modelJsonFileName,d.href=c,yield Zx(()=>d.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const m=null==r.weightDataAnchor?document.createElement("a"):r.weightDataAnchor;m.download=r.weightDataFileName,m.href=s,yield Zx(()=>m.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Xu(e)}}})()}}return n.URL_SCHEME="downloads://",n})();class F_{constructor(t){if(null==t||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){var t=this;return(0,Fe.Z)(function*(){return new Promise((e,r)=>{const s=new FileReader;s.onload=a=>{const i=JSON.parse(a.target.result),c=i.modelTopology;if(null==c)return void r(new Error(`modelTopology field is missing from file ${t.jsonFile.name}`));if(null==i.weightsManifest)return void r(new Error(`weightManifest field is missing from file ${t.jsonFile.name}`));if(0===t.weightsFiles.length)return void e({modelTopology:c});const m=sr(i,g=>t.loadWeights(g));e(m)},s.onerror=a=>r(`Failed to read model topology and weights manifest JSON from file '${t.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(t.jsonFile)})})()}loadWeights(t){const e=[],r=[];for(const i of t)e.push(...i.weights),r.push(...i.paths);const s=this.checkManifestAndWeightFiles(t),a=r.map(i=>this.loadWeightsFile(i,s[i]));return Promise.all(a).then(i=>[e,$a(i)])}loadWeightsFile(t,e){return new Promise((r,s)=>{const a=new FileReader;a.onload=i=>{r(i.target.result)},a.onerror=i=>s(`Failed to weights data from file of path '${t}'.`),a.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],r=this.weightsFiles.map(a=>On(a.name)),s={};for(const a of t)a.paths.forEach(i=>{const c=On(i);if(-1!==e.indexOf(c))throw new Error(`Duplicate file basename found in weights manifest: '${c}'`);if(e.push(c),-1===r.indexOf(c))throw new Error(`Weight file with basename '${c}' is not provided.`);s[i]=this.weightsFiles[r.indexOf(c)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function jx(n){return new F_(n)}function Xx(n,t,e,r){(function i(d){q(null!=d&&Array.isArray(d)&&d.length>0,()=>"promises must be a none empty array")})(n),function c(d,m){q(d>=0&&d<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${d}`),q(m>=0&&m<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${m}`),q(m>=d,()=>`startFraction must be no more than endFraction, but got startFraction ${d} and endFraction ${m}`)}(e=null==e?0:e,r=null==r?1:r);let s=0;return Promise.all(n.map(d=>(d.then(m=>{const g=e+ ++s/n.length*(r-e);return t(g),m}),d)))}function Yx(n,t){return Av.apply(this,arguments)}function Av(){return(Av=(0,Fe.Z)(function*(n,t){null==t&&(t={});const e=null==t.fetchFunc?He().platform.fetch:t.fetchFunc,r=n.map(y=>e(y,t.requestInit,{isBinary:!0})),c=(null==t.onProgress?yield Promise.all(r):yield Xx(r,t.onProgress,0,.5)).map(y=>y.arrayBuffer());return null==t.onProgress?yield Promise.all(c):yield Xx(c,t.onProgress,.5,1)})).apply(this,arguments)}function Jx(n){return Ev.apply(this,arguments)}function Ev(){return(Ev=(0,Fe.Z)(function*(n,t="",e,r){return Qx(i=>Yx(i,{requestInit:r}))(n,t,e)})).apply(this,arguments)}function Qx(n){return function(){var t=(0,Fe.Z)(function*(e,r="",s){const a=e.map(()=>!1),i={},c=null!=s?s.map(()=>!1):[],d=[];if(e.forEach((k,D)=>{let M=0;k.weights.forEach(R=>{const V=uv["quantization"in R?R.quantization.dtype:R.dtype]*ze(R.shape),G=()=>{a[D]=!0,null==i[D]&&(i[D]=[]),i[D].push({manifestEntry:R,groupOffset:M,sizeBytes:V})};null!=s?s.forEach((K,ae)=>{K===R.name&&(G(),c[ae]=!0)}):G(),d.push(R.name),M+=V})}),!c.every(k=>k)){const k=s.filter((D,M)=>!c[M]);throw new Error(`Could not find weights in manifest with names: ${k.join(", ")}. \nManifest JSON has weights with names: ${d.join(", ")}.`)}const m=a.reduce((k,D,M)=>(D&&k.push(M),k),[]),g=[];m.forEach(k=>{e[k].paths.forEach(D=>{const M=r+(r.endsWith("/")?"":"/")+D;g.push(M)})});const y=yield n(g),C={};let T=0;return m.forEach(k=>{const D=e[k].paths.length;let M=0;for(let K=0;K<D;K++)M+=y[T+K].byteLength;const R=new ArrayBuffer(M),$=new Uint8Array(R);let V=0;for(let K=0;K<D;K++){const ae=new Uint8Array(y[T+K]);$.set(ae,V),V+=ae.byteLength}i[k].forEach(K=>{const le=px(R.slice(K.groupOffset,K.groupOffset+K.sizeBytes),[K.manifestEntry]);for(const he in le)C[he]=le[he]}),T+=D}),C});return function(e){return t.apply(this,arguments)}}()}Cr.registerSaveRouter(n=>He().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Tv.URL_SCHEME)?function B_(n="model"){return new Tv(n)}(n.slice(Tv.URL_SCHEME.length)):null);let Wp=(()=>{class n{constructor(e,r){if(this.DEFAULT_METHOD="POST",null==r&&(r={}),this.weightPathPrefix=r.weightPathPrefix,this.onProgress=r.onProgress,this.weightUrlConverter=r.weightUrlConverter,null!=r.fetchFunc?(q("function"==typeof r.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=r.fetchFunc):this.fetch=He().platform.fetch,q(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&q(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=r.requestInit&&null!=r.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=r.requestInit||{}}save(e){var r=this;return(0,Fe.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const s=Object.assign({method:r.DEFAULT_METHOD},r.requestInit);s.body=new FormData;const i=cv(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);s.body.append("model.json",new Blob([JSON.stringify(i)],{type:"application/json"}),"model.json"),null!=e.weightData&&s.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const c=yield r.fetch(r.path,s);if(c.ok)return{modelArtifactsInfo:Xu(e),responses:[c]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${c.status}.`)})()}load(){var e=this;return(0,Fe.Z)(function*(){const r=yield e.fetch(e.path,e.requestInit);if(!r.ok)throw new Error(`Request to ${e.path} failed with status code ${r.status}. Please verify this URL points to the model JSON of the model to load.`);let s;try{s=yield r.json()}catch(c){let d=`Failed to parse model JSON of response from ${e.path}.`;throw e.path.endsWith(".pb")?d+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":d+=" Please make sure the server is serving valid JSON for this request.",new Error(d)}if(null==s.modelTopology&&null==s.weightsManifest)throw new Error(`The JSON from HTTP path ${e.path} contains neither model topology or manifest for weights.`);return sr(s,c=>e.loadWeights(c))})()}loadWeights(e){var r=this;return(0,Fe.Z)(function*(){const s=Array.isArray(r.path)?r.path[1]:r.path,[a,i]=function Gp(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?");return[n.substring(0,t)+"/",e>t?n.substring(e):""]}(s),c=r.weightPathPrefix||a,d=Mp(e),m=[],g=[];for(const C of e)for(const T of C.paths)null!=r.weightUrlConverter?g.push(r.weightUrlConverter(T)):m.push(c+T+i);return r.weightUrlConverter&&m.push(...yield Promise.all(g)),[d,$a(yield Yx(m,{requestInit:r.requestInit,fetchFunc:r.fetch,onProgress:r.onProgress}))]})()}}return n.URL_SCHEME_REGEX=/^https?:\/\//,n})();function kv(n){return null!=n.match(Wp.URL_SCHEME_REGEX)}const e1=(n,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let e=!0;if(e=Array.isArray(n)?n.every(r=>kv(r)):kv(n),e)return Mv(n,t)}return null};function Mv(n,t){return new Wp(n,t)}function t1(n,t){return Mv(n,t)}Cr.registerSaveRouter(e1),Cr.registerLoadRouter(e1);class au{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class Dv{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class n1{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function r1(n,t,e,r){const s=arguments;return new n1(vh(...s))}function vh(n,t,e,r){return 1===arguments.length?null!=n.modelTopology||null!=n.weightSpecs?new au(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new au({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new au({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:r}))}function s1(n){return new Dv(n)}function a1(n){return new Dv(n)}const Rn=_e({matMul_:function i1(n,t,e=!1,r=!1){let s=se(n,"a","matMul"),a=se(t,"b","matMul");return[s,a]=Dr(s,a),ce.runKernel(rr,{a:s,b:a},{transposeA:e,transposeB:r})}}),Dc=_e({oneHot_:function z_(n,t,e=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:se(n,"indices","oneHot","int32")};return ce.runKernel(Lf,i,{dtype:s,depth:t,onValue:e,offValue:r})}}),yh=_e({imag_:function o1(n){const e={input:se(n,"input","imag")};return ce.runKernel(Xd,e)}}),cr=_e({neg_:function V_(n){const e={x:se(n,"x","neg")};return ce.runKernel($f,e)}}),Rc=_e({real_:function U_(n){const e={input:se(n,"input","real")};return ce.runKernel(Vf,e)}}),Vn=_e({transpose_:function bo(n,t,e){const r=se(n,"x","transpose");if(null==t&&(t=r.shape.map((i,c)=>c).reverse()),q(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{q(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?qe(()=>{let i=Rc(r),c=yh(r);return i=ce.runKernel(qa,{x:i},a),c=ce.runKernel(qa,{x:c},a),e&&(c=cr(c)),po(i,c)}):ce.runKernel(qa,s,a)}}),W_=_e({confusionMatrix_:function u1(n,t,e){const r=se(n,"labels","confusionMatrix"),s=se(t,"predictions","confusionMatrix");q(null==e||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),q(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),q(1===s.rank,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),q(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),q(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);const a=Dc(Lt(r,"int32"),e),i=Dc(Lt(s,"int32"),e),c=Vn(a),d=Rn(c,i);return Lt(d,"int32")}});function Rv(n,t,e){if(rn(n),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ai(n,e);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return eu(n,t,r,e)}let iu;function l1(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==n)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,r=!1,s=!1,a=!1,i=!1,c=!1;if(n.data instanceof Uint8Array)e=!0;else if("undefined"!=typeof ImageData&&n instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&n instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&n instanceof HTMLImageElement)a=!0;else if(null!=n.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&n instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);c=!0}if(null!=Yo(th,ce.backendName))return ce.runKernel(th,{pixels:n},{numChannels:t});const[m,g]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let y,C;if(i)y=n.getContext("2d").getImageData(0,0,m,g).data;else if(r||e)y=n.data;else if(a||s||c){if(null==iu)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");iu=new OffscreenCanvas(1,1).getContext("2d")}else iu=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});iu.canvas.width=m,iu.canvas.height=g,iu.drawImage(n,0,0,m,g),y=iu.getImageData(0,0,m,g).data}if(4===t)C=new Int32Array(y);else{const k=m*g;C=new Int32Array(k*t);for(let D=0;D<k;D++)for(let M=0;M<t;++M)C[D*t+M]=y[4*D+M]}return Rv(C,[g,m,t],"int32")}function H_(n){return function q_(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}()&&!(n instanceof ImageBitmap)&&function c1(n){return null!=n&&0!==n.width&&0!==n.height}(n)&&!function G_(n){return null!=n&&n.data instanceof Uint8Array}(n)}function K_(n){return qp.apply(this,arguments)}function qp(){return(qp=(0,Fe.Z)(function*(n,t=3){let e=null;if(He().getBool("WRAP_TO_IMAGEBITMAP")&&H_(n)){let r;try{r=yield createImageBitmap(n,{premultiplyAlpha:"none"})}catch(s){r=null}e=null!=r&&r.width===n.width&&r.height===n.height?r:n}else e=n;return l1(e,t)})).apply(this,arguments)}function Z_(n,t){return $v.apply(this,arguments)}function $v(){return($v=(0,Fe.Z)(function*(n,t){let e=se(n,"img","toPixels");if(!(n instanceof jn)){const m=e;e=Lt(m,"int32"),m.dispose()}if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const[r,s]=e.shape.slice(0,2),a=2===e.rank?1:e.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);const i=yield e.data(),c="float32"===e.dtype?255:1,d=new Uint8ClampedArray(s*r*4);for(let m=0;m<r*s;++m){const g=[0,0,0,255];for(let C=0;C<a;C++){const T=i[m*a+C];if("float32"===e.dtype){if(T<0||T>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${T}.`)}else if("int32"===e.dtype&&(T<0||T>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${T}.`);1===a?(g[0]=T*c,g[1]=T*c,g[2]=T*c):g[C]=T*c}const y=4*m;d[y+0]=Math.round(g[0]),d[y+1]=Math.round(g[1]),d[y+2]=Math.round(g[2]),d[y+3]=Math.round(g[3])}if(null!=t){t.width=s,t.height=r;const m=t.getContext("2d"),g=new ImageData(d,s,r);m.putImageData(g,0,0)}return e!==n&&e.dispose(),d})).apply(this,arguments)}const Ov=_e({fromPixels_:l1});function Hp(n,t){const e=n.shape.length,r=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${e}`);if(0===ze(n.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let y=0;y<s.length-1;++y)i*=s[y];const c=n.shape,d=s.slice();d.pop();let m=1;for(let y=a;y<e;++y)m*=c[y],d.push(c[y]);const g=[...tn(n.shape).map(y=>y/m),1].slice(0,a);return[d,i,m,g]}function Fv(n,t,e){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(e.rank<s)throw new Error(a+` update.rank < ${s}. `);if(n.length<r+(e.rank-s))throw new Error(a+` Output shape length < ${r+(e.rank-s)}`);if(e.rank!==s+n.length-r)throw new Error(a+" update.rank != "+(s+n.length-r));for(let i=0;i<s;++i)if(e.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-s;++i)if(e.shape[i+s]!==n[i+r])throw new Error(a+` updates.shape[${i+s}] (${e.shape[i+s]}) != shape[${i+s}] (${n[i+s]})`)}function bh(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(0===e.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===n.size)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Fv(e,t,n)}function ou(n,t,e){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=e.length;let i=1;for(let y=s;y<a;++y)i*=e[y];const c=s<1?1:s;return{sliceRank:s,numUpdates:ze(t.shape)/c,sliceSize:i,strides:[...tn(e.slice(0,s)),1],outputSize:ze(e)}}function Bv(n,t,e){const r=n.shape.length;q(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),q(r===e.length,()=>`Error in slice${r}D: Length of size ${e} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)q(t[s]+e[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+e[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function j_(n){const t=[];let e=0;for(;n>0;)1&n&&t.push(e),n/=2,e++;return t}function Ka(n,t,e){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((t[s]-n[s])/e[s]);return r}function h1(n,t,e,r){const s=[...n];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<e;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function xh(n,t,e){return e<=n?e:e-(t-1)}function d1(n,t){const e=[];for(let r=0;r<n;r++)e.push(t+r);return e}function X_(n,t,e,r,s,a,i,c,d){const m=n.length;let g=new Array(m),y=new Array(m),C=new Array(m);if(t.length&&e>0){const T=t[0],k=e+1;g=Y_(i,T,k,r,n),y=p1(c,T,k,s,n),C=h1(a,T,k,n)}else for(let T=0;T<m;T++)g[T]=g1(i,r,a,n,T,d),y[T]=v1(c,s,a,n,T,d),C[T]=m1(a,T,d);return{begin:g,end:y,strides:C}}function Y_(n,t,e,r,s){const a=[...s],i=d1(e,t);for(let c=0;c<a.length;c++)if(i.indexOf(c)>-1)a[c]=0;else{const d=xh(t,e,c);let m=r[d];n&1<<d&&(m=0),a[c]=m}return a}function p1(n,t,e,r,s){const a=[...s],i=d1(e,t);for(let c=0;c<a.length;c++)if(i.indexOf(c)>-1)a[c]=Number.MAX_SAFE_INTEGER;else{const d=xh(t,e,c);let m=r[d];n&1<<d&&(m=Number.MAX_SAFE_INTEGER),a[c]=m}for(let c=0;c<a.length;c++){const d=s[c];a[c]<0&&(a[c]+=d),a[c]=Wa(0,a[c],s[c])}return a}function m1(n,t,e){let r=n[t];return(e&1<<t||null==r)&&(r=1),r}function g1(n,t,e,r,s,a){let i=t[s];(n&1<<s||a&1<<s||null==i)&&(i=(e[s]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const d=r[s];return i<0&&(i+=d),i=Wa(0,i,d-1),i}function v1(n,t,e,r,s,a){let i=t[s];const c=e[s]||1;(n&1<<s||a&1<<s||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const d=r[s];return i<0&&(i+=d),i=c>0?Wa(0,i,d):Wa(-1,i,d-1),i}function Pv(n,t,e){let r=e.length;for(let s=0;s<e.length;s++)if(e[s]>1){r=s;break}for(let s=r+1;s<e.length;s++)if(t[s]>0||e[s]!==n[s])return!1;return!0}function vi(n,t){let e=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)e+=n[r]*t[r];return e}function xo(n,t,e){let r;const s=n.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(i=>{q(-1!==i,()=>"slice() does not support negative begin indexing.")}),a=null==e?new Array(s).fill(-1):"number"==typeof e?[e,...new Array(s-1).fill(-1)]:e.length<s?e.concat(new Array(s-e.length).fill(-1)):e,a=a.map((i,c)=>i>=0?i:(q(-1===i,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${c}.`),n.shape[c]-r[c])),[r,a]}function zv(n,t,e,r,s,a,i,c,d){let m;if(null==r?(m=new Array(t.length),m.fill(1)):m=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let g=!1;const y={dims:m.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:m.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:c,shrinkAxisMask:d};for(let V=0;V<y.dims;V++)g&&0!=(1<<V&c)&&y.numAddAxisAfterEllipsis++,1<<V&i&&(g=!0);g||(y.ellipsisMask|=1<<y.dims,y.dims++);const C={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function y1(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=null!=n.begin,t.endValid=null!=n.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(t.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<s;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=r}else if(1<<r&n.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=n.begin&&(t.begin[e]=n.begin[r]),null!=n.end&&(t.end[e]=n.end[r]),t.strides[e]=n.strides[r],n.beginMask&1<<r&&(t.beginMask|=1<<e),n.endMask&1<<r&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[e]=r,e++}}(y,C);let T=!0,k=!0,D=!0;const M=[],R=[];for(let V=0;V<n.length;++V){if(0===C.strides[V])throw Error(`strides[${V}] must be non-zero`);const G=!!(C.shrinkAxisMask&1<<V),K=n[V];if(-1===K){M.push(G?1:-1);continue}const ae=[C.beginMask&1<<V,C.endMask&1<<V],le=[C.strides[V]>0?0:-1,C.strides[V]>0?K:K-1];if(G&&C.strides[V]<=0)throw Error("only stride 1 allowed on non-range indexing.");D=D&&1===C.strides[V];const he=!!(C.beginMask&1<<V&&C.endMask&1<<V);if(C.beginValid&&C.endValid){if(G){const Je=C.begin[V]<0?K+C.begin[V]:C.begin[V];if(C.begin[V]=Je,C.end[V]=C.begin[V]+1,Je<0||Je>=K)throw Error(`slice index ${C.begin[V]} of dimension ${V} out of bounds.`)}else C.begin[V]=b1(C.begin[V],0,C.strides[V],K,ae,le),C.end[V]=b1(C.end[V],1,C.strides[V],K,ae,le);const Ue=1===C.strides[V]&&0===C.begin[V]&&C.end[V]===K;T=T&&Ue,k=k&&(0===V&&1===C.strides[V]||Ue)}else T=T&&1===C.strides[V]&&he,k=k&&(0===V&&1===C.strides[V]||he);let Ae,ke=!1;if(C.beginValid&&C.endValid?(Ae=C.end[V]-C.begin[V],ke=!0):G?(Ae=1,ke=!0):he&&K>=0&&(Ae=C.strides[V]<0?-K:K,ke=!0),ke){let Ue;Ue=0===Ae||Ae<0!=C.strides[V]<0?0:Math.trunc(Ae/C.strides[V])+(Ae%C.strides[V]!=0?1:0),M.push(Ue)}else M.push(-1)}for(let V=0;V<C.finalShapeGatherIndices.length;++V){const G=C.finalShapeGatherIndices[V];G>=0?R.push(M[G]):-2===G&&R.push(1)}return{finalShapeSparse:R.filter((V,G)=>-2!==C.finalShapeGatherIndices[G]),finalShape:R,isIdentity:T,sliceDim0:k,isSimpleSlice:D,begin:C.begin,end:C.end,strides:C.strides}}function b1(n,t,e,r,s,a){if(s[t])return e>0?a[t]:a[t+1&1];{const i=n<0?r+n:n;return i<a[0]?a[0]:i>a[1]?a[1]:i}}const Vv=.1;function Q_(n,t,e){return null==e&&(e=Uv()),Wv(n,t,(r,s)=>Kp(r,s,e))}function Uv(){return 32===ce.backend.floatPrecision()?.001:Vv}function Wv(n,t,e){let r=!0;if((hs(n)||hs(t))&&(r=!1),hs(n)&&hs(t)&&(r=!0),r){const i=n.constructor.name,c=t.constructor.name;if(i!==c)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${c}`)}if(Array.isArray(n)&&Array.isArray(t)){const i=Ai(n),c=Ai(t);if(!_t(i,c))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${c}]`)}const s=hs(n)?n:Ti(n),a=hs(t)?t:Ti(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let i=0;i<a.length;++i){const c=s[i],d=a[i];if(!e(c,d))throw new Error(`Arrays differ: actual[${i}] = ${c}, expected[${i}] = ${d}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function e2(n,t){n().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function t2(n,t){const e="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Hs(n)||Hs(n[0])||Hs(t)||Hs(t[0])?Wv(n,e,(r,s)=>r==s):Wv(n,t,(r,s)=>Kp(r,s,0))}function x1(n,t,e){if(null==e&&(e=Uv()),!Kp(n,t,e))throw new Error(`Numbers differ: actual === ${n}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Kp(n,t,e){return!isFinite(n)&&!isFinite(t)||!(isNaN(n)||isNaN(t)||Math.abs(n-t)>e)}function n2(n,t,e){for(let r=0;r<n.length;r++)if(n[r]<t||n[r]>e)throw new Error(`Value out of range:${n[r]} low: ${t}, high: ${e}`)}function r2(n,t){const e=new Float32Array(n),r=new Float32Array(t);if(e.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${e.length}`);for(let s=0;s<r.length;s++)if(e[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${e[s]} instead`)}function w1(n){for(let t=0;t<n.length;t++){const e=n[t];Array.isArray(e)?w1(e):n[t]=_i(e)}return n}function N1(n){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(n),new Promise(e=>{t.addEventListener("loadeddata",r=>e(t)),t.load()})}function s2(n){return Gv.apply(this,arguments)}function Gv(){return(Gv=(0,Fe.Z)(function*(n){yield n.play(),"requestVideoFrameCallback"in n&&(yield new Promise(t=>{n.requestVideoFrameCallback(t)}))})).apply(this,arguments)}const qv="4.4.0";class S1{static sgd(t){return new Vp(t)}static momentum(t,e,r=!1){return new Up(t,e,r)}static rmsprop(t,e=.9,r=0,s=null,a=!1){return new _v(t,e,r,s,a)}static adam(t=.001,e=.9,r=.999,s=null){return new Cv(t,e,r,s)}static adadelta(t=.001,e=.95,r=null){return new Pp(t,e,r)}static adamax(t=.002,e=.9,r=.999,s=null,a=0){return new Iv(t,e,r,s,a)}static adagrad(t,e=.1){return new zp(t,e)}}const Zp=_e({acos_:function a2(n){const e={x:se(n,"x","acos")};return ce.runKernel(Yr,e)}}),Hv=_e({acosh_:function i2(n){const e={x:se(n,"x","acosh")};return ce.runKernel(Mr,e)}}),I1=_e({addN_:function C1(n){q(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),q(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((s,a)=>se(s,`tensors${a}`,"addN")),e=t[0];return t.forEach(s=>{if(s.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(s=>{if(!_t(s.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),ce.runKernel(pf,t)}}),wh=_e({all_:function o2(n,t=null,e=!1){const s={x:se(n,"x","all","bool")};return ce.runKernel(Rd,s,{axis:t,keepDims:e})}}),Nh=_e({any_:function u2(n,t=null,e=!1){const s={x:se(n,"x","any","bool")};return ce.runKernel(mf,s,{axis:t,keepDims:e})}}),nl=_e({argMax_:function Sh(n,t=0){const r={x:se(n,"x","argMax")};return ce.runKernel(na,r,{axis:t})}}),jp=_e({argMin_:function _1(n,t=0){const r={x:se(n,"x","argMin")};return ce.runKernel(pn,r,{axis:t})}}),Xp=_e({asin_:function T1(n){const e={x:se(n,"x","asin")};return ce.runKernel(Gl,e)}}),Kv=_e({asinh_:function A1(n){const e={x:se(n,"x","asinh")};return ce.runKernel(ql,e)}}),Yp=_e({atan_:function l2(n){const e={x:se(n,"x","atan")};return ce.runKernel(Uo,e)}}),Zv=_e({atan2_:function c2(n,t){let e=se(n,"a","atan2"),r=se(t,"b","atan2");return[e,r]=Dr(e,r),ce.runKernel(Vr,{a:e,b:r})}}),jv=_e({atanh_:function E1(n){const e={x:se(n,"x","atanh")};return ce.runKernel(wt,e)}});function Ch(n,t,e,r,s="NHWC",a){return Rr(n,[...t,n[3]],e,a,r,null,null,No(s))}function ma(n,t,e,r,s,a,i="channelsLast"){const[c,d]=uu(t);let m;if("channelsLast"===i)m=[c,d,n[3],n[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);m=[c,d,n[1],n[1]]}return Rr(n,m,e,r,s,a,!1,i)}function Ri(n,t,e,r,s,a,i="NDHWC"){const[c,d,m]=Qp(t);let g,y;if("NDHWC"===i)y="channelsLast",g=[c,d,m,n[4],n[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);y="channelsFirst",g=[c,d,m,n[1],n[1]]}return wo(n,g,e,r,s,!1,y,a)}function Rr(n,t,e,r,s,a,i=!1,c="channelsLast"){let[d,m,g,y]=[-1,-1,-1,-1];if("channelsLast"===c)[d,m,g,y]=n;else{if("channelsFirst"!==c)throw new Error(`Unknown dataFormat ${c}`);[d,y,m,g]=n}const[C,T,,k]=t,[D,M]=uu(e),[R,$]=uu(r),V=$c(C,R),G=$c(T,$),{padInfo:K,outHeight:ae,outWidth:le}=function d2(n,t,e,r,s,a,i,c,d){let m,g,y;if("number"==typeof n){m={top:n,bottom:n,left:n,right:n,type:0===n?"VALID":"NUMBER"};const T=function f2(n,t,e,r,s){null==r&&(r=Jp(n,t,e));const i=n[1];return[Ih((n[0]-t+2*r)/e+1,s),Ih((i-t+2*r)/e+1,s)]}([t,e],a,r,n,c);g=T[0],y=T[1]}else if("same"===n){g=Math.ceil(t/r),y=Math.ceil(e/s);const C=Math.max(0,(g-1)*r+a-t),T=Math.max(0,(y-1)*s+i-e),k=Math.floor(C/2),D=C-k,M=Math.floor(T/2);m={top:k,bottom:D,left:M,right:T-M,type:"SAME"}}else if("valid"===n)m={top:0,bottom:0,left:0,right:0,type:"VALID"},g=Math.ceil((t-a+1)/r),y=Math.ceil((e-i+1)/s);else{if("object"!=typeof n)throw Error(`Unknown padding parameter: ${n}`);{const C="channelsLast"===d?n[1][0]:n[2][0],T="channelsLast"===d?n[1][1]:n[2][1],k="channelsLast"===d?n[2][0]:n[3][0],D="channelsLast"===d?n[2][1]:n[3][1];m={top:C,bottom:T,left:k,right:D,type:0===C&&0===T&&0===k&&0===D?"VALID":"EXPLICIT"},g=Ih((t-a+C+T)/r+1,c),y=Ih((e-i+k+D)/s+1,c)}}return{padInfo:m,outHeight:g,outWidth:y}}(s,m,g,D,M,V,G,a,c),he=i?k*y:k;let Ae;return"channelsFirst"===c?Ae=[d,he,ae,le]:"channelsLast"===c&&(Ae=[d,ae,le,he]),{batchSize:d,dataFormat:c,inHeight:m,inWidth:g,inChannels:y,outHeight:ae,outWidth:le,outChannels:he,padInfo:K,strideHeight:D,strideWidth:M,filterHeight:C,filterWidth:T,effectiveFilterHeight:V,effectiveFilterWidth:G,dilationHeight:R,dilationWidth:$,inShape:n,outShape:Ae,filterShape:t}}function wo(n,t,e,r,s,a=!1,i="channelsLast",c){let[d,m,g,y,C]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[d,m,g,y,C]=n;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[d,C,m,g,y]=n}const[T,k,D,,M]=t,[R,$,V]=Qp(e),[G,K,ae]=Qp(r),le=$c(T,G),he=$c(k,K),Ae=$c(D,ae),{padInfo:ke,outDepth:Ue,outHeight:Je,outWidth:st}=function k1(n,t,e,r,s,a,i,c,d,m,g){let y,C,T,k;if("valid"===n&&(n=0),"number"==typeof n){y={top:n,bottom:n,left:n,right:n,front:n,back:n,type:0===n?"VALID":"NUMBER"};const M=function h2(n,t,e,r,s,a){null==s&&(s=Jp(n,t[0],r[0]));const i=[0,0,0,e];for(let c=0;c<3;c++)n[c]+2*s>=t[c]&&(i[c]=Ih((n[c]-t[c]+2*s)/r[c]+1,a));return i}([t,e,r,1],[c,d,m],1,[s,a,i],n,g);C=M[0],T=M[1],k=M[2]}else{if("same"!==n)throw Error(`Unknown padding parameter: ${n}`);{C=Math.ceil(t/s),T=Math.ceil(e/a),k=Math.ceil(r/i);const D=(C-1)*s+c-t,M=(T-1)*a+d-e,R=(k-1)*i+m-r,$=Math.floor(D/2),V=D-$,G=Math.floor(M/2),K=M-G,ae=Math.floor(R/2);y={top:G,bottom:K,left:ae,right:R-ae,front:$,back:V,type:"SAME"}}}return{padInfo:y,outDepth:C,outHeight:T,outWidth:k}}(s,m,g,y,R,$,V,le,he,Ae,c),at=a?M*C:M;let ot;return"channelsFirst"===i?ot=[d,at,Ue,Je,st]:"channelsLast"===i&&(ot=[d,Ue,Je,st,at]),{batchSize:d,dataFormat:i,inDepth:m,inHeight:g,inWidth:y,inChannels:C,outDepth:Ue,outHeight:Je,outWidth:st,outChannels:at,padInfo:ke,strideDepth:R,strideHeight:$,strideWidth:V,filterDepth:T,filterHeight:k,filterWidth:D,effectiveFilterDepth:le,effectiveFilterHeight:he,effectiveFilterWidth:Ae,dilationDepth:G,dilationHeight:K,dilationWidth:ae,inShape:n,outShape:ot,filterShape:t}}function Jp(n,t,e,r=1){const s=$c(t,r);return Math.floor((n[0]*(e-1)-e+s)/2)}function uu(n){return"number"==typeof n?[n,n,n]:2===n.length?[n[0],n[1],1]:n}function Qp(n){return"number"==typeof n?[n,n,n]:n}function $c(n,t){return t<=1?n:n+(n-1)*(t-1)}function Ih(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function lu(n){const[t,e,r]=uu(n);return 1===t&&1===e&&1===r}function ds(n,t){return lu(n)||lu(t)}function rl(n){return uu(n).every(t=>t>0)}function No(n){if("NHWC"===n)return"channelsLast";if("NCHW"===n)return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function $s(n,t,e){if(null!=e){if("string"==typeof t)throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if("number"==typeof t)q(bn(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${n}: Unknown padding parameter: ${t}`);t.forEach(r=>{r.forEach(s=>{q(bn(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${s}.`)})})}}}const $e=_e({reshape_:function p2(n,t){const r={x:se(n,"x","reshape","string_or_numeric")};return ce.runKernel(Uf,r,{shape:t})}}),_h=_e({avgPool_:function m2(n,t,e,r,s){const a=se(n,"x","avgPool","float32");q(ds(e,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`);let c=a,d=!1;3===a.rank&&(d=!0,c=$e(a,[1,a.shape[0],a.shape[1],a.shape[2]])),q(4===c.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${c.rank}.`),$s("avgPool",r,s);let y=ce.runKernel(Ss,{x:c},{filterSize:t,strides:e,pad:r,dimRoundingMode:s});return y=Lt(y,a.dtype),d?$e(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),Xv=_e({avgPool3d_:function g2(n,t,e,r,s,a="NDHWC"){const i=se(n,"x","avgPool3d","float32");let c=i,d=!1;4===i.rank&&(d=!0,c=$e(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),q(5===c.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`),q("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),q("number"==typeof e&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),$s("avgPool3d",r,s);let y=ce.runKernel(Go,{x:c},{filterSize:t,strides:e,pad:r,dimRoundingMode:s,dataFormat:a});return y=Lt(y,c.dtype),d?$e(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),$r=_e({concat_:function v2(n,t=0){q(n.length>=1,()=>"Pass at least one tensor to concat");const e=ch(n,"tensors","concat","string_or_numeric");return"complex64"===e[0].dtype&&e.forEach(a=>{if("complex64"!==a.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${a.dtype}. `)}),1===e.length?ki(e[0]):ce.runKernel(Kl,e,{axis:t})}}),Za=_e({sigmoid_:function M1(n){const e={x:se(n,"x","sigmoid","float32")};return ce.runKernel(gc,e)}}),qn=_e({slice_:function D1(n,t,e){const r=se(n,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return ce.runKernel(Hf,{x:r},{begin:t,size:e})}}),sl=_e({tanh_:function R1(n){const e={x:se(n,"x","tanh","float32")};return ce.runKernel(qu,e)}}),$1=_e({basicLSTMCell_:function y2(n,t,e,r,s,a){const i=se(n,"forgetBias","basicLSTMCell"),c=se(t,"lstmKernel","basicLSTMCell"),d=se(e,"lstmBias","basicLSTMCell"),m=se(r,"data","basicLSTMCell"),g=se(s,"c","basicLSTMCell"),y=se(a,"h","basicLSTMCell"),C=$r([m,y],1),T=Rn(C,c),k=Nt(T,d),M=k.shape[1]/4,R=[k.shape[0],M],$=qn(k,[0,0],R),V=qn(k,[0,M],R),G=qn(k,[0,2*M],R),K=qn(k,[0,3*M],R),ae=Nt(Ce(Za($),sl(V)),Ce(g,Za(Nt(i,G))));return[ae,Ce(sl(ae),Za(K))]}}),Th=_e({batchToSpaceND_:function b2(n,t,e){const r=se(n,"x","batchToSpaceND"),s=t.reduce((c,d)=>c*d);return q(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),q(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),q(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`),ce.runKernel(sn,{x:r},{blockShape:t,crops:e})}});function x2(n){let t;return t=0===n.rank||1===n.rank?$e(n,[1,1,1,n.size]):2===n.rank?$e(n,[1,1,n.shape[0],n.shape[1]]):3===n.rank?$e(n,[1,n.shape[0],n.shape[1],n.shape[2]]):n,t}const al=_e({batchNorm_:function w2(n,t,e,r,s,a){null==a&&(a=.001);const i=se(n,"x","batchNorm"),c=se(t,"mean","batchNorm"),d=se(e,"variance","batchNorm");let m,g;null!=s&&(m=se(s,"scale","batchNorm")),null!=r&&(g=se(r,"offset","batchNorm")),q(c.rank===d.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),q(null==g||c.rank===g.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),q(null==m||c.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const C={x:x2(i),scale:m,offset:g,mean:c,variance:d},k=ce.runKernel(If,C,{varianceEpsilon:a});return $e(k,i.shape)}}),Yv=_e({batchNorm2d_:function N2(n,t,e,r,s,a){const i=se(n,"x","batchNorm"),c=se(t,"mean","batchNorm"),d=se(e,"variance","batchNorm");let m,g;return null!=s&&(m=se(s,"scale","batchNorm")),null!=r&&(g=se(r,"offset","batchNorm")),q(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),q(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${c.rank}.`),q(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`),null!=m&&q(2===m.rank||1===m.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${m.rank}.`),null!=g&&q(2===g.rank||1===g.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${g.rank}.`),al(i,c,d,g,m,a)}}),Jv=_e({batchNorm3d_:function O1(n,t,e,r,s,a){const i=se(n,"x","batchNorm"),c=se(t,"mean","batchNorm"),d=se(e,"variance","batchNorm");let m,g;return null!=s&&(m=se(s,"scale","batchNorm")),null!=r&&(g=se(r,"offset","batchNorm")),q(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),q(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${c.rank}.`),q(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`),null!=m&&q(3===m.rank||1===m.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${m.rank}.`),null!=g&&q(3===g.rank||1===g.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${g.rank}.`),al(i,c,d,g,m,a)}}),em=_e({batchNorm4d_:function Oc(n,t,e,r,s,a){const i=se(n,"x","batchNorm"),c=se(t,"mean","batchNorm"),d=se(e,"variance","batchNorm");let m,g;return null!=s&&(m=se(s,"scale","batchNorm")),null!=r&&(g=se(r,"offset","batchNorm")),q(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),q(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${c.rank}.`),q(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`),null!=m&&q(4===m.rank||1===m.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${m.rank}.`),null!=g&&q(4===g.rank||1===g.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${g.rank}.`),al(i,c,d,g,m,a)}}),Qv=_e({bincount_:function S2(n,t,e){const r=se(n,"x","bincount"),s=se(t,"weights","bincount");return q("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),q(e>=0,()=>`size must be non-negative, but got ${e}.`),q(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`),ce.runKernel(ka,{x:r,weights:s},{size:e})}}),L1=_e({broadcastArgs_:function F1(n,t){const e=se(n,"s0","broadcastArgs","int32"),r=se(t,"s1","broadcastArgs","int32");if(1!==e.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);return ce.runKernel(Ru,{s0:e,s1:r})}}),cu=_e({broadcastTo_:function C2(n,t){let e=se(n,"broadcastTo","x");const r=e.shape;if(Ks(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const m=e.shape.slice();for(;m.length<t.length;)m.unshift(1);e=$e(e,m)}const s=e.shape,a=Array.from(t);for(let m=t.length-1;m>=0;m--)if(s[m]===t[m])a[m]=1;else if(1!==e.shape[m])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===a.map((m,g)=>m>1?g:-1).filter(m=>m>=0).length?ki(e):ce.runKernel(Hu,{x:e},{reps:a})}}),tm=_e({ceil_:function ey(n){const e={x:se(n,"x","ceil","float32")};return ce.runKernel($u,e)}}),oa=_e({clipByValue_:function I2(n,t,e){const r=se(n,"x","clipByValue");return q(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e?su(r.shape,t,r.dtype):ce.runKernel(Ma,{x:r},{clipValueMin:t,clipValueMax:e})}}),nm=_e({concat1d_:function YR(n){return $r(n,0)}}),ty=_e({concat2d_:function _2(n,t){return $r(n,t)}}),ny=_e({concat3d_:function B1(n,t){return $r(n,t)}}),rm=_e({concat4d_:function T2(n,t){return $r(n,t)}}),So=_e({conv2d_:function A2(n,t,e,r,s="NHWC",a=[1,1],i){const c=se(n,"x","conv2d","float32"),d=se(t,"filter","conv2d","float32");let m=c,g=!1;3===c.rank&&(g=!0,m=$e(c,[1,c.shape[0],c.shape[1],c.shape[2]])),q(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),q(4===d.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${d.rank}.`),$s("conv2d",r,i);const y="NHWC"===s?m.shape[3]:m.shape[1];q(y===d.shape[2],()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${d.shape[2]}.`),q(ds(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),q(rl(a),()=>"Error in conv2D: Dilated rates should be larger than 0."),q(rl(e),()=>"Error in conv2D: Strides should be larger than 0.");const k=ce.runKernel(Ou,{x:m,filter:d},{strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return g?$e(k,[k.shape[1],k.shape[2],k.shape[3]]):k}}),sm=_e({conv1d_:function P1(n,t,e,r,s="NWC",a=1,i){const c=se(n,"x","conv1d"),d=se(t,"filter","conv1d");let m=c,g=!1;2===c.rank&&(g=!0,m=$e(c,[1,c.shape[0],c.shape[1]])),q(3===m.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${m.rank}.`),q(3===d.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`),$s("conv1d",r,i),q(m.shape[2]===d.shape[1],()=>`Error in conv1d: depth of input (${m.shape[2]}) must match input depth for filter ${d.shape[1]}.`),q(ds(e,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${a}'`),q(rl(a),()=>"Error in conv1D: Dilated rates should be larger than 0."),q(rl(e),()=>"Error in conv1D: Stride should be larger than 0."),q("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const y=$e(d,[1,d.shape[0],d.shape[1],d.shape[2]]),C=$e(m,[m.shape[0],1,m.shape[1],m.shape[2]]),M=So(C,y,[1,e],r,"NHWC",[1,a],i);return $e(M,g?[M.shape[2],M.shape[3]]:[M.shape[0],M.shape[2],M.shape[3]])}}),ry=_e({conv2DBackpropInput_:function E2(n,t,e,r,s,a="NHWC",i){q(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let c=n,d=t,m=!1;3===t.rank&&(m=!0,d=$e(t,[1,t.shape[0],t.shape[1],t.shape[2]]),c=[1,n[0],n[1],n[2]]),q(4===c.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${c.length}.`),q(4===d.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`),q(4===e.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const g="NHWC"===a?c[3]:c[1],y="NHWC"===a?d.shape[3]:d.shape[1];q(g===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${g}) must match input depth for filter ${e.shape[2]}.`),q(y===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${y}) must match output depth for filter ${e.shape[3]}.`),$s("conv2dDerInput",s,i);const k=ce.runKernel(Zl,{dy:d,filter:e},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:c});return m?$e(k,[k.shape[1],k.shape[2],k.shape[3]]):k}}),am=_e({conv2dTranspose_:function k2(n,t,e,r,s,a){const i=se(n,"x","conv2dTranspose"),c=se(t,"filter","conv2dTranspose");return ry(e,i,c,r,s,"NHWC",a)}}),sy=_e({conv3d_:function z1(n,t,e,r,s="NDHWC",a=[1,1,1]){const i=se(n,"x","conv3d"),c=se(t,"filter","conv3d");let d=i,m=!1;4===i.rank&&(m=!0,d=$e(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),q(5===d.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${d.rank}.`),q(5===c.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`),q(d.shape[4]===c.shape[3],()=>`Error in conv3d: depth of input (${d.shape[4]}) must match input depth for filter ${c.shape[3]}.`),q(ds(e,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),q("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),q(rl(a),()=>"Error in conv3D: Dilated rates should be larger than 0."),q(rl(e),()=>"Error in conv3D: Strides should be larger than 0.");const C=ce.runKernel(Fu,{x:d,filter:c},{strides:e,pad:r,dataFormat:s,dilations:a});return m?$e(C,[C.shape[1],C.shape[2],C.shape[3],C.shape[4]]):C}}),ay=_e({conv3DBackpropInput_:function M2(n,t,e,r,s){q(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,i=t,c=!1;4===t.rank&&(c=!0,i=$e(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,n[0],n[1],n[2],n[3]]);const d=a[4],m=i.shape[4];q(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),q(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),q(5===e.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),q(d===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${d}) must match input depth for filter ${e.shape[3]}.`),q(m===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${m}) must match output depth for filter ${e.shape[4]}.`);const C=ce.runKernel(Fd,{dy:i,filter:e},{pad:s,strides:r,inputShape:a});return c?$e(C,[C.shape[1],C.shape[2],C.shape[3],C.shape[4]]):C}}),iy=_e({conv3dTranspose_:function D2(n,t,e,r,s){const a=se(n,"x","conv3dTranspose"),i=se(t,"filter","conv3dTranspose");return ay(e,a,i,r,s)}}),Ah=_e({cos_:function V1(n){const e={x:se(n,"x","cos","float32")};return ce.runKernel(hi,e)}}),Eh=_e({cosh_:function R2(n){const e={x:se(n,"x","cosh","float32")};return ce.runKernel(oo,e)}}),kh=_e({cumprod_:function $2(n,t=0,e=!1,r=!1){const a={x:se(n,"x","cumprod")};return ce.runKernel(yf,a,{axis:t,exclusive:e,reverse:r})}}),im=_e({cumsum_:function U1(n,t=0,e=!1,r=!1){const a={x:se(n,"x","cumsum")};return ce.runKernel(Lu,a,{axis:t,exclusive:e,reverse:r})}}),Mh=_e({denseBincount_:function O2(n,t,e,r=!1){const s=se(n,"x","denseBincount"),a=se(t,"weights","denseBincount");return q("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),q(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),q(e>=0,()=>`size must be non-negative, but got ${e}.`),q(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`),ce.runKernel(Ld,{x:s,weights:a},{size:e,binaryOutput:r})}}),oy=_e({depthToSpace_:function F2(n,t,e="NHWC"){const r=se(n,"x","depthToSpace","float32"),s="NHWC"===e?r.shape[1]:r.shape[2],a="NHWC"===e?r.shape[2]:r.shape[3],i="NHWC"===e?r.shape[3]:r.shape[1];return q(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),q(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),q(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),q(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),ce.runKernel(Bd,{x:r},{blockSize:t,dataFormat:e})}}),Fc=_e({depthwiseConv2d_:function W1(n,t,e,r,s="NHWC",a=[1,1],i){const c=se(n,"x","depthwiseConv2d","float32"),d=se(t,"filter","depthwiseConv2d","float32");let m=c,g=!1;3===c.rank&&(g=!0,m=$e(c,[1,c.shape[0],c.shape[1],c.shape[2]])),q(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),q(4===d.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`);const y="NHWC"===s?m.shape[3]:m.shape[1];q(y===d.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${d.shape[2]}.`),$s("depthwiseConv2d",r,i);const k=ce.runKernel(xf,{x:m,filter:d},{strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return g?$e(k,[k.shape[1],k.shape[2],k.shape[3]]):k}}),uy=_e({diag_:function L2(n){const e={x:se(n,"x","diag")};return ce.runKernel(Vd,e)}}),ly=_e({dilation2d_:function B2(n,t,e,r,s=[1,1],a="NHWC"){const i=se(n,"x","dilation2d"),c=se(t,"filter","dilation2d");q(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),q(3===c.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`),q("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let d=i,m=!1;3===i.rank&&(d=$e(i,[1,i.shape[0],i.shape[1],i.shape[2]]),m=!0),q(d.shape[3]===c.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${d.shape[3]} vs ${c.shape[2]}`);const C=ce.runKernel(wf,{x:d,filter:c},{strides:e,pad:r,dilations:s});return m?$e(C,[C.shape[1],C.shape[2],C.shape[3]]):C}}),ga=_e({equal_:function om(n,t){let e=se(n,"a","equal","string_or_numeric"),r=se(t,"b","equal","string_or_numeric");return[e,r]=Dr(e,r),An(e.shape,r.shape),ce.runKernel(Nf,{a:e,b:r})}}),ps=_e({where_:function G1(n,t,e){const r=se(t,"a","where"),s=se(e,"b","where"),a=se(n,"condition","where","bool"),i=An(An(a.shape,r.shape),s.shape),c=cu(a,i),d=cu(r,i),m=cu(s,i);return ce.runKernel(mc,{condition:c,t:d,e:m})}}),um=_e({divNoNan_:function P2(n,t){let e=se(n,"a","div"),r=se(t,"b","div");[e,r]=Dr(e,r);const s=nn(e,r),a=Gn(s),i=ga(r,a);return ps(i,a,s)}}),cy=_e({dot_:function z2(n,t){const e=se(n,"t1","dot"),r=se(t,"t2","dot");q(!(1!==e.rank&&2!==e.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${r.rank}.`);const s=1===e.rank?e.size:e.shape[1],a=1===r.rank?r.size:r.shape[0];if(q(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===e.rank&&1===r.rank){const i=$e(e,[1,-1]),c=$e(r,[-1,1]),d=Rn(i,c);return $e(d,[])}if(1===e.rank&&2===r.rank){const i=$e(e,[1,-1]),c=$e(r,[r.shape[0],r.shape[1]]),d=Rn(i,c);return $e(d,[d.size])}if(2===e.rank&&1===r.rank){const i=$e(r,[-1,1]),c=Rn(e,i);return $e(c,[c.size])}{const i=$e(r,[r.shape[0],r.shape[1]]);return Rn(e,i)}}}),H1=_e({einsum_:function q1(n,...t){const e=t.map((s,a)=>se(s,`tensors${a}`,"einsum"));return ce.runKernel(Gd,e,{equation:n})}}),il=_e({elu_:function V2(n){const e={x:se(n,"x","elu","float32")};return ce.runKernel(Xl,e)}}),fy=_e({erf_:function K1(n){let t=se(n,"x","erf");return q("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Lt(t,"float32")),ce.runKernel(Yl,{x:t})}});function hy(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function dy(n,t,e){const r=n.length+t.length,s=[];let a=0,i=0;for(let c=0;c<r;c++)-1===e.indexOf(c)?s.push(n[a++]):s.push(t[i++]);return s}function ms(n,t){const e=[],r=n.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&e.push(n[a]);return[e,t.map(a=>n[a])]}function Wr(n,t){return dy(n,t.map(r=>1),t)}function gs(n,t,e){q(hy(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function Or(n,t){if(hy(n,t))return null;const e=[];for(let r=0;r<t;++r)-1===n.indexOf(r)&&e.push(r);return n.forEach(r=>e.push(r)),e}function fu(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Br(n,t){const e=[];for(let r=t-n;r<t;++r)e.push(r);return e}const La=_e({max_:function U2(n,t=null,e=!1){const s={x:se(n,"x","max")};return ce.runKernel(nr,s,{reductionIndices:t,keepDims:e})}}),Lc=_e({min_:function Z1(n,t=null,e=!1){const s={x:se(n,"x","min")};return ce.runKernel(lc,s,{axis:t,keepDims:e})}}),Kt=_e({sum_:function W2(n,t=null,e=!1){let r=se(n,"x","sum");return"bool"===r.dtype&&(r=Lt(r,"int32")),ce.runKernel(jf,{x:r},{axis:t,keepDims:e})}});function j1(n,t,e=null){if(0===n.rank)return es(n);if(1!==n.rank&&null===e)return j1($e(n,[-1]),t,e);if(1===n.rank||"number"==typeof e||Array.isArray(e)&&1===e.length){if(1===t)return Kt(es(n),e);if(t===1/0)return La(es(n),e);if(t===-1/0)return Lc(es(n),e);if("euclidean"===t||2===t)return Is(Kt(yo(es(n),ln(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&2===e.length){if(1===t)return La(Kt(es(n),e[0]),e[1]-1);if(t===1/0)return La(Kt(es(n),e[1]),e[0]);if(t===-1/0)return Lc(Kt(es(n),e[1]),e[0]);if("fro"===t||"euclidean"===t)return Is(Kt(ir(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const ol=_e({norm_:function G2(n,t="euclidean",e=null,r=!1){const s=j1(n=se(n,"x","norm"),t,e);let a=s.shape;if(r){const i=Mn(e,n.shape);a=Wr(s.shape,i)}return $e(s,a)}}),py=_e({euclideanNorm_:function q2(n,t=null,e=!1){return ol(n,"euclidean",t,e)}}),va=_e({exp_:function X1(n){const e={x:se(n,"x","exp")};return ce.runKernel(Bu,e)}}),Os=_e({expandDims_:function H2(n,t=0){const e=se(n,"x","expandDims","string_or_numeric");return q(t<=e.rank,()=>"Axis must be <= rank of the tensor"),ce.runKernel(Sf,{input:e},{dim:t})}}),my=_e({expm1_:function K2(n){const e={x:se(n,"x","expm1")};return ce.runKernel(Jl,e)}}),Ba=_e({tile_:function Z2(n,t){const e=se(n,"x","tile","string_or_numeric");return q(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`),ce.runKernel(Hu,{x:e},{reps:t})}}),Dh=_e({eye_:function j2(n,t,e,r="float32"){null==t&&(t=n);const s=En([n,t],r),a=n<=t?n:t;for(let c=0;c<a;++c)s.set(1,c,c);const i=$e(s.toTensor(),[n,t]);if(null==e)return i;if(1===e.length)return Ba(Os(i,0),[e[0],1,1]);if(2===e.length)return Ba(Os(Os(i,0),0),[e[0],e[1],1,1]);if(3===e.length)return Ba(Os(Os(Os(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}}),Bc=_e({floor_:function X2(n){const e={x:se(n,"x","floor","float32")};return ce.runKernel(Ql,e)}}),Pc=_e({gather_:function Y1(n,t,e=0,r=0){const s=se(n,"x","gather"),a=se(t,"indices","gather","int32");return ce.runKernel(_f,{x:s,indices:a},{axis:e,batchDims:r})}}),Fs=_e({greater_:function Y2(n,t){let e=se(n,"a","greater","string_or_numeric"),r=se(t,"b","greater","string_or_numeric");return[e,r]=Dr(e,r),An(e.shape,r.shape),ce.runKernel(Tf,{a:e,b:r})}}),Co=_e({greaterEqual_:function J2(n,t){let e=se(n,"a","greaterEqual","string_or_numeric"),r=se(t,"b","greaterEqual","string_or_numeric");return[e,r]=Dr(e,r),An(e.shape,r.shape),ce.runKernel(tc,{a:e,b:r})}}),gy=_e({isFinite_:function Q2(n){const e={x:se(n,"x","isFinite")};return ce.runKernel(rc,e)}}),lm=_e({isInf_:function eT(n){const e={x:se(n,"x","isInf")};return ce.runKernel(sc,e)}}),vy=_e({isNaN_:function tT(n){const e={x:se(n,"x","isNaN")};return ce.runKernel(ac,e)}}),Rh=_e({leakyRelu_:function J1(n,t=.2){const r={x:se(n,"x","leakyRelu")};return ce.runKernel(Af,r,{alpha:t})}}),ul=_e({less_:function nT(n,t){let e=se(n,"a","less","string_or_numeric"),r=se(t,"b","less","string_or_numeric");return[e,r]=Dr(e,r),An(e.shape,r.shape),ce.runKernel(Ef,{a:e,b:r})}}),hu=_e({lessEqual_:function rT(n,t){let e=se(n,"a","lessEqual","string_or_numeric"),r=se(t,"b","lessEqual","string_or_numeric");return[e,r]=Dr(e,r),An(e.shape,r.shape),ce.runKernel(kf,{a:e,b:r})}});function Q1(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");return ce.runKernel(Yd,{},{start:n,stop:t,num:e})}const Pa=_e({localResponseNormalization_:function sT(n,t=5,e=1,r=1,s=.5){const a=se(n,"x","localResponseNormalization");q(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),q(bn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,c=!1;3===a.rank&&(c=!0,i=$e(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const g=ce.runKernel(lo,{x:i},{depthRadius:t,bias:e,alpha:r,beta:s});return c?$e(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),ya=_e({log_:function aT(n){const e={x:se(n,"x","log","float32")};return ce.runKernel(ic,e)}}),$h=_e({log1p_:function ua(n){const e={x:se(n,"x","log1p")};return ce.runKernel(oc,e)}}),$i=_e({softplus_:function iT(n){const e={x:se(n,"x","softplus")};return ce.runKernel(Zf,e)}}),yy=_e({logSigmoid_:function oT(n){const t=se(n,"x","logSigmoid");return Mi(r=>({value:cr($i(cr(r))),gradFunc:i=>Ce(i,Za(cr(r)))}))(t)}}),cm=_e({logSoftmax_:function Ls(n,t=-1){const e=se(n,"logits","logSoftmax");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Mi((s,a)=>{const c=La(s,t,!0),d=Ht(s,c),m=Ht(Lt(d,"float32"),ya(Kt(va(d),t,!0)));return a([m]),{value:m,gradFunc:(y,C)=>{const[T]=C,D=va(T);return Ht(y,Ce(Kt(y,t,!0),D))}}})(e)}}),ts=_e({logSumExp_:function uT(n,t=null,e=!1){const r=se(n,"x","logSumExp"),s=Mn(t,r.shape),a=La(r,s,!0),i=Ht(r,a),c=va(i),d=Kt(c,s),m=ya(d),g=Nt($e(a,m.shape),m);if(e){const y=Wr(g.shape,s);return $e(g,y)}return g}}),ja=_e({logicalAnd_:function lT(n,t){const e=se(n,"a","logicalAnd","bool"),r=se(t,"b","logicalAnd","bool");return An(e.shape,r.shape),ce.runKernel(Mf,{a:e,b:r})}}),Oh=_e({logicalNot_:function fr(n){const e={x:se(n,"x","logicalNot","bool")};return ce.runKernel(uo,e)}}),Kn=_e({logicalOr_:function cT(n,t){const e=se(n,"a","logicalOr","bool"),r=se(t,"b","logicalOr","bool");return An(e.shape,r.shape),ce.runKernel(qo,{a:e,b:r})}}),by=_e({logicalXor_:function ew(n,t){const e=se(n,"a","logicalXor","bool"),r=se(t,"b","logicalXor","bool");return An(e.shape,r.shape),ja(Kn(n,t),Oh(ja(n,t)))}}),fm=2147483648,hm=_e({searchSorted_:function fT(n,t,e="left"){const r=se(n,"sortedSequence","searchSorted"),s=se(t,"values","searchSorted"),i=s.shape[s.shape.length-1],c=$e(r,[-1,r.shape[r.shape.length-1]]),d=$e(s,[-1,i]);if(c.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(c.shape[0]!==d.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ze(d.shape)>=fm)throw new Error(`values tensor size must less than ${fm}`);if(c.shape[1]>=fm)throw new Error(`trailing dim_size must less than ${fm} for int32 output type, was ${c.shape[1]}`);return ce.runKernel(Gf,{sortedSequence:c,values:d},{side:e})}});function Io(n,t){return hm(n,t,"left")}const Fh=_e({maxPool_:function hT(n,t,e,r,s){const a=se(n,"x","maxPool");let c=a,d=!1;3===a.rank&&(d=!0,c=$e(a,[1,a.shape[0],a.shape[1],a.shape[2]])),q(4===c.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${c.rank}.`),q(ds(e,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`),$s("maxPool",r,s);const y=ce.runKernel(Ko,{x:c},{filterSize:t,strides:e,pad:r,dimRoundingMode:s});return d?$e(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),pm=_e({maxPool3d_:function dm(n,t=[1,1,1],e,r,s,a="NDHWC"){const i=se(n,"x","maxPool3d");let c=i,d=!1;4===i.rank&&(d=!0,c=$e(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),q(5===c.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`),q("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),$s("maxPool3d",r,s);const y=ce.runKernel(di,{x:c},{filterSize:t,strides:e,pad:r,dimRoundingMode:s,dataFormat:a});return d?$e(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),tw=_e({maxPoolWithArgmax_:function dT(n,t,e,r,s=!1){const i={x:se(n,"x","maxPoolWithArgmax")},d=ce.runKernel(Zo,i,{filterSize:t,strides:e,pad:r,includeBatchInIndex:s});return{result:d[0],indexes:d[1]}}}),Ir=_e({mean_:function JR(n,t=null,e=!1){const s={x:se(n,"x","mean")};return ce.runKernel(Df,s,{axis:t,keepDims:e})}});function ns(n,t="float32"){if(Ks(n),"complex64"===t){const r=ns(n,"float32"),s=ns(n,"float32");return po(r,s)}const e=zr(ze(n),t);return ce.makeTensor(e,n,t)}function la(n,t="float32"){if(Ks(n),"complex64"===t){const r=la(n,"float32"),s=ns(n,"float32");return po(r,s)}const e=Vo(ze(n),t);return ce.makeTensor(e,n,t)}function pT(n,t,{indexing:e="xy"}={}){if("xy"!==e&&"ij"!==e)throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(void 0===n)return[];let r=se(n,"x","meshgrid",n instanceof jn?n.dtype:"float32");if(void 0===t)return[r];let s=se(t,"y","meshgrid",t instanceof jn?t.dtype:"float32");const a=ze(r.shape),i=ze(s.shape);return"xy"===e?(r=$e(r,[1,-1]),s=$e(s,[-1,1]),[Rn(la([i,1],r.dtype),r),Rn(s,la([1,a],s.dtype))]):(r=$e(r,[-1,1]),s=$e(s,[1,-1]),[Rn(r,la([1,i],r.dtype)),Rn(la([a,1],s.dtype),s)])}const du=_e({minimum_:function QR(n,t){let e=se(n,"a","minimum"),r=se(t,"b","minimum");return[e,r]=Dr(e,r),"bool"===e.dtype&&(e=Lt(e,"int32"),r=Lt(r,"int32")),An(e.shape,r.shape),ce.runKernel(Vu,{a:e,b:r})}}),xy=_e({mirrorPad_:function mT(n,t,e){q("reflect"===e||"symmetric"===e,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const r=se(n,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");q(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===e?1:0;for(let c=0;c<r.rank;c++)q(2===t[c].length,()=>"Invalid number of paddings. Must be length of 2 each."),q(t[c][0]>=0&&t[c][0]<=r.shape[c]-s&&t[c][1]>=0&&t[c][1]<=r.shape[c]-s,()=>`Padding in dimension ${c} cannot be greater than or equal to ${r.shape[c]-s} or less than 0 for input of shape ${r.shape}`);return ce.runKernel(Rf,{x:r},{paddings:t,mode:e})}}),wy=_e({mod_:function nw(n,t){let e=se(n,"a","mod"),r=se(t,"b","mod");return[e,r]=Dr(e,r),ce.runKernel(cc,{a:e,b:r})}}),vs=_e({moments_:function gT(n,t=null,e=!1){const r=Mn(t,(n=se(n,"x","moments")).shape),s=Ir(n,r,e);let a=s.shape;e||(a=Wr(s.shape,r));const i=ir(Ht(Lt(n,"float32"),$e(s,a)));return{mean:s,variance:Ir(i,r,e)}}}),sw=_e({multiRNNCell_:function rw(n,t,e,r){const s=se(t,"data","multiRNNCell"),a=ch(e,"c","multiRNNCell"),i=ch(r,"h","multiRNNCell");let c=s;const d=[];for(let y=0;y<n.length;y++){const C=n[y](c,a[y],i[y]);d.push(C[0]),d.push(C[1]),c=C[1]}const m=[],g=[];for(let y=0;y<d.length;y+=2)m.push(d[y]),g.push(d[y+1]);return[m,g]}}),Ny=_e({multinomial_:function vT(n,t,e,r=!1){const s=se(n,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();const d={logits:1===i?$e(s,[1,-1]):s},g=ce.runKernel(Jd,d,{numSamples:t,seed:e,normalized:r});return 1===i?$e(g,[g.size]):g}}),ll=_e({notEqual_:function yT(n,t){let e=se(n,"a","notEqual","string_or_numeric"),r=se(t,"b","notEqual","string_or_numeric");return[e,r]=Dr(e,r),An(e.shape,r.shape),ce.runKernel(Of,{a:e,b:r})}}),ba=_e({onesLike_:function aw(n){const e={x:se(n,"x","onesLike")};return ce.runKernel(Ff,e)}}),iw=_e({outerProduct_:function bT(n,t){const e=se(n,"v1","outerProduct"),r=se(t,"v2","outerProduct");q(1===e.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${r.rank}.`);const s=$e(e,[-1,1]),a=$e(r,[1,-1]);return Rn(s,a)}}),_s=_e({pad_:function xT(n,t,e=0){const r=se(n,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return ce.runKernel(Pf,{x:r},{paddings:t,constantValue:e})}}),uw=_e({pad1d_:function ow(n,t,e=0){return q(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),_s(n,[t],e)}}),NT=_e({pad2d_:function wT(n,t,e=0){return q(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),_s(n,t,e)}}),cw=_e({pad3d_:function lw(n,t,e=0){return q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),_s(n,t,e)}}),Sy=_e({pad4d_:function ST(n,t,e=0){return q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),_s(n,t,e)}}),Lh=_e({spaceToBatchND_:function CT(n,t,e){const r=se(n,"x","spaceToBatchND");return q(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),q(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),q(r.shape.reduce((i,c,d)=>d>0&&d<=t.length?i&&(c+e[d-1][0]+e[d-1][1])%t[d-1]==0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`),ce.runKernel(Xf,{x:r},{blockShape:t,paddings:e})}}),Cy=_e({pool_:function IT(n,t,e,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const c=se(n,"x","maxPool");let d=c,m=!1;3===c.rank&&(m=!0,d=$e(c,[1,c.shape[0],c.shape[1],c.shape[2]])),q(ds(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const g=ma(d.shape,t,a,s,r),y=[g.dilationHeight,g.dilationWidth];let C;C="same"===r?function _T(n,t){const r=n.map((i,c)=>i+(i-1)*(t[c]-1)).map(i=>i-1),s=r.map(i=>Math.floor(i/2)),a=r.map((i,c)=>i-s[c]);return r.map((i,c)=>[s[c],a[c]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const T=1===y[0]&&1===y[1],[k,D]=function fw(n,t,e){const r=e.map(g=>g[0]),s=e.map(g=>g[1]),a=n.concat(r,s),i=t.map((g,y)=>(g-a[y]%g)%g),c=s.map((g,y)=>g+i[y]),d=t.map((g,y)=>[r[y],c[y]]),m=t.map((g,y)=>[0,i[y]]);return[d,m]}([g.inHeight,g.inWidth],y,C),M=T?r:"valid",R=T?d:Lh(d,y,k),V=("avg"===e?()=>_h(R,t,a,M,i):()=>Fh(R,t,a,M,i))(),G=T?V:Th(V,y,D);return m?$e(G,[G.shape[1],G.shape[2],G.shape[3]]):G}}),Bh=_e({prelu_:function TT(n,t){const e=se(n,"x","prelu"),r=se(t,"alpha","prelu");return ce.runKernel(dc,{x:e,alpha:r})}}),mm=_e({prod_:function cl(n,t=null,e=!1){let r=se(n,"x","prod");return"bool"===r.dtype&&(r=Lt(r,"int32")),ce.runKernel(zf,{x:r},{axis:t,keepDims:e})}}),hw=_e({raggedGather_:function AT(n,t,e,r){const s=n.map((g,y)=>se(g,`tensors${y}`,"raggedGather","int32")),a=se(t,"paramsDenseValues","raggedGather"),i=se(e,"indices","raggedGather","int32"),m=ce.runKernel(np,{paramsNestedSplits:s,paramsDenseValues:a,indices:i},{outputRaggedRank:r});return{outputNestedSplits:m.slice(0,m.length-1),outputDenseValues:m[m.length-1]}}}),Iy=_e({raggedRange_:function gm(n,t,e){const r=se(n,"starts","raggedRange"),s=se(t,"limits","raggedRange",r.dtype),a=se(e,"deltas","raggedRange",r.dtype),c=ce.runKernel(rp,{starts:r,limits:s,deltas:a});return{rtNestedSplits:c[0],rtDenseValues:c[1]}}}),dw=_e({raggedTensorToTensor_:function ET(n,t,e,r,s){const a=se(n,"shape","raggedTensorToTensor","int32"),i=se(t,"values","raggedTensorToTensor"),c=se(e,"defaultValue","raggedTensorToTensor",i.dtype),d=r.map((y,C)=>se(y,`tensors${C}`,"raggedTensorToTensor","int32"));return ce.runKernel(sp,{shape:a,values:i,defaultValue:c,rowPartitionTensors:d},{rowPartitionTypes:s})}}),pw=_e({rand_:function kT(n,t,e){Ks(n);const r=ze(n);let s=null;if(null==e||"float32"===e)s=new Float32Array(r);else if("int32"===e)s=new Int32Array(r);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return ce.makeTensor(s,n,e)}});var zc=ft(340);class vm{constructor(t,e,r,s,a){this.mean=t,this.stdDev=e,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=zc.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let t,e,r=!1;for(;!r;){let s,a,i;do{s=2*this.random()-1,a=2*this.random()-1,i=s*s+a*a}while(i>=1||0===i);const c=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*c,e=this.mean+this.stdDev*a*c,(!this.truncated||this.isValidTruncated(t))&&(r=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class MT{constructor(t,e,r,s){this.alpha=t,this.beta=1/e,this.dtype=r;const a=s||Math.random();this.randu=zc.alea(a.toString()),this.randn=new vm(0,1,r,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,r,s,a,i;for(;;){do{s=this.randn.nextValue(),i=1+this.c*s}while(i<=0);if(i*=i*i,t=s*s,e=1-.331*t*t,r=.5*t+this.d*(1-i+Math.log(i)),a=this.randu(),a<e||Math.log(a)<r)break}return i*=1/this.beta*this.d,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class DT{constructor(t=0,e=1,r,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=r,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=zc.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const vw=_e({randomGamma_:function gw(n,t,e=1,r="float32",s){if(Ks(n),null==e&&(e=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new MT(t,e,r,s),i=En(n,r);for(let c=0;c<i.values.length;c++)i.values[c]=a.nextValue();return i.toTensor()}}),Ph=_e({randomNormal_:function FT(n,t=0,e=1,r,s){if(Ks(n),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new vm(t,e,r,!1,s),i=En(n,r);for(let c=0;c<i.values.length;c++)i.values[c]=a.nextValue();return i.toTensor()}}),yw=_e({randomStandardNormal_:function LT(n,t,e){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Ph(n,0,1,t,e)}}),fl=_e({randomUniform_:function bw(n,t=0,e=1,r="float32",s){Ks(n);const a=En(n,r),i=new DT(t,e,null,s);for(let c=0;c<a.values.length;c++)a.values[c]=i.nextValue();return a.toTensor()}});function hl(n,t,e=1,r="float32"){if(0===e)throw new Error("Cannot have a step of zero");return ce.runKernel(ap,{},{start:n,stop:t,step:e,dtype:r})}const Ty=_e({reciprocal_:function xw(n){const e={x:se(n,"x","reciprocal")};return ce.runKernel(mr,e)}}),Oi=_e({relu_:function BT(n){const e={x:se(n,"x","relu")};return ce.runKernel(hn,e)}}),ym=_e({relu6_:function ww(n){const e={x:se(n,"x","relu6")};return ce.runKernel(Wu,e)}}),Xa=_e({reverse_:function PT(n,t){const r={x:se(n,"x","reverse")};return ce.runKernel(op,r,{dims:t})}}),Sw=_e({reverse1d_:function Nw(n){const t=se(n,"x","reverse");return q(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Xa(t,0)}}),Ay=_e({reverse2d_:function zT(n,t){const e=se(n,"x","reverse");return q(2===e.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Xa(e,t)}}),Iw=_e({reverse3d_:function Cw(n,t){const e=se(n,"x","reverse");return q(3===e.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Xa(e,t)}}),Ey=_e({reverse4d_:function VT(n,t){const e=se(n,"x","reverse");return q(4===e.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Xa(e,t)}}),bm=_e({round_:function UT(n){const e={x:se(n,"x","round")};return ce.runKernel(Wf,e)}}),xm=_e({rsqrt_:function _w(n){const e={x:se(n,"x","rsqrt","float32")};return ce.runKernel(pc,e)}}),zh=_e({selu_:function WT(n){const e={x:se(n,"x","selu")};return ce.runKernel(qf,e)}}),wm=_e({separableConv2d_:function GT(n,t,e,r,s,a=[1,1],i="NHWC"){const c=se(n,"x","separableConv2d"),d=se(t,"depthwiseFilter","separableConv2d"),m=se(e,"pointwiseFilter","separableConv2d");let g=c,y=!1;if(3===c.rank&&(y=!0,g=$e(c,[1,c.shape[0],c.shape[1],c.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");q(4===g.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${g.rank}.`),q(4===d.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`),q(4===m.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`),q(1===m.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${m.shape[0]}.`),q(1===m.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${m.shape[1]}.`);const C=d.shape[2],T=d.shape[3];q(m.shape[2]===C*T,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${C*T}, but got ${m.shape[2]}.`);const k=Fc(g,d,r,s,i,a),M=So(k,m,1,"valid",i);return y?$e(M,[M.shape[1],M.shape[2],M.shape[3]]):M}});function ky(){return(ky=(0,Fe.Z)(function*(n,t){const e=se(n,"x","setdiff1d"),r=se(t,"y","setdiff1d");q(e.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${r.dtype}).`),q(1===e.rank,()=>`x should be 1D tensor, but got x (${e.shape}).`),q(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=yield e.data(),a=yield r.data(),i=new Set(a);let c=0;for(let g=0;g<s.length;g++)i.has(s[g])||c++;const d=new Jr([c],e.dtype),m=new Jr([c],"int32");for(let g=0,y=0;g<s.length;g++)i.has(s[g])||(d.values[y]=s[g],m.values[y]=g,y++);return[d.toTensor(),m.toTensor()]})).apply(this,arguments)}const Aw=function Tw(n,t){return ky.apply(this,arguments)},My=_e({sign_:function Nm(n){const e={x:se(n,"x","sign")};return ce.runKernel(pe,e)}}),Dy=_e({sin_:function qT(n){const e={x:se(n,"x","sin","float32")};return ce.runKernel(Kf,e)}}),Sm=_e({sinh_:function Ew(n){const e={x:se(n,"x","sinh")};return ce.runKernel(Gu,e)}}),Vc=_e({slice1d_:function HT(n,t,e){const r=se(n,"x","slice1d");return q(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),qn(r,[t],[e])}}),Cm=_e({slice2d_:function KT(n,t,e){const r=se(n,"x","slice2d");return q(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),qn(r,t,e)}}),Vh=_e({slice3d_:function ZT(n,t,e){const r=se(n,"x","slice3d");return q(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),qn(r,t,e)}}),dl=_e({slice4d_:function Ry(n,t,e){const r=se(n,"x","slice4d");return q(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),qn(r,t,e)}}),Uh=_e({softmax_:function jT(n,t=-1){const e=se(n,"logits","softmax","float32");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);return ce.runKernel(Jf,{logits:e},{dim:t})}}),Wh=_e({fft_:function kw(n){return q("complex64"===n.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`),ce.runKernel(Hd,{input:n})}}),pl=_e({ifft_:function XT(n){return q("complex64"===n.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`),ce.runKernel(jd,{input:n})}}),Im=_e({irfft_:function YT(n){const t=n.shape[n.shape.length-1],e=n.size/t;let r;if(t<=2){const s=$e(n,[e,t]);r=pl(s)}else{const s=[e,2*(t-1)],a=$e(Rc(n),[e,t]),i=$e(yh(n),[e,t]),c=Xa(qn(a,[0,1],[e,t-2]),1),d=Ce(Xa(qn(i,[0,1],[e,t-2]),1),ln(-1)),m=$r([a,c],1),g=$r([i,d],1),y=$e(po(m,g),[s[0],s[1]]);r=pl(y)}if(r=Rc(r),3===n.rank&&0!==n.shape[0]){const s=r,a=n.shape[0];r=$e(r,[a,r.shape[0]/a,r.shape[1]]),s.dispose()}return r}}),ca=_e({split_:function Mw(n,t,e=0){const s={x:se(n,"x","split")};return ce.runKernel(Yf,s,{numOrSizeSplits:t,axis:e})}}),Uc=_e({rfft_:function JT(n,t){q("float32"===n.dtype,()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const r=n.size/e;let s;if(null!=t&&t<e){const k=n.shape.map(M=>0),D=n.shape.map(M=>M);D[n.shape.length-1]=t,s=qn(n,k,D),e=t}else if(null!=t&&t>e){const k=n.shape.map(D=>D);k[n.shape.length-1]=t-e,s=$r([n,ns(k)],n.shape.length-1),e=t}else s=n;const a=Gn(s),i=$e(po(s,a),[r,e]),c=Wh(i),d=Math.floor(e/2)+1,m=Rc(c),g=yh(c),y=ca(m,[d,e-d],m.shape.length-1),C=ca(g,[d,e-d],g.shape.length-1),T=s.shape.slice();return T[s.shape.length-1]=d,$e(po(y[0],C[0]),T)}}),_m=_e({squaredDifference_:function QT(n,t){let e=se(n,"a","squaredDifference"),r=se(t,"b","squaredDifference");return[e,r]=Dr(e,r),An(e.shape,r.shape),ce.runKernel(vc,{a:e,b:r},{})}}),pu=_e({squeeze_:function Dw(n,t){const e=se(n,"x","squeeze","string_or_numeric");return $e(e,Ea(e.shape,t).newShape)}}),xa=_e({stack_:function eA(n,t=0){const e=ch(n,"tensors","stack","string_or_numeric");return q(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&q(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),ce.runKernel(Bf,e,{axis:t})}}),ml=_e({step_:function tA(n,t=0){const r={x:se(n,"x","step")};return ce.runKernel(wc,r,{alpha:t})}}),Tm=_e({stridedSlice_:function $y(n,t,e,r,s=0,a=0,i=0,c=0,d=0){const g={x:se(n,"x","stridedSlice","string_or_numeric")};return ce.runKernel(fp,g,{begin:t,end:e,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:c,shrinkAxisMask:d})}}),Oy=_e({tan_:function nA(n){const e={x:se(n,"x","tan","float32")};return ce.runKernel(xc,e)}});function rs(n,t){rn(n);const e=Ai(n,t);if(1!==e.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return eu(n,null,e,t)}function _o(n,t,e){if(rn(n),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ai(n,e);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return eu(n,t,r,e)}function Rw(n,t,e){if(rn(n),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ai(n,e);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return eu(n,t,r,e)}function $w(n,t,e){if(rn(n),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ai(n,e);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return eu(n,t,r,e)}function Fy(n,t,e){if(rn(n),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ai(n,e);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return eu(n,t=t||r,r,e)}const Ow=_e({tensorScatterUpdate_:function rA(n,t,e){const r=se(n,"tensor","tensorScatterupdate"),s=se(t,"indices","tensorScatterupdate","int32"),a=se(e,"updates","tensorScatterupdate");if(bh(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);return ce.runKernel(Yg,{tensor:r,indices:s,updates:a},{})}}),Ly=_e({topk_:function Fw(n,t=1,e=!0){const r=se(n,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:e},[c,d]=ce.runKernel(dp,a,i);return{values:c,indices:d}}}),Gh=_e({truncatedNormal_:function sA(n,t=0,e=1,r,s){if(Ks(n),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new vm(t,e,r,!0,s),i=En(n,r);for(let c=0;c<i.values.length;c++)i.values[c]=a.nextValue();return i.toTensor()}}),By=_e({unique_:function aA(n,t=0){const e=se(n,"x","unique","string_or_numeric");q(e.rank>0,()=>"The input tensor must be at least 1D");const r={x:e},s={axis:t},[a,i]=ce.runKernel(pp,r,s);return{values:a,indices:i}}}),Am=_e({unsortedSegmentSum_:function Lw(n,t,e){const r=se(n,"x","unsortedSegmentSum"),s=se(t,"segmentIds","unsortedSegmentSum","int32");return q(bn(e),()=>"numSegments must be of dtype int"),ce.runKernel(Rs,{x:r,segmentIds:s},{numSegments:e})}}),za=_e({unstack_:function iA(n,t=0){const e=se(n,"x","unstack","string_or_numeric");return q(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`),ce.runKernel(Qf,{value:e},{axis:t})}});function Bw(n,t){return hm(n,t,"right")}function Py(n,t=!0,e,r){return ce.makeVariable(n,t,e,r)}function qh(n,t){const e=[];for(let a=0;a<t.length;a++)t[a]&&e.push(a);const r=En(n,"int32"),s=En([e.length,n.length],"int32");for(let a=0;a<e.length;a++){const i=r.indexToLoc(e[a]);s.values.set(i,a*n.length)}return s.toTensor()}function zy(){return(zy=(0,Fe.Z)(function*(n){const t=se(n,"condition","whereAsync","bool"),e=yield t.data(),r=qh(t.shape,e);return n!==t&&t.dispose(),r})).apply(this,arguments)}const mu=function oA(n){return zy.apply(this,arguments)};function Vy(){return(Vy=(0,Fe.Z)(function*(n,t,e){const r=se(n,"tensor","boolMask"),s=se(t,"mask","boolMask","bool"),a=null==e?0:e,i=s.rank,c=r.shape;q(i>0,()=>"mask cannot be scalar"),Ft(c.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let d=1;for(let D=a;D<a+i;D++)d*=c[D];const m=c.slice(0,a).concat([d],c.slice(a+i)),g=$e(r,m),y=$e(s,[-1]),C=yield mu(y),T=pu(C,[1]),k=Pc(g,T,a);return n!==r&&r.dispose(),t!==s&&s.dispose(),T.dispose(),g.dispose(),y.dispose(),C.dispose(),k})).apply(this,arguments)}const Pw=function uA(n,t,e){return Vy.apply(this,arguments)},Vw=_e({movingAverage_:function zw(n,t,e,r,s=!0){const a=se(n,"v","movingAverage"),i=se(t,"x","movingAverage"),c=se(e,"decay","movingAverage");ux(a,i),q(_t(a.shape,i.shape),()=>"Shape mismatch in v and x");const d=ln(1),m=Ht(d,c);let g=Ce(Ht(i,a),m);if(s){q(null!=r,()=>"When using zeroDebias: true, step is required.");const y=se(r,"step","movingAverage");g=nn(g,Ht(d,yo(c,y)))}return Nt(a,g)}}),gl=_e({scatterND_:function lA(n,t,e){Ks(e);const r=se(n,"indices","scatterND","int32"),s=se(t,"updates","scatterND");return bh(s,r,e),ce.runKernel(Qn,{indices:r,updates:s},{shape:e})}}),Ww=_e({sparseToDense_:function cA(n,t,e,r=0){Ks(e);const s=se(n,"sparseIndices","sparseToDense","int32"),a=se(t,"sparseValues","sparseToDense","string_or_numeric"),i=se(r,"defaultValue","sparseToDense",a.dtype);return function Uw(n,t,e,r){if("int32"!==n.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,a=n.rank>1?n.shape[1]:1;if(e.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${a}.`);if(0!==t.rank&&(1!==t.rank||t.size!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,e,i),ce.runKernel(pi,{sparseIndices:s,sparseValues:a,defaultValue:i},{outputShape:e})}}),qw=_e({gatherND_:function Gw(n,t){const e=se(t,"indices","gatherND","int32"),s={params:se(n,"x","gatherND","string_or_numeric"),indices:e};return ce.runKernel(Zd,s)}}),Hh=_e({dropout_:function t$(n,t,e,r){const s=se(n,"x","dropout");if(q("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),q(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return n instanceof jn?s.clone():s;const a=function fA(n,t){if(null==t)return n.shape.slice();if(_t(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let r=0;r<n.shape.length;r++)e.push(null==t[r]&&null!=n.shape[r]?n.shape[r]:t[r]);return e}return t}(s,e),i=1-t,c=nn(Bc(Nt(fl(a,0,1,"float32",r),i)),i);return Ce(s,c)}});function Uy(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Em(n,t,e){const r=1-n%2,s=new Float32Array(n);for(let a=0;a<n;++a){const i=2*Math.PI*a/(n+r-1);s[a]=t-e*Math.cos(i)}return rs(s,"float32")}function km(){return(km=(0,Fe.Z)(function*(n,t,e=1){const r=se(n,"predictions","inTopK"),s=se(t,"targets","inTopK");q(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),q(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Ft(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];q(e>0&&e<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${e}`);const i=yield r.data(),c=yield s.data(),[d,m]=[i.length/a,a],g=jr("bool",d);for(let y=0;y<d;y++){const C=y*m,T=i.subarray(C,C+m),k=[];for(let D=0;D<T.length;D++)k.push({value:T[D],index:D});k.sort((D,M)=>M.value-D.value),g[y]=0;for(let D=0;D<e;D++)if(k[D].index===c[y]){g[y]=1;break}}return n!==r&&r.dispose(),t!==s&&s.dispose(),aa(g,s.shape,"bool")})).apply(this,arguments)}const Hw=function n$(n,t){return km.apply(this,arguments)},Mm=_e({conv2DBackpropFilter_:function hA(n,t,e,r,s,a="NHWC",i){let c=n;3===n.rank&&(c=$e(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let d=t;3===d.rank&&(d=$e(t,[1,t.shape[0],t.shape[1],t.shape[2]])),q(4===c.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${c.shape}.`),q(4===d.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`),q(4===e.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const m="NHWC"===a?c.shape[3]:c.shape[1],g="NHWC"===a?d.shape[3]:d.shape[1];return q(m===e[2],()=>`Error in conv2dDerFilter: depth of input ${m}) must match input depth in filter (${e[2]}.`),q(g===e[3],()=>`Error in conv2dDerFilter: depth of dy (${g}) must match output depth for filter (${e[3]}).`),$s("conv2dDerFilter",s,i),ce.runKernel(fi,{x:c,dy:d},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:e})}});function Dm(n,t,e){if(null==e||"linear"===e)return n;if("relu"===e)return Ce(n,ml(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Rm(n,t){let e=t;const r=Ur(n.shape,t.shape);return r.length>0&&(e=Kt(e,r)),$e(e,n.shape)}function Kh(n,t,e,r){if("linear"===t)return n;if("relu"===t)return Oi(n);if("elu"===t)return il(n);if("relu6"===t)return ym(n);if("prelu"===t)return Bh(n,e);if("leakyrelu"===t)return Rh(n,r);if("sigmoid"===t)return Za(n);throw new Error(`Unknown fused activation ${t}.`)}const $m=(n,t)=>!(n>0)||"linear"===t,Kw=_e({fusedConv2d_:function dA({x:n,filter:t,strides:e,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:c,activation:d="linear",preluActivationWeights:m,leakyreluAlpha:g}){if(!1===$m(ce.state.gradientDepth,d=d||"linear")){q("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let ae=So(n,t,e,r,s,a,i);return null!=c&&(ae=Nt(ae,c)),Kh(ae,d,m,g)}const y=se(n,"x","conv2d","float32"),C=se(t,"filter","conv2d","float32");let T=y,k=!1;3===y.rank&&(k=!0,T=$e(y,[1,y.shape[0],y.shape[1],y.shape[2]])),q(4===T.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${T.rank}.`),q(4===C.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${C.rank}.`),$s("fused conv2d",r,i);const D="NHWC"===s?T.shape[3]:T.shape[1];q(C.shape[2]===D,()=>`Error in conv2d: depth of input (${D}) must match input depth for filter ${C.shape[2]}.`),q(ds(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);const M=Rr(T.shape,C.shape,e,a,r,i);let R,$;if(null!=c&&(R=se(c,"bias","fused conv2d"),[R]=Dr(R,y),"NHWC"===s?An(M.outShape,R.shape):(q(R.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${R.shape.length}.`),q(0===R.shape.length||R.shape[0]===M.outChannels||1===R.shape[0],()=>`Error in fused conv2d: bias shape (${R.shape}) is not compatible with the number of output channels (${M.outChannels})`))),null!=m){const ae=m.shape;if(q(ae.length<=1||3===ae.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${ae.length}.`),1===ae.length)q(1===ae[0]||ae[0]===M.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${ae}) is not compatible with the number of output channels (${M.outChannels}).`);else if(3===ae.length)try{An(ae,M.outShape)}catch(le){throw Error(`Error in fused conv2d: PReLU activation weights (${ae}) is not compatible with the output shape of the conv2d (${M.outShape}).`)}$=se(m,"prelu weights","fused conv2d")}const V=(ae,le)=>{q("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[he,Ae,ke,Ue]=le,Je=Dm(ae,ke,d);q(lu(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const ot=[ry(Ae.shape,Je,he,e,r),Mm(Ae,Je,he.shape,e,r)];if(null!=Ue){const ct=Rm(Ue,Je);ot.push(ct)}return ot},G={x:T,filter:C,bias:R,preluActivationWeights:$},K={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:g};return null==c?Mi((le,he,Ae)=>{let ke=ce.runKernel(nh,G,K);return Ae([he,le,ke]),k&&(ke=$e(ke,[ke.shape[1],ke.shape[2],ke.shape[3]])),{value:ke,gradFunc:V}})(T,C):Mi((le,he,Ae,ke)=>{let Ue=ce.runKernel(nh,G,K);return ke([he,le,Ue,Ae]),k&&(Ue=$e(Ue,[Ue.shape[1],Ue.shape[2],Ue.shape[3]])),{value:Ue,gradFunc:V}})(T,C,R)}}),Wy=_e({depthwiseConv2dNativeBackpropFilter_:function pA(n,t,e,r,s,a=[1,1],i){let c=n;3===n.rank&&(c=$e(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let d=t;return 3===d.rank&&(d=$e(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ce.runKernel(Pd,{x:c,dy:d},{strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:e})}}),jw=_e({depthwiseConv2dNativeBackpropInput_:function Zw(n,t,e,r,s,a=[1,1],i){let c=t,d=!1;3===t.rank&&(d=!0,c=$e(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const y=ce.runKernel(zd,{dy:c,filter:e},{strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:n});return d?$e(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),Xw=_e({fusedDepthwiseConv2d_:function mA({x:n,filter:t,strides:e,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:c,activation:d="linear",preluActivationWeights:m,leakyreluAlpha:g}){if(!1===$m(ce.state.gradientDepth,d)){let K=Fc(n,t,e,r,s,a,i);return null!=c&&(K=Nt(K,c)),Kh(K,d,m,g)}const y=se(n,"x","depthwiseConv2d","float32"),C=se(t,"filter","depthwiseConv2d","float32");let T=y,k=!1;3===y.rank&&(k=!0,T=$e(y,[1,y.shape[0],y.shape[1],y.shape[2]])),q(4===T.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${T.rank}.`),q(4===C.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${C.rank}.`),q(T.shape[3]===C.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${T.shape[3]}) must match the inChannels dimension in filter ${C.shape[2]}.`),null==a&&(a=[1,1]),q(ds(e,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),$s("fused depthwiseConv2d",r,i);const D=Rr(T.shape,C.shape,e,a,r,i,!0);let M,R;null!=c&&(M=se(c,"bias","fused conv2d"),[M]=Dr(M,y),An(D.outShape,M.shape)),null!=m&&(R=se(m,"prelu weights","fused depthwiseConv2d"));const $=(K,ae)=>{q(lu(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[le,he,Ae,ke]=ae,Ue=Dm(K,Ae,d),Je=jw(he.shape,Ue,le,e,r,a,i),st=Wy(he,Ue,le.shape,e,r,a,i);return null!=ke?[Je,st,Rm(M,Ue)]:[Je,st]},V={x:T,filter:C,bias:M,preluActivationWeights:R},G={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:g};return null==c?Mi((ae,le,he)=>{let Ae=ce.runKernel(rh,V,G);return he([le,ae,Ae]),k&&(Ae=$e(Ae,[Ae.shape[1],Ae.shape[2],Ae.shape[3]])),{value:Ae,gradFunc:$}})(T,C):Mi((ae,le,he,Ae)=>{let ke=ce.runKernel(rh,V,G);return Ae([le,ae,ke,he]),k&&(ke=$e(ke,[ke.shape[1],ke.shape[2],ke.shape[3]])),{value:ke,gradFunc:$}})(T,C,M)}}),Gy=_e({fusedMatMul_:function gA({a:n,b:t,transposeA:e=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}){if(!1===$m(ce.state.gradientDepth,a)){let Ue=Rn(n,t,e,r);return null!=s&&(Ue=Nt(Ue,s)),Kh(Ue,a,i,c)}let d=se(n,"a","fused matMul"),m=se(t,"b","fused matMul");[d,m]=Dr(d,m);const g=e?d.shape[d.rank-2]:d.shape[d.rank-1],y=r?m.shape[m.rank-1]:m.shape[m.rank-2],C=e?d.shape[d.rank-1]:d.shape[d.rank-2],T=r?m.shape[m.rank-2]:m.shape[m.rank-1],k=d.shape.slice(0,-2),D=m.shape.slice(0,-2),M=ze(k),R=ze(D);q(g===y,()=>`Error in fused matMul: inner shapes (${g}) and (${y}) of Tensors with shapes ${d.shape} and ${m.shape} and transposeA=${e} and transposeB=${r} must match.`);const V=An(d.shape.slice(0,-2),m.shape.slice(0,-2)).concat([C,T]),G=$e(d,e?[M,g,C]:[M,C,g]),K=$e(m,r?[R,T,y]:[R,y,T]);let ae,le;null!=s&&(ae=se(s,"bias","fused matMul"),[ae]=Dr(ae,d),An(V,ae.shape)),null!=i&&(le=se(i,"prelu weights","fused matMul"));const he=(Ue,Je)=>{const[st,at,ot,ct]=Je,pt=Dm($e(Ue,ot.shape),ot,a);let ut,gt;return e||r?!e&&r?(ut=Rn(pt,at,!1,!1),gt=Rn(pt,st,!0,!1)):e&&!r?(ut=Rn(at,pt,!1,!0),gt=Rn(st,pt,!1,!1)):(ut=Rn(at,pt,!0,!0),gt=Rn(pt,st,!0,!0)):(ut=Rn(pt,at,!1,!0),gt=Rn(st,pt,!0,!1)),null!=s?[ut,gt,Rm(ct,pt)]:[ut,gt]},Ae={a:G,b:K,bias:ae,preluActivationWeights:le},ke={transposeA:e,transposeB:r,activation:a,leakyreluAlpha:c};return null==s?Mi((Je,st,at)=>{const ot=ce.runKernel(Nc,Ae,ke);return at([Je,st,ot]),{value:$e(ot,V),gradFunc:he}})(G,K):Mi((Je,st,at,ot)=>{const ct=ce.runKernel(Nc,Ae,ke);return ot([Je,st,ct,at]),{value:$e(ct,V),gradFunc:he}})(G,K,ae)}}),vA=_e({hammingWindow_:function Yw(n){return Em(n,.54,.46)}}),vl=_e({hannWindow_:function yA(n){return Em(n,.5,.5)}}),Qw=_e({frame_:function Jw(n,t,e,r=!1,s=0){let a=0;const i=[];for(;a+t<=n.size;)i.push(qn(n,a,t)),a+=e;if(r)for(;a<n.size;){const c=a+t-n.size,d=$r([qn(n,a,t-c),su([c],s)]);i.push(d),a+=e}return 0===i.length?_o([],[0,t]):$e($r(i),[i.length,t])}}),xA=_e({stft_:function bA(n,t,e,r,s=vl){null==r&&(r=Uy(t));const a=Qw(n,t,e),i=Ce(a,s(t));return Uc(i,r)}}),wA=_e({cropAndResize_:function Om(n,t,e,r,s="bilinear",a=0){const i=se(n,"image","cropAndResize"),c=se(t,"boxes","cropAndResize","float32"),d=se(e,"boxInd","cropAndResize","int32"),m=c.shape[0];return q(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),q(2===c.rank&&4===c.shape[1],()=>`Error in cropAndResize: boxes must be have size [${m},4] but had shape ${c.shape}.`),q(1===d.rank&&d.shape[0]===m,()=>`Error in cropAndResize: boxInd must be have size [${m}] but had shape ${c.shape}.`),q(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),q(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),q("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`),ce.runKernel(bf,{image:i,boxes:c,boxInd:d},{method:s,extrapolationValue:a,cropSize:r})}}),eN=_e({flipLeftRight_:function NA(n){const t=se(n,"image","flipLeftRight","float32");return q(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),ce.runKernel(Cf,{image:t},{})}}),CA=_e({grayscaleToRGB_:function SA(n){const t=se(n,"image","grayscaleToRGB"),e=t.rank-1,r=t.shape[e];q(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),q(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(t.rank);return s.fill(1,0,e),s[e]=3,Ba(t,s)}}),IA=_e({rotateWithOffset_:function tN(n,t,e=0,r=.5){const s=se(n,"image","rotateWithOffset","float32");return q(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`),ce.runKernel(mp,{image:s},{radians:t,fillValue:e,center:r})}});function Wc(n,t,e,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=n.shape[0];return e=Math.min(e,i),q(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),q(2===n.rank,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),q(4===n.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),q(1===t.rank,()=>"scores must be a 1D tensor"),q(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),q(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:e,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const _A=_e({nonMaxSuppression_:function nN(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY){const a=se(n,"boxes","nonMaxSuppression","float32"),i=se(t,"scores","nonMaxSuppression","float32"),c=Wc(a,i,e,r,s);return ce.runKernel(Qd,{boxes:a,scores:i},{maxOutputSize:e=c.maxOutputSize,iouThreshold:r=c.iouThreshold,scoreThreshold:s=c.scoreThreshold})}});function TA(n,t,e){const r=function rN(n,t,e){return function EA(n,t,e){let r=0,s=n.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const c=e(t,n[a]);c>0?r=a+1:(s=a,i=!c)}return i?r:-r-1}(n,t,e||AA)}(n,t,e);n.splice(r<0?-(r+1):r,0,t)}function AA(n,t){return n>t?1:n<t?-1:0}function Gc(n,t,e,r,s){return qy(n,t,e,r,s,0)}function Fm(n,t,e,r,s,a){return qy(n,t,e,r,s,0,!1,a,!0)}function Lm(n,t,e,r,s,a){return qy(n,t,e,r,s,a,!0)}function qy(n,t,e,r,s,a,i=!1,c=!1,d=!1){const m=[];for(let M=0;M<t.length;M++)t[M]>s&&m.push({score:t[M],boxIndex:M,suppressBeginIndex:0});m.sort(aN);const g=a>0?-.5/a:0,y=[],C=[];for(;y.length<e&&m.length>0;){const M=m.pop(),{score:R,boxIndex:$,suppressBeginIndex:V}=M;if(R<s)break;let G=!1;for(let K=y.length-1;K>=V;--K){const ae=sN(n,$,y[K]);if(ae>=r){G=!0;break}if(M.score=M.score*kA(r,g,ae),M.score<=s)break}M.suppressBeginIndex=y.length,G||(M.score===R?(y.push($),C.push(M.score)):M.score>s&&TA(m,M,aN))}const T=y.length,k=e-T;c&&k>0&&(y.push(...new Array(k).fill(0)),C.push(...new Array(k).fill(0)));const D={selectedIndices:y};return i&&(D.selectedScores=C),d&&(D.validOutputs=T),D}function sN(n,t,e){const r=n.subarray(4*t,4*t+4),s=n.subarray(4*e,4*e+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),c=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),m=Math.min(s[0],s[2]),g=Math.min(s[1],s[3]),y=Math.max(s[0],s[2]),C=Math.max(s[1],s[3]),T=(c-a)*(d-i),k=(y-m)*(C-g);if(T<=0||k<=0)return 0;const D=Math.max(a,m),M=Math.max(i,g),R=Math.min(c,y),$=Math.min(d,C),V=Math.max(R-D,0)*Math.max($-M,0);return V/(T+k-V)}function kA(n,t,e){const r=Math.exp(t*e*e);return e<=n?r:0}function aN(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}function Hy(){return(Hy=(0,Fe.Z)(function*(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY){const a=se(n,"boxes","nonMaxSuppressionAsync"),i=se(t,"scores","nonMaxSuppressionAsync"),c=Wc(a,i,e,r,s);e=c.maxOutputSize,r=c.iouThreshold,s=c.scoreThreshold;const d=yield Promise.all([a.data(),i.data()]),m=d[0],g=d[1],{selectedIndices:y}=Gc(m,g,e,r,s);return a!==n&&a.dispose(),i!==t&&i.dispose(),rs(y,"int32")})).apply(this,arguments)}const DA=_e({nonMaxSuppressionWithScore_:function oN(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=se(n,"boxes","nonMaxSuppression"),c=se(t,"scores","nonMaxSuppression"),d=Wc(i,c,e,r,s,a),y=ce.runKernel(tp,{boxes:i,scores:c},{maxOutputSize:e=d.maxOutputSize,iouThreshold:r=d.iouThreshold,scoreThreshold:s=d.scoreThreshold,softNmsSigma:a=d.softNmsSigma});return{selectedIndices:y[0],selectedScores:y[1]}}});function uN(){return(uN=(0,Fe.Z)(function*(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=se(n,"boxes","nonMaxSuppressionAsync"),c=se(t,"scores","nonMaxSuppressionAsync"),d=Wc(i,c,e,r,s,a);e=d.maxOutputSize,r=d.iouThreshold,s=d.scoreThreshold,a=d.softNmsSigma;const m=yield Promise.all([i.data(),c.data()]),g=m[0],y=m[1],{selectedIndices:C,selectedScores:T}=Lm(g,y,e,r,s,a);return i!==n&&i.dispose(),c!==t&&c.dispose(),{selectedIndices:rs(C,"int32"),selectedScores:rs(T)}})).apply(this,arguments)}const OA=_e({nonMaxSuppressionPadded_:function $A(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=se(n,"boxes","nonMaxSuppression"),c=se(t,"scores","nonMaxSuppression"),d=Wc(i,c,e,r,s,null),k=ce.runKernel(ep,{boxes:i,scores:c},{maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:a});return{selectedIndices:k[0],validOutputs:k[1]}}});function Ky(){return(Ky=(0,Fe.Z)(function*(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=se(n,"boxes","nonMaxSuppressionAsync"),c=se(t,"scores","nonMaxSuppressionAsync"),d=Wc(i,c,e,r,s,null),m=d.maxOutputSize,g=d.iouThreshold,y=d.scoreThreshold,[C,T]=yield Promise.all([i.data(),c.data()]),{selectedIndices:k,validOutputs:D}=Fm(C,T,m,g,y,a);return i!==n&&i.dispose(),c!==t&&c.dispose(),{selectedIndices:rs(k,"int32"),validOutputs:ln(D,"int32")}})).apply(this,arguments)}const hN=_e({resizeBilinear_:function fN(n,t,e=!1,r=!1){const s=se(n,"images","resizeBilinear");q(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),q(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),q(!1===r||!1===e,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=$e(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,m=ce.runKernel(jo,{images:a},{alignCorners:e,halfPixelCenters:r,size:t});return i?$e(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Zy=_e({resizeNearestNeighbor_:function LA(n,t,e=!1,r=!1){const s=se(n,"images","resizeNearestNeighbor");q(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),q(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),q("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),q(!1===r||!1===e,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=$e(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,m=ce.runKernel(Uu,{images:a},{alignCorners:e,halfPixelCenters:r,size:t});return i?$e(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),dN=_e({threshold_:function BA(n,t="binary",e=!1,r=.5){const s=se(n,"image","threshold"),d=s.shape[0]*s.shape[1];let g,y,C,T,m=Ce(rs([r]),255);if(q(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),q(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),q("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),q("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===s.shape[2]){[g,y,C]=ca(s,[1,1,1],-1);const M=Ce(g,.2989),R=Ce(y,.587),$=Ce(C,.114);T=Nt(Nt(M,R),$)}else T=n;"otsu"===t&&(m=function PA(n,t){let a,i,c,d,m,g,e=rs([-1]),r=rs([0]),s=rs([0]);for(let y=0;y<n.size-1;y++){a=qn(n,0,y+1),i=qn(n,y+1),m=nn(Kt(a),t),g=nn(Kt(i),t);const C=Kt(Ce(a,hl(0,a.size)));c=nn(C,Kt(a));const T=su(i.shape,a.size),k=Nt(hl(0,i.size),T),D=Ce(i,k);d=nn(Kt(D),Kt(i));const M=Ht(c,d),R=Ht(c,d),$=Ce(m,g);s=Ce(Ce($,M),R);const V=Fs(s,r);r=ps(V,s,r),e=ps(V,rs([y]),e)}return e}(Qv(Lt(bm(T),"int32"),aa([]),256),d));const k=e?hu(T,m):Fs(T,m);return Lt(Ce(k,255),"int32")}}),VA=_e({transform_:function zA(n,t,e="nearest",r="constant",s=0,a){const i=se(n,"image","transform","float32"),c=se(t,"transforms","transform","float32");return q(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),q(2===c.rank&&(c.shape[0]===i.shape[0]||1===c.shape[0])&&8===c.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),q(null==a||2===a.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`),ce.runKernel(Ku,{image:i,transforms:c},{interpolation:e,fillMode:r,fillValue:s,outputShape:a})}}),UA=_e({bandPart_:function pN(n,t,e){const r=se(n,"a","bandPart");q(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);let c,d;"number"==typeof t?(q(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),q(t<=a,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`),c=se(t<0?a:t,"numLower","bandPart")):(q("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),c=ps(ul(t,0),a,du(t,a))),"number"==typeof e?(q(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),q(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),d=se(e<0?i:e,"numUpper","bandPart")):(q("int32"===e.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),d=ps(ul(e,0),i,du(e,i)));const m=$e(hl(0,a,1,"int32"),[-1,1]),g=hl(0,i,1,"int32"),y=Ht(m,g),C=ja(hu(y,c),Co(y,cr(d))),T=ns([a,i],r.dtype);return $e(xa(za($e(r,[-1,a,i])).map(k=>ps(C,k,T))),s)}}),mN=_e({gramSchmidt_:function WA(n){let t;if(Array.isArray(n)){t=!1,q(null!=n&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let a=1;a<n.length;++a)q(n[a].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[a].shape[0]} vs. ${s})`)}else t=!0,n=ca(n,n.shape[0],0).map(s=>pu(s,[0]));q(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],r=n;for(let s=0;s<n.length;++s)e.push(ce.tidy(()=>{let a=r[s];if(s>0)for(let i=0;i<s;++i){const c=Ce(Kt(Ce(e[i],a)),e[i]);a=Ht(a,c)}return nn(a,ol(a,"euclidean"))}));return t?xa(e,0):e}});function gN(n,t=!1){return ce.tidy(()=>{q(2===n.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],r=n.shape[1];let s=Dh(e),a=ki(n);const i=_o([[1]],[1,1]);let c=ki(i);const d=e>=r?r:e;for(let m=0;m<d;++m){const g=a,y=c,C=s;[c,a,s]=ce.tidy(()=>{const T=qn(a,[m,m],[e-m,1]),k=ol(T),D=qn(a,[m,m],[1,1]),M=ps(Fs(D,0),_o([[-1]]),_o([[1]])),R=Ht(D,Ce(M,k)),$=nn(T,R);c=1===$.shape[0]?ki(i):$r([i,qn($,[1,0],[$.shape[0]-1,$.shape[1]])],0);const V=cr(nn(Rn(M,R),k)),G=qn(a,[m,0],[e-m,r]),K=Ce(V,c),ae=Vn(c);if(0===m)a=Ht(G,Rn(K,Rn(ae,G)));else{const Ae=Ht(G,Rn(K,Rn(ae,G)));a=$r([qn(a,[0,0],[m,r]),Ae],0)}const le=Vn(K),he=qn(s,[0,m],[e,s.shape[1]-m]);if(0===m)s=Ht(he,Rn(Rn(he,c),le));else{const Ae=Ht(he,Rn(Rn(he,c),le));s=$r([qn(s,[0,0],[e,m]),Ae],1)}return[c,a,s]}),Tn([g,y,C])}return!t&&e>r&&(s=qn(s,[0,0],[e,r]),a=qn(a,[0,0],[r,r])),[s,a]})}const vN=_e({qr_:function GA(n,t=!1){if(q(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),2===n.rank)return gN(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((d,m)=>d*m),r=za($e(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],a=[];return r.forEach(d=>{const[m,g]=gN(d,t);s.push(m),a.push(g)}),[$e(xa(s,0),n.shape),$e(xa(a,0),n.shape)]}}});var Bs=(()=>{return(n=Bs||(Bs={}))[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",Bs;var n})();const To=_e({computeWeightedLoss_:function qA(n,t,e=Bs.SUM_BY_NONZERO_WEIGHTS){const r=se(n,"losses","computeWeightedLoss");let s=null;null!=t&&(s=se(t,"weights","computeWeightedLoss"));const a=null==s?r:Ce(r,s);if(e===Bs.NONE)return a;if(e===Bs.SUM)return Kt(a);if(e===Bs.MEAN){if(null==s)return Ir(a);{const i=r.size/s.size,c=nn(Kt(a),Kt(s));return i>1?nn(c,ln(i)):c}}if(e===Bs.SUM_BY_NONZERO_WEIGHTS){if(null==s)return nn(Kt(a),ln(r.size));{const i=Ce(s,la(r.shape)),c=Lt(Kt(ll(i,ln(0))),"float32");return nn(Kt(a),c)}}throw Error(`Unknown reduction: ${e}`)}}),HA=_e({absoluteDifference_:function yN(n,t,e,r=Bs.SUM_BY_NONZERO_WEIGHTS){const s=se(n,"labels","absoluteDifference"),a=se(t,"predictions","absoluteDifference");let i=null;null!=e&&(i=se(e,"weights","absoluteDifference")),Ft(s.shape,a.shape,"Error in absoluteDifference: ");const c=es(Ht(s,a));return To(c,i,r)}}),ZA=_e({cosineDistance_:function KA(n,t,e,r,s=Bs.SUM_BY_NONZERO_WEIGHTS){const a=se(n,"labels","cosineDistance"),i=se(t,"predictions","cosineDistance");let c=null;null!=r&&(c=se(r,"weights","cosineDistance")),Ft(a.shape,i.shape,"Error in cosineDistance: ");const d=ln(1),m=Ht(d,Kt(Ce(a,i),e,!0));return To(m,c,s)}}),jA=_e({hingeLoss_:function gu(n,t,e,r=Bs.SUM_BY_NONZERO_WEIGHTS){let s=se(n,"labels","hingeLoss");const a=se(t,"predictions","hingeLoss");let i=null;null!=e&&(i=se(e,"weights","hingeLoss")),Ft(s.shape,a.shape,"Error in hingeLoss: ");const c=ln(1);s=Ht(Ce(ln(2),s),c);const d=Oi(Ht(c,Ce(s,a)));return To(d,i,r)}}),YA=_e({huberLoss_:function XA(n,t,e,r=1,s=Bs.SUM_BY_NONZERO_WEIGHTS){const a=se(n,"labels","huberLoss"),i=se(t,"predictions","huberLoss");let c=null;null!=e&&(c=se(e,"weights","huberLoss")),Ft(a.shape,i.shape,"Error in huberLoss: ");const d=ln(r),m=es(Ht(i,a)),g=du(m,d),y=Ht(m,g),C=Nt(Ce(ln(.5),ir(g)),Ce(d,y));return To(C,c,s)}}),QA=_e({logLoss_:function JA(n,t,e,r=1e-7,s=Bs.SUM_BY_NONZERO_WEIGHTS){const a=se(n,"labels","logLoss"),i=se(t,"predictions","logLoss");let c=null;null!=e&&(c=se(e,"weights","logLoss")),Ft(a.shape,i.shape,"Error in logLoss: ");const d=ln(1),m=ln(r),g=cr(Ce(a,ya(Nt(i,m)))),y=Ce(Ht(d,a),ya(Nt(Ht(d,i),m))),C=Ht(g,y);return To(C,c,s)}}),tE=_e({meanSquaredError_:function eE(n,t,e,r=Bs.SUM_BY_NONZERO_WEIGHTS){const s=se(n,"labels","meanSquaredError"),a=se(t,"predictions","meanSquaredError");let i=null;null!=e&&(i=se(e,"weights","meanSquaredError")),Ft(s.shape,a.shape,"Error in meanSquaredError: ");const c=_m(s,a);return To(c,i,r)}}),sE=_e({sigmoidCrossEntropy_:function rE(n,t,e,r=0,s=Bs.SUM_BY_NONZERO_WEIGHTS){let a=se(n,"multiClassLabels","sigmoidCrossEntropy");const i=se(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=e&&(c=se(e,"weights","sigmoidCrossEntropy")),Ft(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const m=ln(r),g=ln(1),y=ln(.5);a=Nt(Ce(a,Ht(g,m)),Ce(y,m))}const d=function nE(n,t){const e=se(n,"labels","sigmoidCrossEntropyWithLogits"),r=se(t,"logits","sigmoidCrossEntropyWithLogits");Ft(e.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Oi(r),a=Ce(r,e),i=$h(va(cr(es(r))));return Nt(Ht(s,a),i)}(a,i);return To(d,c,s)}}),xN=_e({softmaxCrossEntropy_:function bN(n,t,e,r=0,s=Bs.SUM_BY_NONZERO_WEIGHTS){let a=se(n,"onehotLabels","softmaxCrossEntropy");const i=se(t,"logits","softmaxCrossEntropy");let c=null;if(null!=e&&(c=se(e,"weights","softmaxCrossEntropy")),Ft(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const m=ln(r),g=ln(1),y=ln(a.shape[1]);a=Nt(Ce(a,Ht(g,m)),nn(m,y))}const d=function jy(n,t,e=-1){if(-1===e&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Mi((s,a,i)=>{const d=ts(a,[e],!0),m=Ht(Lt(a,"float32"),d);i([s,m]);const g=cr(Ce(m,s));return{value:Kt(g,[e]),gradFunc:(T,k)=>{const[D,M]=k,R=Wr(T.shape,[e]);return[Ce($e(T,R),Ht(Lt(D,"float32"),va(M))),Ce($e(T,R),Ht(va(M),Lt(D,"float32")))]}}})(n,t)}(a,i);return To(d,c,s)}}),SN={fft:Wh,ifft:pl,rfft:Uc,irfft:Im},Xy={hammingWindow:vA,hannWindow:vl,frame:Qw,stft:xA},Ya={flipLeftRight:eN,grayscaleToRGB:CA,resizeNearestNeighbor:Zy,resizeBilinear:hN,rotateWithOffset:IA,cropAndResize:wA,nonMaxSuppression:_A,nonMaxSuppressionAsync:function iN(n,t,e){return Hy.apply(this,arguments)},nonMaxSuppressionWithScore:DA,nonMaxSuppressionWithScoreAsync:function RA(n,t,e){return uN.apply(this,arguments)},nonMaxSuppressionPadded:OA,nonMaxSuppressionPaddedAsync:function cN(n,t,e){return Ky.apply(this,arguments)},threshold:dN,transform:VA},Yy={bandPart:UA,gramSchmidt:mN,qr:vN},Jy={absoluteDifference:HA,computeWeightedLoss:To,cosineDistance:ZA,hingeLoss:jA,huberLoss:YA,logLoss:QA,meanSquaredError:tE,sigmoidCrossEntropy:sE,softmaxCrossEntropy:xN},CN={sparseFillEmptyRows:_e({sparseFillEmptyRows_:function aE(n,t,e,r){const s=se(n,"indices","sparseFillEmptyRows","int32"),a=se(t,"values","sparseFillEmptyRows"),i=se(e,"denseShape","sparseFillEmptyRows","int32"),c=se(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const m=ce.runKernel(up,{indices:s,values:a,denseShape:i,defaultValue:c});return{outputIndices:m[0],outputValues:m[1],emptyRowIndicator:m[2],reverseIndexMap:m[3]}}}),sparseReshape:_e({sparseReshape_:function oE(n,t,e){const r=se(n,"inputIndices","sparseReshape","int32"),s=se(t,"inputShape","sparseReshape","int32"),a=se(e,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const c=ce.runKernel(lp,{inputIndices:r,inputShape:s,newShape:a});return{outputIndices:c[0],outputShape:c[1]}}}),sparseSegmentMean:_e({sparseSegmentMean_:function lE(n,t,e){const r=se(n,"data","sparseSegmentMean"),s=se(t,"indices","sparseSegmentMean","int32"),a=se(e,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);return ce.runKernel(Ds,{data:r,indices:s,segmentIds:a})}}),sparseSegmentSum:_e({sparseSegmentSum_:function fE(n,t,e){const r=se(n,"data","sparseSegmentSum"),s=se(t,"indices","sparseSegmentSum","int32"),a=se(e,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);return ce.runKernel(Qt,{data:r,indices:s,segmentIds:a})}})},IN={stringNGrams:_e({stringNGrams_:function wN(n,t,e,r,s,a,i,c){const d=se(n,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const m=se(t,"dataSplits","stringNGrams");if("int32"!==m.dtype)throw new Error("Data splits must be of datatype int32");const C=ce.runKernel(hp,{data:d,dataSplits:m},{separator:e,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:c});return{nGrams:C[0],nGramsSplits:C[1]}}}),stringSplit:_e({stringSplit_:function pE(n,t,e=!0){const r=se(n,"input","stringSplit","string"),s=se(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const c=ce.runKernel(bc,{input:r,delimiter:s},{skipEmpty:e});return{indices:c[0],values:c[1],shape:c[2]}}}),stringToHashBucketFast:_e({stringToHashBucketFast_:function mE(n,t){const e=se(n,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return ce.runKernel(Ii,{input:e},r)}}),staticRegexReplace:_e({staticRegexReplace_:function vE(n,t,e,r=!0){const s=se(n,"input","staticRegexReplace","string");return ce.runKernel(yc,{x:s},{pattern:t,rewrite:e,replaceGlobal:r})}})},Ao=S1,bE="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:n=>n();function Qy(){return new Promise(n=>bE(()=>n()))}function e0(n,t){const e=n[0].length;n.forEach((s,a)=>{q(s.length===e,()=>`Error in concat${e}D: rank of tensors[${a}] must be the same as the rank of the rest (${e})`)}),q(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const r=n[0];n.forEach((s,a)=>{for(let i=0;i<e;i++)q(i===t||s[i]===r[i],()=>`Error in concat${e}D: Shape of tensors[${a}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function yi(n,t){const e=n[0].slice();for(let r=1;r<n.length;r++)e[t]+=n[r][t];return e}var Ja=(()=>{return(n=Ja||(Ja={}))[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS",Ja;var n})();function _N(n,t,e){let r=new Array;if(null==e&&null==t)return r;if(null==t)for(;r.length<n+e.length;)r.push(-1);else r=t.slice();if(null==e)return r;if(n+e.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${r.length}`);for(let s=1;s<e.length;++s){const a=e[s],i=r[r.length-e.length+s],c=r[i];if(a>=0)if(c>=0){if(c!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+n}] = ${a} but shape[${s+n}] = ${c}`)}else r[i]=a}return r}function t0(n){const t={FIRST_DIM_SIZE:Ja.FIRST_DIM_SIZE,VALUE_ROWIDS:Ja.VALUE_ROWIDS,ROW_LENGTHS:Ja.ROW_LENGTHS,ROW_SPLITS:Ja.ROW_SPLITS,ROW_LIMITS:Ja.ROW_LIMITS,ROW_STARTS:Ja.ROW_STARTS},e=[];for(const r of n){if(!(r in t))break;e.push(t[r])}return e}function TN(n){return 0===n.length?0:n[0]===Ja.FIRST_DIM_SIZE?n.length-1:n.length}function AN(n,t){if(null==n||null==t)return;const e=n.length,r=t.length;if(e>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(e,r-1);++s){const a=n[s],i=t[s+1];if(a>=0&&i>=0&&1!==a&&a!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-n.length}] = ${a} but ragged tensor input.flatValues.shape[${s-n.length}] = ${i}`)}}const Bm=30;function Pm(n){return n<=Bm?n:Mu(n,Math.floor(Math.sqrt(n)))}function n0(n,t,e){return[e*("number"==typeof n?n:n[0]),t*("number"==typeof n?n:n[1])]}function qc(n,t,e,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(n[0]/e),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const a=t.length;for(let i=0;i<a;++i)s=s.concat([n[i+1]/t[i],t[i]]);s=s.concat(n.slice(a+1))}return s}function Zh(n,t,e=!0){const r=[];if(e){r.push(t);for(let s=t+1;s<n;++s)s<=2*t?(r.push(s),r.push(s-(t+1))):r.push(s)}else{const s=[],a=[];for(let i=1;i<n;++i)i>=2*t+1||i%2==1?a.push(i):s.push(i);r.push(...s),r.push(0),r.push(...a)}return r}function jh(n,t,e,r=!0){const s=[];s.push(r?n[0]/e:n[0]*e);for(let a=1;a<n.length;++a)s.push(a<=t.length?r?t[a-1]*n[a]:n[a]/t[a-1]:n[a]);return s}function zm(n,t){const e=[0];for(let r=0;r<t;++r)e.push(n[r][0]);return e}function r0(n,t,e){const r=n.slice(0,1);for(let s=0;s<e;++s)r.push(n[s+1]-t[s][0]-t[s][1]);return r}const Vm=1.7580993408473768,Um=1.0507009873554805,s0=.3275911,a0=.254829592,Xh=-.284496736,i0=1.421413741,o0=-1.453152027,u0=1.061405429;function Eo(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(2*n.length);for(let r=0;r<e.length;r+=2)e[r]=n[r/2],e[r+1]=t[r/2];return e}function EN(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)t[r/2]=n[r],e[r/2]=n[r+1];return{real:t,imag:e}}function kN(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<n.length;s+=4)e[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:e,imag:r}}function MN(n){const t=Math.floor(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<n.length;s+=4)e[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:e,imag:r}}function l0(n,t){return{real:n[2*t],imag:n[2*t+1]}}function DN(n,t,e,r){n[2*r]=t,n[2*r+1]=e}function RN(n,t){const e=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const a=(t?2:-2)*Math.PI*(s/n);e[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:e,imag:r}}function $N(n,t,e){const r=(e?2:-2)*Math.PI*(n/t);return{real:Math.cos(r),imag:Math.sin(r)}}const ON=/->/g;function Wm(n,t){const e=((n=n.replace(/\s/g,"")).length-n.replace(ON,"").length)/"->".length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=n.split("->");q(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const c=[];for(let C=0;C<s.length;++C){const T=s[C];if(!a.some(k=>-1!==k.indexOf(T)))throw new Error(`Output subscripts contain the label ${T} not present in the input subscripts.`);-1===c.indexOf(T)&&c.push(T)}for(let C=0;C<r.length;++C){const T=r[C];-1===c.indexOf(T)&&","!==T&&c.push(T)}const d=new Array(a.length);for(let C=0;C<i;++C){if(new Set(a[C].split("")).size!==a[C].length)throw new Error(`Found duplicate axes in input component ${a[C]}. Support for duplicate axes in input is not implemented yet.`);d[C]=[];for(let T=0;T<a[C].length;++T)d[C].push(c.indexOf(a[C][T]))}const m=c.length,y=[];for(let C=s.length;C<m;++C)y.push(C);return{allDims:c,summedDims:y,idDims:d}}function f0(n,t){let e=new Array(n);e.fill(-1);for(let s=0;s<t.length;++s)e[t[s]]=s;const r=[];for(let s=0;s<n;++s)-1===e[s]&&r.push(s);return e=e.filter(s=>-1!==s),{permutationIndices:e,expandDims:r}}function h0(n,t,e){const r=new Array(n);for(let s=0;s<e.length;++s){const a=e[s].shape;for(let i=0;i<t[s].length;++i)void 0===r[t[s][i]]?r[t[s][i]]=a[i]:q(r[t[s][i]]===a[i],()=>`Expected dimension ${r[t[s][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function Gm(n,t){const e=n,r=[];let s=0;0===n.length&&e.push(-1),s=n.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<e.length;++i){const d=xE(t,e[i]);for(const m of d)-1===a.indexOf(m)&&(r[i].push(m),a.push(m))}return{path:e,steps:r}}function d0(n){return n.every((t,e)=>t===e)}function xE(n,t){const e=[];for(let r=0;r<n.length;++r)(0===n[r].length||-1!==n[r].indexOf(t)||-1===t)&&e.push(r);return e}function p0(n,t,e=0){let r=[];if("number"==typeof t)q(n.shape[e]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(n.shape[e]/t);else{q(t.reduce((i,c)=>(-1===c&&(i+=1),i),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const i=t.reduce((c,d)=>d>0?c+d:c);t[a]=n.shape[e]-i}q(n.shape[e]===t.reduce((i,c)=>i+c),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function BN(n){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${n}`}function PN(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function m0(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}function zN(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function VN(n,t){return`size ${n} must be non-negative, not ${t}`}function g0(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function UN(n,t){return`Input to reshape is a SparseTensor with ${ze(n)}\n  dense values, but the requested shape requires a multiple of ${ze(t)}. inputShape=${n} outputShape= ${t}`}function WN(n,t){return`Input to reshape is a tensor with ${ze(n)} dense values, but the requested shape has ${ze(t)}. inputShape=${n} outputShape=${t}`}function qm(){return"segment ids must be >= 0"}function GN(){return"segment ids are not increasing"}function qN(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function v0(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}function HN(n,t){let r,e=!1;for(n<=Bm?(r=n,e=!0):r=Mu(n,Math.floor(Math.sqrt(n)));!e;)r>t||r===n?e=!0:r=Mu(n,r+1);return r}function KN(n,t,e){const r=[],s=n.length;for(let a=0;a<s;a++)r.push(a!==t?n[a]:e);return r}function Hm(n,t,e,r){const s=t.shape.length,a=n.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(e<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${e}).`);for(let y=0;y<r;++y)if(n.shape[y]!==t.shape[y])throw new Error(`x.shape[${y}]: ${n.shape[y]} should be equal to indices.shape[${y}]: ${t.shape[y]}.`);const i=n.shape[e],c=[];let d=1,m=1,g=1;for(let y=0;y<r;++y)c.push(n.shape[y]),d*=n.shape[y];for(let y=r;y<e;y++)c.push(n.shape[y]),m*=n.shape[y];for(let y=r;y<s;y++)c.push(t.shape[y]);for(let y=e+1;y<a;y++)c.push(n.shape[y]),g*=n.shape[y];return{batchSize:d,sliceSize:g,outerSize:m,dimSize:i,outputShape:c}}function ko(n){try{return n.map(t=>fo(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function ZN(n){return n.map(t=>_i(t))}!function Kx(){for(const n of D_)Ct(n)}();const y0={kernelName:Wl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(n,ml(Lt(e,"float32"),-1))}}},wE={kernelName:Yr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=ir(Lt(e,"float32")),s=Is(Ht(ln(1),r));return cr(nn(n,s))}}}},NE={kernelName:Mr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=Is(Ht(ir(Lt(e,"float32")),1));return nn(n,r)}}}},jN={kernelName:Du,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=An(e.shape,r.shape);return{a:()=>{let c=n;const d=Ur(e.shape,s);return d.length>0&&(c=Kt(c,d)),$e(c,e.shape)},b:()=>{let c=n;const d=Ur(r.shape,s);return d.length>0&&(c=Kt(c,d)),$e(c,r.shape)}}}},SE={kernelName:pf,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((r,s)=>{e[s]=()=>n.clone()}),e}},CE={kernelName:na,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Gn(e)}}},XN={kernelName:pn,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Gn(e)}}},IE={kernelName:Gl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,Is(Ht(ln(1),ir(Lt(e,"float32")))))}}},_E={kernelName:ql,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=Is(Nt(ln(1),ir(Lt(e,"float32"))));return nn(n,r)}}}},YN={kernelName:Vr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=An(e.shape,r.shape);return{a:()=>{const c=Nt(ir(e),ir(r));let d=Ce(n,nn(r,c));const m=Ur(e.shape,s);return m.length>0&&(d=Kt(d,m)),$e(d,e.shape)},b:()=>{const c=Nt(ir(e),ir(r));let d=cr(Ce(n,nn(e,c)));const m=Ur(r.shape,s);return m.length>0&&(d=Kt(d,m)),$e(d,r.shape)}}}},TE={kernelName:Uo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,Nt(ir(Lt(e,"float32")),1))}}},AE={kernelName:wt,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,Ht(ln(1),ir(Lt(e,"float32"))))}}},EE=_e({avgPool3dGrad_:function JN(n,t,e,r,s,a){const i=se(n,"dy","avgPool3dGrad"),c=se(t,"input","avgPool3dGrad");let d=i,m=c,g=!1;4===c.rank&&(g=!0,d=$e(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=$e(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),q(5===d.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),q(5===m.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),$s("avgPool3dGrad",s,a);const T=ce.runKernel($d,{dy:d,input:m},{filterSize:e,strides:r,pad:s,dimRoundingMode:a});return g?$e(T,[T.shape[1],T.shape[2],T.shape[3],T.shape[4]]):T}}),kE={kernelName:Go,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:c}=e;return{x:()=>EE(n,r,s,a,i,c)}}},ME=_e({avgPoolGrad_:function QN(n,t,e,r,s){const a=se(n,"dy","avgPoolGrad"),i=se(t,"input","avgPoolGrad");q(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let c=i,d=a,m=!1;3===i.rank&&(m=!0,c=$e(i,[1,i.shape[0],i.shape[1],i.shape[2]]),d=$e(a,[1,a.shape[0],a.shape[1],a.shape[2]])),q(4===d.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${d.rank}.`),q(4===c.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${c.rank}.`);const C=ce.runKernel(Wo,{dy:d,input:c},{filterSize:e,strides:r,pad:s});return m?$e(C,[C.shape[1],C.shape[2],C.shape[3]]):C}}),DE={kernelName:Ss,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=e;return{x:()=>ME(n,r,s,a,i)}}},eS={kernelName:rr,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[r,s]=t,{transposeA:a,transposeB:i}=e;return a||i?!a&&i?{a:()=>Rn(n,s,!1,!1),b:()=>Rn(n,r,!0,!1)}:a&&!i?{a:()=>Rn(s,n,!1,!0),b:()=>Rn(r,n,!1,!1)}:{a:()=>Rn(s,n,!0,!0),b:()=>Rn(n,r,!0,!0)}:{a:()=>Rn(n,s,!1,!0),b:()=>Rn(r,n,!0,!1)}}},RE={kernelName:sn,gradFunc:(n,t,e)=>{const{blockShape:r,crops:s}=e;return{x:()=>Lh(n,r,s)}}},$E={kernelName:gf,gradFunc:(n,t,e)=>{const s=e.inputShape,a=e.shape,i=Array.from(a);for(let d=s.length-1;d>=0;d--)if(s[d]===a[d])i[d]=1;else if(1!==s[d])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const c=[];for(let d=0;d<i.length;d++)i[d]>1&&c.push(d);return{x:()=>Kt(n,c,!0)}}},tS={kernelName:Zs,gradFunc:n=>({x:()=>n.clone()})},OE={kernelName:$u,gradFunc:n=>({x:()=>Gn(n)})},FE={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=e;return{x:()=>ps(ja(Co(r,s),hu(r,a)),n,Gn(n))}}},LE={kernelName:Hl,inputsToSave:["x"],gradFunc:y0.gradFunc},BE={kernelName:Kl,saveAllInputs:!0,gradFunc:(n,t,e)=>{const r=t.map(d=>d.shape),{axis:s}=e,a=Mn(s,t[0].shape)[0],i=r.map(d=>d[a]);return ca(n,i,a).map(d=>()=>d)}},PE={kernelName:Ou,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[r,s]=t,{dilations:a,strides:i,pad:c,dataFormat:d}=e;return q(lu(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>ry(r.shape,n,s,i,c,d),filter:()=>Mm(r,n,s.shape,i,c,d)}}},nS={kernelName:Zl,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:c,dimRoundingMode:d}=e;return{dy:()=>So(n,s,a,i,c,1,d),filter:()=>Mm(n,r,s.shape,a,i,c,d)}}},VE=_e({conv3DBackpropFilter_:function zE(n,t,e,r,s){let a=n;4===n.rank&&(a=$e(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;return 4===i.rank&&(i=$e(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),q(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),q(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),q(5===e.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),q(a.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${e[3]}.`),q(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`),ce.runKernel(Od,{x:a,dy:i},{strides:r,pad:s,filterShape:e})}}),Yh={kernelName:Fu,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:r,strides:s,pad:a}=e;q(lu(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,c]=t;return{x:()=>ay(i.shape,n,c,s,a),filter:()=>VE(i,n,c.shape,s,a)}}},UE={kernelName:hi,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(cr(Dy(Lt(e,"float32"))),n)}}},WE={kernelName:oo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(Sm(Lt(e,"float32")),n)}}},GE={kernelName:Lu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=e;return{x:()=>{const c=Or([s],r.rank);let d=im(n,s,a,!i);return null!=c&&(d=Vn(d,c)),d}}}},rS={kernelName:xf,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=e,c=null==r?[1,1]:r;q(lu(c),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${c}'`);const[d,m]=t;return q(4===d.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${d.rank}.`),q(4===m.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${m.rank}.`),q(d.shape[3]===m.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),q(ds(s,c),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${c}'.`),$s("depthwiseConv2d",a,i),{x:()=>jw(d.shape,n,m,s,a,c,i),filter:()=>Wy(d,n,m.shape,s,a,c,i)}}},b0={kernelName:wf,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[r,s]=t,a={x:r,filter:s,dy:n},i={x:r,filter:s,dy:n};return{x:()=>ce.runKernel(Ud,a,e),filter:()=>ce.runKernel(Wd,i,e)}}},qE={kernelName:Xl,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,r={dy:n,y:e};return{x:()=>ce.runKernel(qd,r)}}},HE={kernelName:Yl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,r=Ce(va(cr(ir(e))),2/Math.sqrt(Math.PI));return{x:()=>Ce(n,r)}}},KE={kernelName:Bu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(n,e)}}},sS={kernelName:Sf,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>$e(n,e.shape)}}},ZE={kernelName:Jl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(n,va(e))}}},jE={kernelName:Ql,gradFunc:n=>({x:()=>Gn(n)})},aS={kernelName:ec,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=An(e.shape,r.shape);return{a:()=>{const c=nn(n,Lt(r,"float32")),d=Ur(e.shape,s);return d.length>0?$e(Kt(c,d),e.shape):c},b:()=>{let c=Ce(n,Lt(e,"float32"));const d=Ur(r.shape,s);d.length>0&&(c=$e(Kt(c,d),r.shape));const m=ir(r);return cr(nn(c,Lt(m,"float32")))}}}},XE={kernelName:If,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:r}=e,[s,a,i,c]=t,d=null==c?ln(1):c,m=Ur(a.shape,s.shape),g=[];if(1===a.rank){for(let G=0;G<s.shape.length-1;++G)g.push(s.shape[G]);g.push(1)}const y=Ht(s,a),C=Ce(n,d),T=xm(Nt(i,ln(r))),k=Ce(Ce(Ce(T,T),T),ln(-.5));return{x:()=>$e(Ce(Ce(n,1===a.rank?Ba($e(T,[1,1,1,a.shape[0]]),g):T),d),s.shape),mean:()=>{let G=Ce(Ce(T,ln(-1)),C);return 1===a.rank&&(G=Kt(G,m)),$e(G,a.shape)},variance:()=>{let G=Ce(Ce(k,y),C);return 1===a.rank&&(G=Kt(G,m)),$e(G,a.shape)},scale:()=>{const G=Ce(y,T);let K=Ce(n,G);return 1===a.rank&&(K=Kt(K,m)),$e(K,a.shape)},offset:()=>{let G=n;return 1===a.rank&&(G=Kt(G,m)),$e(G,a.shape)}}}},YE={kernelName:_f,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[r,s]=t,{axis:a}=e,i=Mn(a,r.shape)[0];return{x:()=>{const d=r.shape,m=s.size,g=d.slice(0,i),y=g.length,C=d.slice(a,d.length).slice(1),T=C.length,k=x0(0,y),D=x0(y+1,y+1+T),M=iS([g,[m],C]),R=$e(n,M),$=$e(s,[m]),V=iS([[y],k,D]),G=Vn(R,V);let K=Am(G,$,r.shape[i]);const ae=fu(V);return K=Vn(K,ae),K},indices:()=>s}}};function x0(n,t){const e=[];for(let r=n;r<t;++r)e.push(r);return e}function iS(n){const t=[];for(let e=0;e<n.length;++e)for(let r=0;r<n[e].length;++r)t.push(n[e][r]);return t}const JE={kernelName:tc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t;return{a:()=>Gn(e),b:()=>Gn(r)}}},oS={kernelName:nc,gradFunc:n=>({x:()=>Lt(n,"float32")})},QE={kernelName:rc,gradFunc:n=>({x:()=>Gn(n)})},ek={kernelName:sc,gradFunc:n=>({x:()=>Gn(n)})},uS={kernelName:ac,gradFunc:n=>({x:()=>Gn(n)})},tk={kernelName:Af,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{alpha:s}=e,a=Fs(r,0);return{x:()=>ps(a,n,Ce(n,s))}}},nk={kernelName:oc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,Nt(e,1))}}},rk={kernelName:ic,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,Lt(e,"float32"))}}},sk={kernelName:Yn,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r]=t,{axis:s}=e;return{logits:()=>{const i=va(r);return Ht(n,Ce(Kt(n,s,!0),i))}}}},lS=_e({localResponseNormalizationBackprop_:function ak(n,t,e,r=5,s=1,a=1,i=.5){return ce.runKernel(Pu,{x:n,y:t,dy:e},{depthRadius:r,bias:s,alpha:a,beta:i})}}),ik={kernelName:lo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:c,beta:d}=e;return{x:()=>lS(r,s,n,a,i,c,d)}}};function cS(n,t,e,r){return t.rank<e.rank&&(t=$e(t,Wr(t.shape,r))),n.rank<e.rank&&(n=$e(n,Wr(n.shape,r))),{x:()=>Ce(n,Lt(ga(e,t),n.dtype))}}const w0={kernelName:nr,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const r=e,{reductionIndices:s}=r,a=t[0],d=cS(n,t[1],a,Mn(s,a.shape));return{x:()=>d.x()}}},ok={kernelName:vn,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t;return{a:()=>Ce(n,Lt(Co(e,r),"float32")),b:()=>Ce(n,Lt(ul(e,r),"float32"))}}},fS=_e({maxPool3dGrad_:function uk(n,t,e,r,s,a,i){const c=se(n,"dy","maxPool3dGrad"),d=se(t,"input","maxPool3dGrad"),m=se(e,"output","maxPool3dGrad");let g=c,y=d,C=m,T=!1;4===d.rank&&(T=!0,g=$e(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),y=$e(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]]),C=$e(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),q(5===g.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${g.rank}.`),q(5===y.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${y.rank}.`),q(5===C.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${C.rank}.`),$s("maxPool3dGrad",a,i);const M=ce.runKernel(uc,{dy:g,input:y,output:C},{filterSize:r,strides:s,pad:a,dimRoundingMode:i});return T?$e(M,[M.shape[1],M.shape[2],M.shape[3],M.shape[4]]):M}}),lk={kernelName:di,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r,s]=t,{filterSize:a,strides:i,pad:c,dimRoundingMode:d}=e;return{x:()=>fS(n,r,s,a,i,c,d)}}},hS=_e({maxPoolGrad_:function ck(n,t,e,r,s,a,i){const c=se(n,"dy","maxPoolGrad"),d=se(t,"input","maxPoolGrad"),m=se(e,"output","maxPoolGrad");return q(d.rank===c.rank,()=>`Rank of input (${d.rank}) does not match rank of dy (${c.rank})`),q(4===c.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),q(4===d.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${d.rank}.`),$s("maxPoolGrad",a,i),ce.runKernel(zu,{dy:c,input:d,output:m},{filterSize:r,strides:s,pad:a,dimRoundingMode:i})}}),vS={kernelName:Pf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const r=t[0],{paddings:s}=e,a=s.map(i=>i[0]);return{x:()=>qn(n,a,r.shape)}}};const IS={kernelName:Xf,gradFunc:(n,t,e)=>{const{blockShape:r,paddings:s}=e;return{x:()=>Th(n,r,s)}}},S0={kernelName:Yf,gradFunc:(n,t,e)=>{const{axis:r}=e;return{x:()=>$r(n,r)}}},kS=[y0,wE,NE,jN,SE,CE,XN,IE,_E,YN,TE,AE,kE,DE,eS,RE,$E,tS,OE,FE,LE,BE,nS,PE,Yh,UE,WE,GE,rS,b0,{kernelName:jl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=An(e.shape,r.shape);return{a:()=>{const c=nn(n,Lt(r,"float32")),d=Ur(e.shape,s);return d.length>0?$e(Kt(c,d),e.shape):c},b:()=>{let c=Ce(n,Lt(e,"float32"));const d=Ur(r.shape,s);d.length>0&&(c=$e(Kt(c,d),r.shape));const m=ir(r);return cr(nn(c,Lt(m,"float32")))}}}},qE,HE,KE,sS,ZE,aS,jE,XE,YE,JE,oS,QE,ek,uS,tk,nk,rk,sk,ik,w0,w0,ok,lk,{kernelName:Ko,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r,s]=t,{filterSize:a,strides:i,pad:c}=e;return{x:()=>hS(n,r,s,a,i,c)}}},{kernelName:Df,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{axis:s}=e,a=Mn(s,r.shape),d=ze(ms(r.shape,a)[1]);return{x:()=>{const g=r.shape.slice();a.forEach(T=>{g[T]=1});const y=$e(n,g);return nn(Ce(y,la(r.shape,"float32")),d)}}}},{kernelName:lc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const r=e,{axis:s}=r,[a,i]=t,d=cS(n,i,a,Mn(s,a.shape));return{x:()=>d.x()}}},{kernelName:Vu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t;return{a:()=>Ce(n,Lt(hu(e,r),"float32")),b:()=>Ce(n,Lt(Fs(e,r),"float32"))}}},{kernelName:Rf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const r=t[0],{paddings:s}=e,a=s.map(i=>i[0]);return{x:()=>qn(n,a,r.shape)}}},{kernelName:cc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=An(e.shape,r.shape);return{a:()=>{const c=Ur(e.shape,s);return c.length>0?$e(Kt(n,c),e.shape):n},b:()=>{const c=Ce(n,cr(Bc(nn(e,r)))),d=Ur(r.shape,s);return d.length>0?$e(Kt(c,d),r.shape):c}}}},{kernelName:fc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=An(e.shape,r.shape);return{a:()=>{const c=Ce(n,Lt(r,"float32")),d=Ur(e.shape,s);return d.length>0?$e(Kt(c,d),e.shape):c},b:()=>{const c=Ce(n,Lt(e,"float32")),d=Ur(r.shape,s);return d.length>0?$e(Kt(c,d),r.shape):c}}}},{kernelName:$f,gradFunc:n=>({x:()=>cr(n)})},{kernelName:Lf,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>ns(e.shape,"float32")}}},{kernelName:Ff,gradFunc:n=>({x:()=>Gn(n)})},{kernelName:Bf,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:r}=e;return za(n,r).map(a=>()=>a)}},vS,vS,{kernelName:hc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,r,s]=t,a=e,i=r,c=An(a.shape,i.shape);return{a:()=>{const g=Lt(i,"float32");let y=Ce(n,Ce(g,yo(a,Ht(g,ln(1)))));const C=Ur(a.shape,c);return C.length>0&&(y=Kt(y,C)),$e(y,a.shape)},b:()=>{const g=Fs(a,0),y=ps(g,ya(a),Gn(a));let C=Ce(n,Ce(s,y));const T=Ur(i.shape,c);return T.length>0&&(C=Kt(C,T)),$e(C,i.shape)}}}},{kernelName:dc,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,r]=t,s=Fs(e,0);return{x:()=>ps(s,n,Ce(n,r)),alpha:()=>{let a=ps(s,Gn(n),Ce(n,e));const i=Ur(r.shape,n.shape);return i.length>0&&(a=Kt(a,i)),$e(a,r.shape)}}}},{kernelName:zf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{axis:s}=e;let a=[];return a=null==s?r.shape.map((i,c)=>c):"number"==typeof s?[s]:s,{x:()=>function wk(n,t,e){const r=n.shape.length,s=r-e.length,a=Or(e,r);let i=n;null!=a&&(i=Vn(n,a));const c=i.shape.slice(),m=c.splice(r-e.length,e.length).reduce((C,T)=>C*T,1);c.push(m);let y=function xk(n,t,e){const r=n.shape.slice();r[e]=1;const s=$e(t,r),a=kh(n,e,!0,!1),i=kh(n,e,!0,!0),c=Ce(a,i);return Ce(s,c)}(i.reshape(c),t,s);if(y=y.reshape(i.shape),null!=a){const C=fu(a);y=Vn(y,C)}return y}(r,n,a)}}},{kernelName:mr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,cr(ir(e)))}}},{kernelName:Wu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,r=Ce(hu(e,6),ml(e));return{x:()=>Ce(n,Lt(r,"float32"))}}},{kernelName:hn,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(n,Lt(ml(e),"float32"))}}},{kernelName:Uf,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$e(n,e.shape)}}},{kernelName:jo,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[r]=t,s={dy:n,images:r};return{images:()=>ce.runKernel(Xg,s,e)}}},{kernelName:Uu,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[r]=t,s={dy:n,images:r};return{images:()=>ce.runKernel(ip,s,e)}}},{kernelName:op,gradFunc:(n,t,e)=>{const{dims:r}=e,s=Mn(r,n.shape);return{x:()=>Xa(n,s)}}},{kernelName:Wf,gradFunc:n=>({x:()=>Gn(n)})},{kernelName:pc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>cr(nn(n,Ce(yo(e,1.5),2)))}}},{kernelName:mc,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Lt(Gn(e),"float32"),t:()=>Ce(n,Lt(e,n.dtype)),e:()=>Ce(n,Lt(Oh(e),n.dtype))}}},{kernelName:qf,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=Fs(e,ln(0)),s=ln(Vm),a=ln(Um),i=Ce(n,a),c=Ce(Ce(n,s),va(Lt(e,"float32")));return ps(r,i,c)}}}},{kernelName:gc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(n,Ce(e,Ht(ln(1),e)))}}},{kernelName:pe,gradFunc:n=>({x:()=>Gn(n)})},{kernelName:Kf,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(Ah(Lt(e,"float32")),n)}}},{kernelName:Gu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(Eh(Lt(e,"float32")),n)}}},{kernelName:Hf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{begin:s,size:a}=e,i=r.shape,[c,d]=xo(r,s,a),m=[];for(let g=0;g<n.rank;g++)m.push([c[g],i[g]-c[g]-d[g]]);return{x:()=>_s(n,m)}}},{kernelName:Jf,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r]=t,{dim:s}=e,i=Ce(n,r);return{logits:()=>Ht(i,Ce(Kt(i,[s],!0),r))}}},{kernelName:Zf,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(n,Za(e))}}},IS,IS,S0,S0,{kernelName:Xo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,Ce(Is(Lt(e,"float32")),2))}}},{kernelName:vc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=ln(2);return{a:()=>Ce(n,Ce(s,Ht(e,r))),b:()=>Ce(n,Ce(s,Ht(r,e)))}}},{kernelName:cp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(n,Ce(Lt(e,"float32"),2))}}},{kernelName:wc,gradFunc:n=>({x:()=>Gn(n)})},{kernelName:co,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=An(e.shape,r.shape);return{a:()=>{let c=n;const d=Ur(e.shape,s);return d.length>0&&(c=Kt(c,d)),$e(c,e.shape)},b:()=>{let c=n;const d=Ur(r.shape,s);return d.length>0&&(c=Kt(c,d)),$e(cr(c),r.shape)}}}},{kernelName:jf,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,s=r.shape.slice(),{axis:a}=e;Mn(a,r.shape).forEach(m=>{s[m]=1});const c=$e(n,s),d=Ce(c,la(r.shape,"float32"));return{x:()=>d}}},{kernelName:xc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>nn(n,ir(Ah(e)))}}},{kernelName:qu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ce(Ht(ln(1),ir(e)),n)}}},{kernelName:Hu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{reps:s}=e;return{x:()=>{let i=Gn(r);if(1===r.rank)for(let c=0;c<s[0];++c)i=Nt(i,qn(n,[c*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let c=0;c<s[0];++c)for(let d=0;d<s[1];++d)i=Nt(i,qn(n,[c*r.shape[0],d*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let c=0;c<s[0];++c)for(let d=0;d<s[1];++d)for(let m=0;m<s[2];++m)i=Nt(i,qn(n,[c*r.shape[0],d*r.shape[1],m*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let c=0;c<s[0];++c)for(let d=0;d<s[1];++d)for(let m=0;m<s[2];++m)for(let g=0;g<s[3];++g)i=Nt(i,qn(n,[c*r.shape[0],d*r.shape[1],m*r.shape[2],g*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return i}}}},{kernelName:qa,gradFunc:(n,t,e)=>{const r=e,{perm:s}=r,a=fu(s);return{x:()=>Vn(n,a)}}},{kernelName:Qf,gradFunc:(n,t,e)=>{const r=e,{axis:s}=r;return{value:()=>xa(n,s)}}},{kernelName:Rs,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>function Uk(n,t){const e=gi(t,Gn(t)),r=Pc(n,e);let s=Co(t,ln(0,"int32"));const a=r.rank-s.rank;for(let c=0;c<a;++c)s=Os(s,c+1);s=ja(s,la(r.shape,"bool"));const i=Gn(r);return ps(s,r,i)}(n,e)}}},{kernelName:eh,gradFunc:n=>({x:()=>Gn(n)})}];for(const n of kS)Xb(n);it().prototype.abs=function(){return this.throwIfDisposed(),es(this)},it().prototype.acos=function(){return this.throwIfDisposed(),Zp(this)},it().prototype.acosh=function(){return this.throwIfDisposed(),Hv(this)},it().prototype.add=function(n){return this.throwIfDisposed(),Nt(this,n)},it().prototype.all=function(n,t){return this.throwIfDisposed(),wh(this,n,t)},it().prototype.any=function(n,t){return this.throwIfDisposed(),Nh(this,n,t)},it().prototype.argMax=function(n){return this.throwIfDisposed(),nl(this,n)},it().prototype.argMin=function(n){return this.throwIfDisposed(),jp(this,n)},it().prototype.asScalar=function(){return this.throwIfDisposed(),q(1===this.size,()=>"The array must have only 1 element."),$e(this,[])},it().prototype.asType=function(n){return this.throwIfDisposed(),Lt(this,n)},it().prototype.as1D=function(){return this.throwIfDisposed(),$e(this,[this.size])},it().prototype.as2D=function(n,t){return this.throwIfDisposed(),$e(this,[n,t])},it().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),$e(this,[n,t,e])},it().prototype.as4D=function(n,t,e,r){return this.throwIfDisposed(),$e(this,[n,t,e,r])},it().prototype.as5D=function(n,t,e,r,s){return this.throwIfDisposed(),$e(this,[n,t,e,r,s])},it().prototype.asin=function(){return this.throwIfDisposed(),Xp(this)},it().prototype.asinh=function(){return this.throwIfDisposed(),Kv(this)},it().prototype.atan=function(){return this.throwIfDisposed(),Yp(this)},it().prototype.atan2=function(n){return this.throwIfDisposed(),Zv(this,n)},it().prototype.atanh=function(){return this.throwIfDisposed(),jv(this)},it().prototype.avgPool=function(n,t,e,r){return this.throwIfDisposed(),_h(this,n,t,e,r)},it().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Th(this,n,t)},it().prototype.batchNorm=function(n,t,e,r,s){return this.throwIfDisposed(),al(this,n,t,e,r,s)},it().prototype.broadcastTo=function(n){return this.throwIfDisposed(),cu(this,n)},it().prototype.cast=function(n){return this.throwIfDisposed(),Lt(this,n)},it().prototype.ceil=function(){return this.throwIfDisposed(),tm(this)},it().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),oa(this,n,t)},it().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof jn&&(n=[n]),$r([this,...n],t)},it().prototype.conv1d=function(n,t,e,r,s,a){return this.throwIfDisposed(),sm(this,n,t,e,r,s,a)},it().prototype.conv2dTranspose=function(n,t,e,r,s){return this.throwIfDisposed(),am(this,n,t,e,r,s)},it().prototype.conv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),So(this,n,t,e,r,s,a)},it().prototype.cos=function(){return this.throwIfDisposed(),Ah(this)},it().prototype.cosh=function(){return this.throwIfDisposed(),Eh(this)},it().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),kh(this,n,t,e)},it().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),im(this,n,t,e)},it().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),oy(this,n,t)},it().prototype.depthwiseConv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),Fc(this,n,t,e,r,s,a)},it().prototype.dilation2d=function(n,t,e,r,s){return this.throwIfDisposed(),ly(this,n,t,e,r,s)},it().prototype.divNoNan=function(n){return this.throwIfDisposed(),um(this,n)},it().prototype.div=function(n){return this.throwIfDisposed(),nn(this,n)},it().prototype.dot=function(n){return this.throwIfDisposed(),cy(this,n)},it().prototype.elu=function(){return this.throwIfDisposed(),il(this)},it().prototype.equal=function(n){return this.throwIfDisposed(),ga(this,n)},it().prototype.erf=function(){return this.throwIfDisposed(),fy(this)},it().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),py(this,n,t)},it().prototype.exp=function(){return this.throwIfDisposed(),va(this)},it().prototype.expandDims=function(n){return this.throwIfDisposed(),Os(this,n)},it().prototype.expm1=function(){return this.throwIfDisposed(),my(this)},it().prototype.fft=function(){return this.throwIfDisposed(),Wh(this)},it().prototype.flatten=function(){return this.throwIfDisposed(),$e(this,[this.size])},it().prototype.floor=function(){return this.throwIfDisposed(),Bc(this)},it().prototype.floorDiv=function(n){return this.throwIfDisposed(),Lp(this,n)},it().prototype.gather=function(n,t,e){return this.throwIfDisposed(),Pc(this,n,t,e)},it().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Co(this,n)},it().prototype.greater=function(n){return this.throwIfDisposed(),Fs(this,n)},it().prototype.ifft=function(){return this.throwIfDisposed(),pl(this)},it().prototype.irfft=function(){return this.throwIfDisposed(),Im(this)},it().prototype.isFinite=function(){return this.throwIfDisposed(),gy(this)},it().prototype.isInf=function(){return this.throwIfDisposed(),lm(this)},it().prototype.isNaN=function(){return this.throwIfDisposed(),vy(this)},it().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Rh(this,n)},it().prototype.lessEqual=function(n){return this.throwIfDisposed(),hu(this,n)},it().prototype.less=function(n){return this.throwIfDisposed(),ul(this,n)},it().prototype.localResponseNormalization=function(n,t,e,r){return this.throwIfDisposed(),Pa(this,n,t,e,r)},it().prototype.logSigmoid=function(){return this.throwIfDisposed(),yy(this)},it().prototype.logSoftmax=function(n){return this.throwIfDisposed(),cm(this,n)},it().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),ts(this,n,t)},it().prototype.log=function(){return this.throwIfDisposed(),ya(this)},it().prototype.log1p=function(){return this.throwIfDisposed(),$h(this)},it().prototype.logicalAnd=function(n){return this.throwIfDisposed(),ja(this,n)},it().prototype.logicalNot=function(){return this.throwIfDisposed(),Oh(this)},it().prototype.logicalOr=function(n){return this.throwIfDisposed(),Kn(this,n)},it().prototype.logicalXor=function(n){return this.throwIfDisposed(),by(this,n)},it().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Rn(this,n,t,e)},it().prototype.maxPool=function(n,t,e,r){return this.throwIfDisposed(),Fh(this,n,t,e,r)},it().prototype.max=function(n,t){return this.throwIfDisposed(),La(this,n,t)},it().prototype.maximum=function(n){return this.throwIfDisposed(),gi(this,n)},it().prototype.mean=function(n,t){return this.throwIfDisposed(),Ir(this,n,t)},it().prototype.min=function(n,t){return this.throwIfDisposed(),Lc(this,n,t)},it().prototype.minimum=function(n){return this.throwIfDisposed(),du(this,n)},it().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),xy(this,n,t)},it().prototype.mod=function(n){return this.throwIfDisposed(),wy(this,n)},it().prototype.mul=function(n){return this.throwIfDisposed(),Ce(this,n)},it().prototype.neg=function(){return this.throwIfDisposed(),cr(this)},it().prototype.norm=function(n,t,e){return this.throwIfDisposed(),ol(this,n,t,e)},it().prototype.notEqual=function(n){return this.throwIfDisposed(),ll(this,n)},it().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Dc(this,n,t,e)},it().prototype.onesLike=function(){return this.throwIfDisposed(),ba(this)},it().prototype.pad=function(n,t){return this.throwIfDisposed(),_s(this,n,t)},it().prototype.pool=function(n,t,e,r,s,a){return this.throwIfDisposed(),Cy(this,n,t,e,r,s,a)},it().prototype.pow=function(n){return this.throwIfDisposed(),yo(this,n)},it().prototype.prelu=function(n){return this.throwIfDisposed(),Bh(this,n)},it().prototype.prod=function(n,t){return this.throwIfDisposed(),mm(this,n,t)},it().prototype.reciprocal=function(){return this.throwIfDisposed(),Ty(this)},it().prototype.relu=function(){return this.throwIfDisposed(),Oi(this)},it().prototype.relu6=function(){return this.throwIfDisposed(),ym(this)},it().prototype.reshapeAs=function(n){return this.throwIfDisposed(),$e(this,n.shape)},it().prototype.reshape=function(n){return this.throwIfDisposed(),$e(this,n)},it().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),hN(this,n,t,e)},it().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),Zy(this,n,t,e)},it().prototype.reverse=function(n){return this.throwIfDisposed(),Xa(this,n)},it().prototype.rfft=function(){return this.throwIfDisposed(),Uc(this)},it().prototype.round=function(){return this.throwIfDisposed(),bm(this)},it().prototype.rsqrt=function(){return this.throwIfDisposed(),xm(this)},it().prototype.selu=function(){return this.throwIfDisposed(),zh(this)},it().prototype.separableConv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),wm(this,n,t,e,r,s,a)},it().prototype.sigmoid=function(){return this.throwIfDisposed(),Za(this)},it().prototype.sign=function(){return this.throwIfDisposed(),My(this)},it().prototype.sin=function(){return this.throwIfDisposed(),Dy(this)},it().prototype.sinh=function(){return this.throwIfDisposed(),Sm(this)},it().prototype.slice=function(n,t){return this.throwIfDisposed(),qn(this,n,t)},it().prototype.softmax=function(n){return this.throwIfDisposed(),Uh(this,n)},it().prototype.softplus=function(){return this.throwIfDisposed(),$i(this)},it().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Lh(this,n,t)},it().prototype.split=function(n,t){return this.throwIfDisposed(),ca(this,n,t)},it().prototype.sqrt=function(){return this.throwIfDisposed(),Is(this)},it().prototype.square=function(){return this.throwIfDisposed(),ir(this)},it().prototype.squaredDifference=function(n){return this.throwIfDisposed(),_m(this,n)},it().prototype.squeeze=function(n){return this.throwIfDisposed(),pu(this,n)},it().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof jn?[this,n]:[this,...n];return xa(e,t)},it().prototype.step=function(n){return this.throwIfDisposed(),ml(this,n)},it().prototype.stridedSlice=function(n,t,e,r,s,a,i,c){return this.throwIfDisposed(),Tm(this,n,t,e,r,s,a,i,c)},it().prototype.sub=function(n){return this.throwIfDisposed(),Ht(this,n)},it().prototype.sum=function(n,t){return this.throwIfDisposed(),Kt(this,n,t)},it().prototype.tan=function(){return this.throwIfDisposed(),Oy(this)},it().prototype.tanh=function(){return this.throwIfDisposed(),sl(this)},it().prototype.tile=function(n){return this.throwIfDisposed(),Ba(this,n)},it().prototype.toBool=function(){return this.throwIfDisposed(),Lt(this,"bool")},it().prototype.toFloat=function(){return this.throwIfDisposed(),Lt(this,"float32")},it().prototype.toInt=function(){return this.throwIfDisposed(),Lt(this,"int32")},it().prototype.topk=function(n,t){return this.throwIfDisposed(),Ly(this,n,t)},it().prototype.transpose=function(n){return this.throwIfDisposed(),Vn(this,n)},it().prototype.unique=function(n){return this.throwIfDisposed(),By(this,n)},it().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),Am(this,n,t)},it().prototype.unstack=function(n){return this.throwIfDisposed(),za(this,n)},it().prototype.where=function(n,t){return this.throwIfDisposed(),ps(n,this,t)},it().prototype.zerosLike=function(){return this.throwIfDisposed(),Gn(this)};class Fi extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Fi.prototype)}}class Qa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Qa.prototype)}}class oe extends Error{constructor(t){super(t),Object.setPrototypeOf(this,oe.prototype)}}class Zt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zt.prototype)}}class MS extends Error{constructor(t){super(t),Object.setPrototypeOf(this,MS.prototype)}}Error;class qk{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=t}}function ei(n,t){if(Array.isArray(n)){let e=[];for(let r=0;r<t;r++)e=e.concat(n);return e}{const e=new Array(t);return e.fill(n),e}}function Va(n,t){if(!n)throw new MS(t)}function Hk(n,t){let e=0;for(const r of n)r===t&&e++;return e}function wa(n){return 1===n.length?n[0]:n}function Nr(n){return Array.isArray(n)?n:[n]}function vu(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Hc(n){return n.length<=1||-1===n.indexOf("_")?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let bi={};function RS(n){if(null==n)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function $S(n){if(null!=n&&"object"==typeof n)if(Array.isArray(n))n.forEach(t=>$S(t));else{const t=Object.keys(n);for(const e of t){const r=n[e];null!=r&&"object"==typeof r&&(Array.isArray(r)||"ndarray"!==r.type||"number"!=typeof r.value?$S(r):n[e]=r.value)}}}function Km(n,t={},e={},r="object",s=!1){if("string"==typeof n){const a=n;let i;if(a in e)i=e[a];else if(a in bi)i=bi[a];else if(i=t[a],null==i)throw new oe(`Unknown ${r}: ${n}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const a=n;if(null==a.className||null==a.config)throw new oe(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let c,d;if(i in e?[c,d]=e[i]:i in bi?[c,d]=bi.className:i in t&&([c,d]=t[i]),null==c)throw new oe(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=d){const m={};for(const T of Object.keys(bi))m[T]=bi[T];for(const T of Object.keys(e))m[T]=e[T];a.config.customObjects=m;const y=Object.assign({},bi);for(const T of Object.keys(e))bi[T]=e[T];$S(a.config);const C=d(c,a.config,e,s);return bi=Object.assign({},y),C}{const m=Object.assign({},bi);for(const y of Object.keys(e))bi[y]=e[y];const g=new c(a.config);return bi=Object.assign({},m),g}}}function Zm(n,t){return-1*function r$(n,t){return n<t?-1:n>t?1:0}(n,t)}function wn(n){if(null==n)return n;const t=[];for(const e of n)-1===t.indexOf(e)&&t.push(e);return t}function s$(n){if(null==n)throw new oe(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Kc(n,t,e){if(null!=e&&n.indexOf(e)<0)throw new oe(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function OS(n,t,e=0,r=1/0){return Va(e>=0),Va(r>=e),Array.isArray(n)&&n.length>=e&&n.length<=r&&n.every(s=>typeof s===t)}function Ts(n,t){Array.isArray(n)?(q(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,r)=>Ts(e,`element ${r+1} of ${t}`))):q(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${Kk(n)}.`)}function Kk(n){return null===n?"null":Array.isArray(n)?"["+n.map(t=>Kk(t)).join(",")+"]":"string"==typeof n?`"${n}"`:`${n}`}function FS(n){return"relu"===n?"relu":"linear"===n?"linear":"elu"===n?"elu":null}let ti=0;function Zk(){return ti++}const C0={};function I0(n=""){return n in C0||(C0[n]=0),C0[n]+=1,n+C0[n].toString()}const ys=["channelsFirst","channelsLast"],a$=["nearest","bilinear"],i$=["valid","same","causal"],o$=["max","avg"],jk=["sum","mul","concat","ave"],Mo=new Map;function ss(n){Kc(ys,"DataFormat",n)}function ni(n){Kc(i$,"PaddingMode",n)}function jm(n){Kc(o$,"PoolMode",n)}const yl=[];function jc(n,t){yl.push(n);try{const e=t();return yl.pop(),e}catch(e){throw yl.pop(),e}}function Xk(n){if(!Jk(n))throw new Error("Not a valid tensor name: '"+n+"'");return function l$(){return 0===yl.length?"":yl.join("/")+"/"}()+n}function Yk(n){if(!Jk(n))throw new Error("Not a valid tensor name: '"+n+"'");Mo.has(n)||Mo.set(n,0);const t=Mo.get(n);if(Mo.set(n,Mo.get(n)+1),t>0){const e=`${n}_${t}`;return Mo.set(e,1),e}return n}const Xn=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Jk(n){return!!n.match(Xn)}function Qk(n){return n===parseInt(n.toString(),10)}function bl(n,t,e){null==t&&(t=0),null==e&&(e=n.length);let r=1;for(let s=t;s<e;++s)r*=n[s];return r}function Jh(n){if(0===n.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const r=n[e];r<t&&(t=r)}return t}function xl(n){if(0===n.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const r=n[e];r>t&&(t=r)}return t}function bs(n,t){if(t<n)throw new oe(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let r=n;r<t;++r)e.push(r);return e}let yu;function Gr(){return null==yu&&(yu=Nv().epsilon()),yu}function Bi(n,t){return Lt(n,t)}function Pi(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),$e(n,e)}function Xc(n,t,e){return qe(()=>{switch(n.rank){case 1:return Vc(n,t,e);case 2:return Cm(n,[t,0],[e,n.shape[1]]);case 3:return Vh(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return dl(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return qn(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return qn(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new oe(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function _0(n,t,e){return qe(()=>{switch(n.rank){case 1:return Vc(n,t,e);case 2:return Cm(n,[0,t],[n.shape[0],e]);case 3:return Vh(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return dl(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new oe(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function T0(n,t,e,r){return qe(()=>{switch(n.rank){case 1:return Vc(n,t,e);case 2:switch(r){case 1:return Xc(n,t,e);case 2:return _0(n,t,e);default:throw new oe(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Xc(n,t,e);case 2:return Vh(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return _0(n,t,e);default:throw new oe(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Xc(n,t,e);case 2:return dl(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return dl(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return _0(n,t,e);default:throw new oe(`The axis is not within the rank of the tensor ${r}`)}default:throw new oe(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function A0(n,t=-1){let e;return t<0&&(e=n[0].rank,t=0!==e?e:0),t===n[0].rank&&(t=-1),$r(n,t)}function E0(n,t){switch(n.rank){case 1:return nm([n,t]);case 2:return ty([n,t],0);case 3:return ny([n,t],0);case 4:return rm([n,t],0);default:throw new oe(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function zi(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new oe(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Ba(n,t)}function k0(n,t=0,e=1,r,s){return Ph(n,t,e,r,s)}function Do(n,t,e,r){if(n.rank<2||t.rank<2)throw new Zt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3&&n.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Zt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`);if(2===n.rank&&2===t.rank)return Gy({a:n,b:t,transposeA:!1,transposeB:!1,bias:r?M0(n.rank,r,"channelsLast"):null,activation:e});{const s=n.shape.slice(),a=s.pop();n=$e(n,[-1,a]);const i=t.shape.slice(),c=i.pop(),d=i.pop(),m=[...i,c],g=Array.from({length:t.rank},(k,D)=>0===D?t.rank-2:D<=t.rank-2?D-1:D);t=$e(Vn(t,g),[d,-1]);const y=[...s,...m];return $e(Gy({a:n,b:t,transposeA:!1,transposeB:!1,bias:r?M0(n.rank,r,"channelsLast"):null,activation:e}),y)}}function tM(n,t,e){return qe(()=>(t=Array.isArray(t)?rs(t,"int32"):Lt(t,"int32"),Pc(n,t,e)))}function Jm(n){return Ce(n,n)}function M0(n,t,e){const r=t.shape;if(1!==t.rank&&t.rank!==n)throw new oe(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(5===n){if("channelsFirst"===e)return $e(t,1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===e)return $e(t,1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===n){if("channelsFirst"===e)return $e(t,1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===e)return $e(t,1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===n){if("channelsFirst"===e)return $e(t,1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===e)return $e(t,1===r.length?[1,1,r[0]]:[1].concat(r))}else if(n<3)return t;throw new oe(`Unsupported input rank by biasAdd: ${t.rank}`)}function Vi(n,t,e){return qe(()=>(null==e&&(e="channelsLast"),ss(e),Nt(n,M0(n.rank,t,e))))}function D0(n,t,e,r){return qe(()=>Hh(n,t,e,r))}function wl(n,t,e=!1){return e?n():t()}const b$=["fanIn","fanOut","fanAvg"],x$=["normal","uniform","truncatedNormal"];class As extends el{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}let nM=(()=>{class n extends As{apply(e,r){return ns(e,r)}}return n.className="Zeros",n})();Ct(nM);let Ui=(()=>{class n extends As{apply(e,r){return la(e,r)}}return n.className="Ones",n})();Ct(Ui);let rM=(()=>{class n extends As{constructor(e){if(super(),"object"!=typeof e)throw new oe(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new oe(`config must have value set but got ${e}`);this.value=e.value}apply(e,r){return qe(()=>Ce(ln(this.value),la(e,r)))}getConfig(){return{value:this.value}}}return n.className="Constant",n})();Ct(rM);let sM=(()=>{class n extends As{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,r){return fl(e,this.minval,this.maxval,r,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return n.className="RandomUniform",n})();Ct(sM);let R0=(()=>{class n extends As{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,r){if("float32"!==(r=r||"float32")&&"int32"!==r)throw new Zt(`randomNormal does not support dType ${r}.`);return k0(e,this.mean,this.stddev,r,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="RandomNormal",n})();Ct(R0);let Nl=(()=>{class n extends As{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,r){if("float32"!==(r=r||"float32")&&"int32"!==r)throw new Zt(`truncatedNormal does not support dType ${r}.`);return Gh(e,this.mean,this.stddev,r,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="TruncatedNormal",n})();Ct(Nl);let Ut=(()=>{class n extends As{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,r){return qe(()=>{if(2!==e.length||e[0]!==e[1])throw new oe("Identity matrix initializer can only be used for 2D square matrices.");return Ce(this.gain,Dh(e[0]))})}getConfig(){return{gain:this.gain}}}return n.className="Identity",n})();Ct(Ut);let Na=(()=>{class n extends As{constructor(e){if(super(),e.scale<0)throw new oe(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function w$(n){Kc(b$,"FanMode",n)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function N$(n){Kc(x$,"Distribution",n)}(this.distribution),this.seed=e.seed}apply(e,r){const s=function S$(n,t="channelsLast"){let e,r;if(ss(t),2===n.length)e=n[0],r=n[1];else if(-1!==[3,4,5].indexOf(n.length)){if("channelsFirst"===t){const s=bl(n,2);e=n[1]*s,r=n[0]*s}else if("channelsLast"===t){const s=bl(n,0,n.length-2);e=n[n.length-2]*s,r=n[n.length-1]*s}}else{const s=bl(n);e=Math.sqrt(s),r=Math.sqrt(s)}return[e,r]}(e),a=s[0],i=s[1];let c=this.scale;if(c/="fanIn"===this.mode?Math.max(1,a):"fanOut"===this.mode?Math.max(1,i):Math.max(1,(a+i)/2),"normal"===this.distribution){const d=Math.sqrt(c);if("float32"!==(r=r||"float32")&&"int32"!==r)throw new Zt(`${this.getClassName()} does not support dType ${r}.`);return Gh(e,0,d,r,this.seed)}{const d=Math.sqrt(3*c);return fl(e,-d,d,r,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return n.className="VarianceScaling",n})();Ct(Na);let LS=(()=>{class n extends Na{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Na.className}}return n.className="GlorotUniform",n})();Ct(LS);let Sl=(()=>{class n extends Na{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Na.className}}return n.className="GlorotNormal",n})();Ct(Sl);let BS=(()=>{class n extends Na{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Na.className}}return n.className="HeNormal",n})();Ct(BS);let $0=(()=>{class n extends Na{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Na.className}}return n.className="HeUniform",n})();Ct($0);let PS=(()=>{class n extends Na{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Na.className}}return n.className="LeCunNormal",n})();Ct(PS);let Xs=(()=>{class n extends Na{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Na.className}}return n.className="LeCunUniform",n})();Ct(Xs);let Wi=(()=>{class n extends As{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,r){return qe(()=>{if(e.length<2)throw new Zt("Shape must be at least 2D.");if("int32"!==r&&"float32"!==r&&void 0!==r)throw new TypeError(`Unsupported data type ${r}.`);r=r;const s=ze(e.slice(0,-1)),a=e[e.length-1],i=s*a;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const d=k0([Math.max(a,s),Math.min(a,s)],0,1,r,this.seed),m=Yy.qr(d,!1);let g=m[0];const C=m[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return g=Ce(g,C.sign()),s<a&&(g=g.transpose()),Ce(ln(this.gain),g.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return n.className="Orthogonal",n})();Ct(Wi);const aM={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Gi(n,t={}){return Km(n,Fa.getMap().classNameMap,t,"initializer")}function Fn(n){return RS(n)}function Fr(n){if("string"==typeof n){const t=n in aM?aM[n]:n;if("GlorotNormal"===t)return new Sl;if("GlorotUniform"===t)return new LS;if("HeNormal"===t)return new BS;if("HeUniform"===t)return new $0;if("LeCunNormal"===t)return new PS;if("LeCunUniform"===t)return new Xs;{const e={};return e.className=t,e.config={},Gi(e)}}return n instanceof As?n:Gi(n)}function Qm(n){return Array.isArray(n)&&Array.isArray(n[0])}function eg(n){return 0===n.length?[]:Array.isArray(n[0])?n:[n]}function cn(n){let t;if(Array.isArray(n)){if(1!==n.length)throw new oe(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function er(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(1===n.length)return(n=n)[0];throw new oe(`Expected exactly 1 Shape; got ${n.length}`)}return n}function O0(n){let t=0;for(const e of n)t+=0===e.shape.length?1:e.shape.reduce((r,s)=>r*s);return t}const iM="Variable";class qi{constructor(t,e="float32",r=iM,s=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Zk(),this.originalName=Xk(r=null==r?iM:r),this.name=Yk(this.originalName),this.trainable_=s,this.constraint=a,this.val=Py(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function Qh(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function VS(n){return n.map(t=>t.read())}function US(n){n.forEach(t=>{t[0].write(t[1])})}class Hr{constructor(t){this.dtype=t.dtype,this.shape=t.shape,this.ndim=null!=t.shape?t.shape.length:t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Hi{constructor(t,e,r,s,a,i,c){this.dtype=t,this.shape=e,this.sourceLayer=r,this.inputs=s,this.callArgs=a,this.outputTensorIndex=c,this.id=Zk(),null!=i&&(this.originalName=Xk(i),this.name=Yk(this.originalName)),this.rank=e.length}}let lM=0;class tg{constructor(t,e){this.callArgs=e,this.id=lM++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const r of t.inboundLayers)null!=r&&r.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)t.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let T$=0;class Pn extends el{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=T$++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const r=this.getClassName();e=vu(r)+"_"+I0(r)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let r;if(null!=t.batchInputShape)r=t.batchInputShape;else if(null!=t.inputShape){let a=null;null!=t.batchSize&&(a=t.batchSize),r=[a].concat(t.inputShape)}this.batchInputShape=r;let s=t.dtype;null==s&&(s=t.inputDType),null==s&&(s="float32"),this.dtype=s}this.initialWeights=null!=t.weights?t.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Qa(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new oe(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return wa(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return wa(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Fi(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Fi(`Layer ${this.name} is not connected, no input to return.`);return wa(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Fi(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Fi(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return wa(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Nr(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Nr(this.inputSpec);if(t.length!==e.length)throw new oe(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let r=0;r<t.length;r++){const s=t[r],a=e[r];if(null==a)continue;const i=s.rank;if(null!=a.ndim&&i!==a.ndim)throw new oe(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(null!=a.maxNDim&&i>a.maxNDim)throw new oe(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(null!=a.minNDim&&i<a.minNDim)throw new oe(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(null!=a.dtype&&s.dtype!==a.dtype)throw new oe(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${s.dtype}.`);if(a.axes){const c=s.shape;for(const d in a.axes){const m=Number(d),g=a.axes[d],y=m>=0?c[m]:c[c.length+m];if(null!=g&&-1===[g,null].indexOf(y))throw new oe(`Input ${r} is incompatible with layer ${this.name}: expected axis ${m} of input shape to have value ${g} but got shape ${c}.`)}}if(null!=a.shape)for(let c=0;c<a.shape.length;++c){const d=a.shape[c],m=s.shape[c];if(null!=d&&null!=m&&d!==m)throw new oe(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const r=Nr(t);let s=!0;for(const i of r)if(!(i instanceof Hi)){s=!1;break}let a=!0;for(const i of r)if(i instanceof Hi){a=!1;break}if(s===a)throw new oe("Arguments to apply() must be all SymbolicTensors or all Tensors");return jc(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const c of Nr(t))i.push(c.shape);this.build(wa(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let i=this.call(t,e);const c=Nr(i),d=[];for(let m of c)-1!==r.indexOf(m)&&(m=m.clone()),d.push(m);if(i=wa(d),null!=this.activityRegularizer)throw new Zt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}{const i=function A$(n){n=Nr(n);const t=[];for(const e of n)t.push(e.shape);return wa(t)}(t),c=this.computeOutputShape(i);let d;const m="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),d=null!=c&&c.length>0&&Array.isArray(c[0])?c.map((g,y)=>new Hi(m,g,this,Nr(t),e,this.name,y)):new Hi(m,c,this,Nr(t),e,this.name),this.addInboundNode(t,d,null,null,i,c,e),this._refCount++,null!=this.activityRegularizer)throw new Zt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return d}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((r,s)=>{null!=r&&null!=t[s]&&t[s]!==r&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Fi(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const r=JSON.stringify(e.outputShapes);-1===t.indexOf(r)&&t.push(r)}if(1===t.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Fi(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Qa(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return O0(this.weights)}build(t){this.built=!0}getWeights(t=!1){return VS(t?this.trainableWeights:this.weights)}setWeights(t){qe(()=>{const e=this.weights;if(e.length!==t.length)throw new oe(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const r=[],s=VS(e);for(let a=0;a<s.length;++a){const i=s[a],c=e[a],d=t[a];if(!_t(i.shape,d.shape))throw new oe(`Layer weight shape ${i.shape} not compatible with provided weight shape ${d.shape}`);r.push([c,d])}US(r)})}addWeight(t,e,r,s,a,i,c,d){if(-1!==this._addedWeightNames.indexOf(t))throw new oe(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==r&&(r="float32"),this.fastWeightInitDuringBuild&&(s=null!=d?d():Fr("zeros"));const m=s.apply(e,r),g=new qi(m,r,t,i,c);return m.dispose(),null!=a&&this.addLoss(()=>a.apply(g.read())),null==i&&(i=!0),i?this._trainableWeights.push(g):this._nonTrainableWeights.push(g),g}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Nr(t),null!=this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(r=>{if(null!=r)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,r,s,a,i,c=null){const d=Nr(t);e=Nr(e),r=Nr(r),s=Nr(s),a=eg(a),i=eg(i);const m=[],g=[],y=[];for(const C of d)m.push(C.sourceLayer),g.push(C.nodeIndex),y.push(C.tensorIndex);new tg({outboundLayer:this,inboundLayers:m,nodeIndices:g,tensorIndices:y,inputTensors:d,outputTensors:e,inputMasks:r,outputMasks:s,inputShapes:a,outputShapes:i},c);for(let C=0;C<e.length;C++)e[C].sourceLayer=this,e[C].nodeIndex=this.inboundNodes.length-1,e[C].tensorIndex=C}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function L0(n,t,e){if((null==t||null!=e&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),0===t.inboundNodes.length)return[n];{const r=t.inboundNodes[e];if(0===r.inboundLayers.length)return r.inputTensors;{const s=[];for(let a=0;a<r.inboundLayers.length;a++){const m=L0(r.inputTensors[a],r.inboundLayers[a],r.nodeIndices[a]);for(const g of m)-1===s.indexOf(g)&&s.push(g)}return s}}}let ng=(()=>{class n extends Pn{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:I0("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new oe("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let r=e.batchInputShape;if(null==r){if(null==e.inputShape)throw new oe("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");r=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new oe("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=r,this.dtype=s,this.inputSpec=[{shape:r}];const a=new Hi(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new tg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[r],outputShapes:[r]})}apply(e,r){throw new oe(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return n.className="InputLayer",n})();function cM(n){if(null==n.batchShape&&null==n.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=n.batchShape&&null!=n.shape)throw new oe("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;null!=n.shape&&null==t&&(t=[null].concat(n.shape));let e=n.dtype;return null==e&&(e="float32"),new ng({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}Ct(ng);class bu{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof bu)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,r){if(null!=this.id2Value[t.id])throw new oe(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function B0(n,t){if(null==n.dtype||n.dtype===t.dtype)return t;try{return Lt(t,n.dtype)}catch(e){throw new oe(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=r&&(this.id2Mask[t.id]=r),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Hi){if(null==this.id2Value[t.id])throw new oe(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new oe(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Hi){if(null==this.id2Value[t.id])throw new oe(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new oe(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Tn(this.id2Mask)}}const P0=new qk,td=new qk;function us(n,t,e,r){const s=null!=e&&e.training,a=Array.isArray(n),i=a?n:[n],c=i.map(k=>k.name),d=[],m=t.names();for(const k of c)-1!==m.indexOf(k)?d.push(t.getValue(k)):d.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const g=c.join(",")+"|"+t.names().sort().join(",");let C,y=P0.get(g);if(null==y){const k=function M$(n,t){q(null!=n&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],r={};if(1===n.length){const s=fM(n[0],t);e=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of n){const{sorted:i,recipientMap:c}=fM(a,t);for(const d of i)s.has(d.name)||(e.push(d),s.add(d.name));for(const d in c)null==r[d]&&(r[d]=new Set),c[d].forEach(m=>r[d].add(m))}}return{sorted:e,recipientCounts:D$(r)}}(i,t);y=k.sorted,C=k.recipientCounts,P0.put(g,y),td.put(g,C)}C={},s||Object.assign(C,td.get(g));const T=new bu(t);for(let k=0;k<y.length;++k){if(null!=r){const Ae=Fp().numTensors;Ae>r.maxNumTensors&&(r.maxNumTensors=Ae),Ae<r.minNumTensors&&(r.minNumTensors=Ae)}const D=y[k],M=D.sourceLayer;if(M instanceof ng)continue;const R=[],$=[],V=[];let G=!1;for(const Ae of D.inputs){const ke=T.getValue(Ae),Ue=T.getMask(Ae);R.push(ke),$.push(Ue),null!=Ue&&(G=!0),s||(C[Ae.name]--,0===C[Ae.name]&&!t.hasKey(Ae)&&-1===c.indexOf(Ae.name)&&!ke.isDisposed&&!0!==Ae.sourceLayer.stateful&&V.push(ke))}G&&((e=e||{}).mask=$[0]);const K=Nr(M.apply(R,e));let ae=null;M.supportsMasking&&(ae=M.computeMask(R,$));const le=Ro(D),he=Array.isArray(le)?le:[le];for(let Ae=0;Ae<he.length;++Ae){T.hasKey(he[Ae])||T.add(he[Ae],K[Ae],Array.isArray(ae)?ae[0]:ae);const ke=c.indexOf(he[Ae].name);-1!==ke&&(d[ke]=K[Ae])}s||Tn(V)}return T.disposeMasks(),a?d:d[0]}function D$(n){const t={};for(const e in n)t[e]=n[e].size;return t}function fM(n,t){const e=new Set,r=[],s={};for(const c of t.names())e.add(c);const a=[],i=[];for(a.push(n);a.length>0;){const c=a[a.length-1];if(e.has(c.name)){a.pop();continue}const d=i[i.length-1]===a.length-1;if(0===c.inputs.length||d)a.pop(),r.push(c),e.add(c.name),d&&i.pop();else{i.push(a.length-1);for(const m of c.inputs)null==s[m.name]&&(s[m.name]=new Set),s[m.name].add(c.name),!e.has(m.name)&&a.push(m)}}return{sorted:r,recipientMap:s}}function Ro(n){let t;if(1===n.sourceLayer.inboundNodes.length)t=n.sourceLayer.output;else{let e=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(const s of n.sourceLayer.inboundNodes[r].outputTensors)if(s.id===n.id){e=r;break}t=n.sourceLayer.getOutputAt(e)}return t}function z0(n,t){return qe(()=>Is(Kt(Ce(n,n),t,!0)))}He().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function k$(n){null!=P0&&P0.setMaxEntries(n),null!=td&&td.setMaxEntries(n)});class rg extends el{getConfig(){return{}}}let sg=(()=>{class n extends rg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return qe(()=>{const r=z0(e,this.axis),s=oa(r,0,this.maxValue);return Ce(e,nn(s,Nt(Gr(),r)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return n.className="MaxNorm",n})();Ct(sg);let hM=(()=>{class n extends rg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return qe(()=>nn(e,Nt(Gr(),z0(e,this.axis))))}getConfig(){return{axis:this.axis}}}return n.className="UnitNorm",n})();Ct(hM);let WS=(()=>{class n extends rg{apply(e){return Oi(e)}}return n.className="NonNeg",n})();Ct(WS);let Yc=(()=>{class n extends rg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return qe(()=>{const r=z0(e,this.axis),s=Nt(Ce(this.rate,oa(r,this.minValue,this.maxValue)),Ce(1-this.rate,r));return Ce(e,nn(s,Nt(Gr(),r)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return n.className="MinMaxNorm",n})();Ct(Yc);const dM={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function hr(n){return RS(n)}function V0(n,t={}){return Km(n,Fa.getMap().classNameMap,t,"constraint")}function xs(n){return null==n?null:"string"==typeof n?V0({className:n in dM?dM[n]:n,config:{}}):n instanceof rg?n:V0(n)}function R$(n){return new sg(n)}function Ps(n){return new hM(n)}function pM(){return new WS}function GS(n){return new Yc(n)}function $$(){return new nM}function O$(){return new Ui}function mM(n){return new rM(n)}function gM(n){return new sM(n)}function F$(n){return new R0(n)}function vM(n){return new Nl(n)}function L$(n){return new Ut(n)}function yM(n){return new Na(n)}function B$(n){return new LS(n)}function P$(n){return new Sl(n)}function bM(n){return new BS(n)}function z$(n){return new $0(n)}function V$(n){return new PS(n)}function xM(n){return new Xs(n)}function wM(n){return new Wi(n)}function xu(n){return Sa.apply(this,arguments)}function Sa(){return(Sa=(0,Fe.Z)(function*(n){if(null==n)return;const t=[],e=[],r=[];for(const s in n){const a=n[s];if("number"!=typeof a){const i=a;t.push(i.data()),e.push(s),r.push(i)}}if(t.length>0){const s=yield Promise.all(t);for(let a=0;a<s.length;++a)n[e[a]]=s[a][0];Tn(r)}})).apply(this,arguments)}function NM(n){if(null!=n)for(const t in n){const e=n[t];"number"!=typeof e&&e.dispose()}}class Jc{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return(0,Fe.Z)(function*(){})()}onEpochEnd(t,e){return(0,Fe.Z)(function*(){})()}onBatchBegin(t,e){return(0,Fe.Z)(function*(){})()}onBatchEnd(t,e){return(0,Fe.Z)(function*(){})()}onTrainBegin(t){return(0,Fe.Z)(function*(){})()}onTrainEnd(t){return(0,Fe.Z)(function*(){})()}setModel(t){}}class ag{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){var r=this;return(0,Fe.Z)(function*(){null==e&&(e={});for(const s of r.callbacks)yield s.onEpochBegin(t,e)})()}onEpochEnd(t,e){var r=this;return(0,Fe.Z)(function*(){null==e&&(e={});for(const s of r.callbacks)yield s.onEpochEnd(t,e)})()}onBatchBegin(t,e){var r=this;return(0,Fe.Z)(function*(){null==e&&(e={});for(const s of r.callbacks)yield s.onBatchBegin(t,e)})()}onBatchEnd(t,e){var r=this;return(0,Fe.Z)(function*(){null==e&&(e={});for(const s of r.callbacks)yield s.onBatchEnd(t,e)})()}onTrainBegin(t){var e=this;return(0,Fe.Z)(function*(){null==t&&(t={});for(const r of e.callbacks)yield r.onTrainBegin(t)})()}onTrainEnd(t){var e=this;return(0,Fe.Z)(function*(){null==t&&(t={});for(const r of e.callbacks)yield r.onTrainEnd(t)})()}}class W$ extends Jc{constructor(){super()}onEpochBegin(t){var e=this;return(0,Fe.Z)(function*(){e.seen=0,e.totals={}})()}onBatchEnd(t,e){var r=this;return(0,Fe.Z)(function*(){null==e&&(e={});const s=null==e.size?0:e.size;r.seen+=s;for(const a in e){const i=e[a];if("number"==typeof i)r.totals.hasOwnProperty(a)||(r.totals[a]=0),r.totals[a]=r.totals[a]+i*s;else{let c;a in r.totals?c=r.totals[a]:r.totals[a]=0;const d=qe(()=>Nt(r.totals[a],Ce(i,s)));r.totals[a]=d,null!=c&&c.dispose()}}})()}onEpochEnd(t,e){var r=this;return(0,Fe.Z)(function*(){if(null!=e)for(const s of r.params.metrics)null!=r.totals[s]&&("number"==typeof r.totals[s]?e[s]=r.totals[s]/r.seen:qe(()=>{const a=Ce(nn(1,r.seen),r.totals[s]);e[s]=a,r.totals[s].dispose(),Qr(e[s])}))})()}}class SM extends Jc{onTrainBegin(t){var e=this;return(0,Fe.Z)(function*(){e.epoch=[],e.history={}})()}onEpochEnd(t,e){var r=this;return(0,Fe.Z)(function*(){null==e&&(e={}),r.epoch.push(t);for(const s in e)null==r.history[s]&&(r.history[s]=[]),r.history[s].push(e[s])})()}syncData(){var t=this;return(0,Fe.Z)(function*(){const e=[],r=[],s=[];for(const i in t.history){const c=t.history[i];for(let d=0;d<c.length;++d)"number"!=typeof c[d]&&(e.push(c[d].data()),r.push(i),s.push(d))}const a=yield Promise.all(e);for(let i=0;i<a.length;++i)t.history[r[i]][s[i]].dispose(),t.history[r[i]][s[i]]=a[i][0]})()}}class CM extends Jc{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Qy,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Vl(this.yieldEvery)&&(this.maybeWait=function Oe(n,t,e){let s,r=null!=e?e():Cs();return(...i)=>{const c=null!=e?e():Cs();return c-r<t||(r=c,s=n(...i)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,r){var s=this;return(0,Fe.Z)(function*(){const a=[];null!=s.yield&&(yield xu(r),a.push(s.yield(t,e,r))),a.push(s.nextFrameFunc()),yield Promise.all(a)})()}onEpochBegin(t,e){var r=this;return(0,Fe.Z)(function*(){r.currentEpoch=t,null!=r.epochBegin&&(yield xu(e),yield r.epochBegin(t,e))})()}onEpochEnd(t,e){var r=this;return(0,Fe.Z)(function*(){const s=[];null!=r.epochEnd&&(yield xu(e),s.push(r.epochEnd(t,e))),"epoch"===r.yieldEvery&&s.push(r.nextFrameFunc()),yield Promise.all(s)})()}onBatchBegin(t,e){var r=this;return(0,Fe.Z)(function*(){null!=r.batchBegin&&(yield xu(e),yield r.batchBegin(t,e))})()}onBatchEnd(t,e){var r=this;return(0,Fe.Z)(function*(){const s=[];null!=r.batchEnd&&(yield xu(e),s.push(r.batchEnd(t,e))),"batch"===r.yieldEvery?s.push(r.nextFrameFunc()):Vl(r.yieldEvery)&&s.push(r.maybeWait(r.currentEpoch,t,e)),yield Promise.all(s)})()}onTrainBegin(t){var e=this;return(0,Fe.Z)(function*(){null!=e.trainBegin&&(yield xu(t),yield e.trainBegin(t))})()}onTrainEnd(t){var e=this;return(0,Fe.Z)(function*(){null!=e.trainEnd&&(yield xu(t),yield e.trainEnd(t))})()}}function IM(n,t){return null==n&&(n={}),n instanceof Jc?[n]:Array.isArray(n)&&n[0]instanceof Jc?n:Nr(n).map(r=>new CM(r,t))}let _M=(()=>{class n{constructor(){}static registerCallbackConstructor(e,r){q(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),n.checkForDuplicate(r),null==n.constructors[e]&&(n.constructors[e]=[]),n.constructors[e].push(r)}static checkForDuplicate(e){for(const r in n.constructors)n.constructors[+r].forEach(a=>{if(a===e)throw new oe("Duplicate callback constructor.")})}static clear(){n.constructors={}}static createCallbacks(e){const r=[];for(const s in n.constructors){const a=+s;e>=a&&r.push(...n.constructors[a])}return r.map(s=>new s)}}return n.constructors={},n})();function TM(n,t,e,r,s,a,i,c,d){const m=new SM,g=[new W$,..._M.createCallbacks(t)];null!=n&&g.push(...n),g.push(m);const y=new ag(g);return y.setParams({epochs:e,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:c,metrics:d}),{callbackList:y,history:m}}function xi(n,t={},e=!1){return Km(n,Fa.getMap().classNameMap,t,"layer",e)}function U0(n,t){return qe(()=>{"float32"!==n.dtype&&(n=Lt(n,"float32"));const e=Kt(Jm(n),t,!0),r=su(e.shape,Gr()),s=Is(gi(e,r));return nn(n,s)})}function ri(n,t){return qe(()=>Ir(Jm(Ht(t,n)),-1))}function W0(n,t){return qe(()=>Ir(es(Ht(t,n)),-1))}function Ki(n,t){return qe(()=>{const e=Ht(n,t),r=oa(es(n),Gr(),Number.MAX_VALUE),s=es(nn(e,r));return Ce(100,Ir(s,-1))})}function ig(n,t,e=!1){return qe(()=>{if(e)t=Uh(t);else{const r=Kt(t,t.shape.length-1,!0);t=nn(t,r)}return t=oa(t,Gr(),1-Gr()),cr(Kt(Ce(Lt(n,"float32"),ya(t)),t.shape.length-1))})}function G0(n,t,e=!1){return qe(()=>{const r=Lt(Bc(function p$(n){const t=[bl(n.shape)];return $e(n,t)}(n)),"int32"),s=(t=oa(t,Gr(),1-Gr())).shape;return ig($e(Dc(r,s[s.length-1]),s),t,e)})}function q0(n,t){return qe(()=>{let e;return e=oa(t,Gr(),1-Gr()),e=ya(nn(e,Ht(1,e))),Ir(function H$(n,t){if(!_t(n.shape,t.shape))throw new oe(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return qe(()=>{const e=Oi(t),r=cr(es(t));return Nt(Ht(e,Ce(t,n)),$h(va(r)))})}(n,e),-1)})}function qS(n,t){return qe(()=>{const e=U0(n,-1),r=U0(t,-1),s=Ce(e,r);return cr(Kt(s,-1))})}const H0={meanSquaredError:ri,meanAbsoluteError:W0,meanAbsolutePercentageError:Ki,meanSquaredLogarithmicError:function AM(n,t){return qe(()=>{const e=oa(t,Gr(),Number.MAX_VALUE),r=ya(Nt(1,e)),s=oa(n,Gr(),Number.MAX_VALUE),a=ya(Nt(1,s));return Ir(Jm(Ht(r,a)),-1)})},squaredHinge:function G$(n,t){return qe(()=>{const e=gi(0,Ht(1,Ce(n,t)));return Ir(Jm(e),-1)})},hinge:function EM(n,t){return qe(()=>{const e=gi(0,Ht(1,Ce(n,t)));return Ir(e,-1)})},categoricalHinge:function q$(n,t){return qe(()=>{const e=Kt(Ce(n,t),-1),r=La(Ce(Ht(1,n),t),-1);return gi(0,Nt(1,Ht(r,e)))})},logcosh:function Nn(n,t){return qe(()=>{const e=Math.log(2),r=Ht(t,n),s=Ht(Nt(r,$i(Ce(-2,r))),e);return Ir(s,-1)})},categoricalCrossentropy:ig,sparseCategoricalCrossentropy:G0,binaryCrossentropy:q0,kullbackLeiblerDivergence:function K$(n,t){return qe(()=>{const e=oa(n,Gr(),1),r=oa(t,Gr(),1);return Kt(Ce(n,ya(nn(e,r))),-1)})},poisson:function Z$(n,t){return qe(()=>{const e=ya(Nt(Gr(),t));return Ir(Ht(t,Ce(n,e)),-1)})},cosineProximity:qS};function HS(n){if("string"==typeof n){if(n in H0)return H0[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new oe(t)}return n}function KS(n,t){return qe(()=>{const e=Ce(.5,ba(t)),r=Bi(Fs(t,e),n.dtype);return Ir(ga(n,r),-1)})}function ZS(n,t){return qe(()=>Bi(ga(nl(n,-1),nl(t,-1)),"float32"))}function kM(n,t){return qe(()=>Lt(Kt(ja(ga(n,1),ga(t,1))),"float32"))}function MM(n,t){return qe(()=>{const e=kM(n,t),r=function Y$(n,t){return qe(()=>Lt(Kt(ja(ga(n,0),ga(t,1))),"float32"))}(n,t),s=Nt(e,r);return Lt(ps(Fs(s,0),nn(e,s),0),"float32")})}function DM(n,t){return q0(n,t)}function RM(n,t){return n.rank===t.rank&&(n=pu(n,[n.rank-1])),(t=nl(t,-1)).dtype!==n.dtype&&(t=Lt(t,n.dtype)),Lt(ga(n,t),"float32")}const Cl=ig,og=G0,K0={binaryAccuracy:KS,categoricalAccuracy:ZS,precision:MM,categoricalCrossentropy:Cl,sparseCategoricalCrossentropy:og,mse:ri,MSE:ri,mae:W0,MAE:W0,mape:Ki,MAPE:Ki,cosine:qS};function oO(n){if("string"==typeof n&&n in K0)return K0[n];if("string"!=typeof n&&null!=n)return n;throw new oe(`Unknown metric ${n}`)}function ug(n){if(Va(null!==n,`Unknown LossOrMetricFn ${n}`),"string"==typeof n)return n;{let t;for(const e of Object.keys(H0))if(H0[e]===n){t=e;break}if(void 0!==t)return t;for(const e of Object.keys(K0))if(K0[e]===n){t=e;break}return void 0!==t?t:n.name}}function OM(n,t,e=!1){if(null==n||"object"!=typeof n||Object.getPrototypeOf(n)!==Object.prototype||!jS(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const r=JSON.stringify(n);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function jS(n){if(null===n)return!0;if("object"==typeof n){if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if("string"!=typeof e||!jS(n[e]))return!1;return!0}if(Array.isArray(n)){for(const t of n)if(!jS(t))return!1;return!0}return!1}{const t=typeof n;return"string"===t||"number"===t||"boolean"===t}}function lg(n,t,e=console.log){let r="";for(let s=0;s<n.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=n[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);e(r)}function hO(n,t,e){let r,s;try{s=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch(d){s="multiple"}try{r=JSON.stringify(n.outputShape)}catch(d){r="multiple"}lg([`${n.name} (${n.getClassName()})`,s,r,n.countParams().toString()],t,e)}function dO(n,t,e,r){let s,a;try{a=n.inboundNodes.map(y=>JSON.stringify(y.inputShapes)).join(",")}catch(y){a="multiple"}try{s=JSON.stringify(n.outputShape)}catch(y){s="multiple"}const i=[];for(const y of n.inboundNodes)if(!(null!=e&&e.length>0&&-1===e.indexOf(y)))for(let C=0;C<y.inboundLayers.length;++C)i.push(`${y.inboundLayers[C].name}[${y.nodeIndices[C]}][${y.tensorIndices[C]}]`);const c=n.name,d=n.getClassName(),m=0===i.length?"":i[0];lg([`${c} (${d})`,a,s,n.countParams().toString(),m],t,r);for(let y=1;y<i.length;++y)lg(["","","","",i[y]],t,r)}function XS(n,t,e){return("inboundNodes"===n||"outputLayers"===n||"inputLayers"===n)&&0===t&&"string"==typeof e}function cg(n,t){if(null===n)return null;if("string"==typeof n)return Hc(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],r=n.length;for(let s=0;s<r;++s){const a=n[s];XS(t,s,a)?e.push(a):e.push(cg(a,t))}return e}{const e={};for(const r of Object.keys(n)){const s=n[r];if("name"===r&&"string"==typeof s)e[r]=s;else{const a=Hc(r);e[a]=cg(s,a)}}return e}}function YS(n,t){if(null==n)return null;if("string"==typeof n)return vu(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],r=n.length;for(let s=0;s<r;++s){const a=n[s];XS(t,s,a)?e.push(a):e.push(YS(a,t))}return e}{const e={};for(const r of Object.keys(n)){const s=n[r];e[vu(r)]="name"!==r&&"className"!==r||"string"!=typeof s?YS(s,r):s}return e}}const Z0="4.4.0";class Zi extends Pn{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const $=this.getClassName().toLowerCase();this.name=I0($)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(t.inputs)?t.inputs.slice():[t.inputs],this.outputs=Array.isArray(t.outputs)?t.outputs.slice():[t.outputs],wn(this.inputs).length!==this.inputs.length)throw new oe(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map($=>$.name)}`);wn(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map($=>$.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const $ of this.outputs){const G=$.nodeIndex,K=$.tensorIndex;this.outputLayers.push($.sourceLayer),this.outputLayersNodeIndices.push(G),this.outputLayersTensorIndices.push(K)}for(const $ of this.inputs){const V=$.sourceLayer,G=$.nodeIndex,K=$.tensorIndex;Va(0===G,"input layer has >1 nodes"),Va(0===K,"input layer has >1 tensors"),this.inputLayers.push(V),this.inputLayersNodeIndices.push(G),this.inputLayersTensorIndices.push(K)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let $=0;$<this.inputLayers.length;$++){const V=this.inputLayers[$];if(!(V instanceof ng))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${$} (0-based) originates from layer type ${V.getClassName()}.`);this.inputNames.push(V.name),this.feedInputShapes.push(V.batchInputShape),this.feedInputNames.push(V.name)}for(const $ of this.outputLayers)this.outputNames.push($.name);this.internalInputShapes=this.inputs.map($=>$.shape),this.internalOutputShapes=this.outputs.map($=>$.shape);const e={},r={},s={},a={},i={},c=[],d=($,V,G,K,ae,le)=>{(null==K||null==ae||null==le)&&(K=$.sourceLayer,ae=$.nodeIndex,le=$.tensorIndex);const he=K.inboundNodes[ae];if(-1!==G.indexOf(he))throw new Qa(`The tensor ${$.name} at layer "${K.name}" is part of a cycle.`);if(-1!==V.indexOf(he))return;this.containerNodes.add(Zi.nodeKey(K,ae)),K.id in i||(i[K.id]=Object.keys(i).length),-1===G.indexOf(he)&&G.push(he);const Ae=he.inboundLayers.length;for(let ke=0;ke<Ae;ke++)d(he.inputTensors[ke],V,G,he.inboundLayers[ke],he.nodeIndices[ke],he.tensorIndices[ke]);for(V.push(he);G.indexOf(he)>=0;)G.splice(G.indexOf(he),1);c.push(he)},m=[],g=[];for(const $ of this.outputs)d($,m,g);const y=c.slice().reverse();for(const $ of y){r[$.id]=$,$.id in e||(e[$.id]=0);let V=e[$.id];V=Math.max(V,null==s[$.outboundLayer.id]?0:s[$.outboundLayer.id]),s[$.outboundLayer.id]=V,a[$.outboundLayer.id]=$.outboundLayer,e[$.id]=V;for(let K=0;K<$.inboundLayers.length;K++){const he=$.inboundLayers[K].inboundNodes[$.nodeIndices[K]];e[he.id]=Math.max(V+1,null==e[he.id]?0:e[he.id]),r[he.id]=he}}const C={};for(const $ in e){const V=e[$];V in C||(C[V]=[]),C[V].push(r[$])}const T={};for(const $ in s){const V=s[$];V in T||(T[V]=[]),T[V].push(a[$])}let k=Object.keys(T).map($=>parseInt($,10)).sort(Zm);this.layers=[];for(const $ of k){const V=T[$];V.sort((G,K)=>{const ae=i[G.id],le=i[K.id];return ae<le?-1:ae>le?1:0});for(const G of V)G instanceof Zi&&this.internalContainerRefs.push(G),this.layers.push(G)}this.layersByDepth=T,k=Object.keys(C).map($=>parseInt($,10)).sort(Zm);const D=this.inputs.slice(),M=[];for(const $ of k)for(const V of C[$]){const G=V.outboundLayer;if(null!=G){for(const K of V.inputTensors)if(-1===D.indexOf(K))throw new Qa(`Graph disconnected: cannot obtain value for tensor ${K} at layer "${G.name}". The following previous layers were accessed without issue: ${M}`);for(const K of V.outputTensors)D.push(K);M.push(G.name)}}this.nodesByDepth=C;const R=this.layers.map($=>$.name);for(const $ of R){const V=R.filter(G=>G===$).length;if(1!==V)throw new Qa(`The name "${$}" is used ${V} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(R))}this.outboundNodes=[],this.inboundNodes=[],new tg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map($=>null),outputMasks:this.outputs.map($=>null),inputShapes:this.inputs.map($=>$.shape),outputShapes:this.outputs.map($=>$.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new oe("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const r of this.layers)e.push(...r.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const r={};let s=0;for(const i of this.layers)for(const c of i.weights){if(null!=r[c.originalName])throw new oe(`Duplicate weight name: ${c.originalName}`);r[c.originalName]=c,s++}const a=[];for(const i in t){let c=i;if(null==r[i]){const d=i.split("/");c=d.slice(0,-2).concat([d[d.length-1]]).join("/")}if(null!=r[c])a.push([r[c],t[i]]);else if(e)throw new oe(`Provided weight data has no target variable: ${i}`);delete r[c]}if(e){const i=[];for(const c in r)i.push(c);if(i.length>0)throw new oe(`${i.length} of ${s} weights are not set: ${i}`)}US(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Z0}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const r=YS(this.updatedConfig());return e?JSON.stringify(r):r}call(t,e){return qe(()=>{t=Nr(t);const r=new bu;for(let s=0;s<this.inputs.length;++s)r.add(this.inputs[s],t[s]);return us(this.outputs,r,e)})}computeMask(t,e){return qe(()=>{let r;return t=Nr(t),r=null==e?ei(null,t.length):Nr(e),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){const e=eg(t);if(e.length!==this.inputLayers.length)throw new oe(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let c=0;c<e.length;c++)r[this.inputLayers[c].name+"_0_0"]=e[c];const s=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(Zm);if(s.length>1)for(const c of s){const d=this.nodesByDepth[c];for(const m of d){const g=m.outboundLayer;if(-1!==this.inputLayers.map(D=>D.id).indexOf(g.id))continue;const y=[];for(let D=0;D<m.inboundLayers.length;D++)y.push(r[`${m.inboundLayers[D].name}_${m.nodeIndices[D]}_${m.tensorIndices[D]}`]);const T=eg(g.computeOutputShape(wa(y))),k=g.inboundNodes.indexOf(m);for(let D=0;D<T.length;D++)r[`${g.name}_${k}_${D}`]=T[D]}}const a=[],i=[];for(let c=0;c<this.outputLayers.length;c++)i.push(`${this.outputLayers[c].name}_${this.outputLayersNodeIndices[c]}_${this.outputLayersTensorIndices[c]}`);for(let c=0;c<i.length;c++){const d=i[c];Va(d in r),a.push(r[d])}return wa(a)}runInternalGraph(t,e){null==e&&(e=ei(null,t.length));const r={};for(let d=0;d<this.inputs.length;++d)r[this.inputs[d].id]=[t[d],e[d]];const s=Object.keys(this.nodesByDepth).map(d=>parseInt(d,10)).sort(Zm);for(const d of s){const m=this.nodesByDepth[d];for(const g of m){const y=g.outboundLayer,C=g.inputTensors,T=g.outputTensors,k=new Array;for(const D of C)D.id in r&&k.push(r[D.id]);if(k.length===C.length){let M,R,$,V,D={};if(null!=g.callArgs&&(D=g.callArgs),1===k.length){const[G,K]=k[0];null==D.mask&&(D.mask=K),$=Nr(y.call(G,D)),V=Nr(y.computeMask(G,K)),M=[G],R=[K]}else M=k.map(G=>G[0]),R=k.map(G=>G[1]),null==D.mask&&(D.mask=R),$=Nr(y.call(M,D)),V=Nr(y.computeMask(M,R));if(y.activityRegularizer)throw new Zt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let G=0;G<T.length;++G)r[T[G].id]=[$[G],V[G]]}}}const a=[],i=[],c=[];for(const d of this.outputs){Va(d.id in r,`Could not compute output ${d.name} : ${d.id}`);const[m,g]=r[d.id];c.push(m.shape),a.push(m),i.push(g)}return[a,i,c]}buildNodeConversionMap(t){const e={};let r;for(const s of this.layers){r=s instanceof Zi?1:0;for(let a=0;a<s.inboundNodes.length;a++){const i=Zi.nodeKey(s,a);this.containerNodes.has(i)&&(e[i]=r,r+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new oe(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new oe("Provide either a layer name or layer index");for(const r of this.layers)if(r.name===t)return r;throw new oe(`No such layer: ${t}`)}calculateLosses(){return qe(()=>{const t=[];for(const e of this.layers)for(let r=0;r<e.inboundNodes.length;++r){const s=Zi.nodeKey(e,r);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),r=[];for(const i of this.layers){const c=i.getClassName(),d=i.getConfig(),m=[];for(let y=0;y<i.inboundNodes.length;y++){const C=i.inboundNodes[y],T=Zi.nodeKey(i,y);let k={};if(this.containerNodes.has(T)){if(C.callArgs)try{JSON.stringify(C.callArgs),k=C.callArgs}catch(D){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${C.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),k={}}if(C.inboundLayers.length>0){const D=[];for(let M=0;M<C.inboundLayers.length;M++){const R=C.inboundLayers[M],V=C.tensorIndices[M];let K=e[Zi.nodeKey(R,C.nodeIndices[M])];null==K&&(K=0),D.push([R.name,K,V,k])}m.push(D)}}}const g={};g.name=i.name,g.className=c,g.config=d,g.inboundNodes=m,r.push(g)}t.layers=r;const s=[];for(let i=0;i<this.inputLayers.length;i++){const c=this.inputLayers[i],m=Zi.nodeKey(c,this.inputLayersNodeIndices[i]);if(!this.containerNodes.has(m))continue;let g=e[m];null==g&&(g=0),s.push([c.name,g,this.inputLayersTensorIndices[i]])}t.inputLayers=s;const a=[];for(let i=0;i<this.outputLayers.length;i++){const c=this.outputLayers[i],m=Zi.nodeKey(c,this.outputLayersNodeIndices[i]);if(!this.containerNodes.has(m))continue;let g=e[m];null==g&&(g=0),a.push([c.name,g,this.outputLayersTensorIndices[i]])}return t.outputLayers=a,t}static fromConfig(t,e,r={},s=!1){const a={},i={};function c(M,R){M.name in i?i[M.name].push(R):i[M.name]=[R]}function d(M,R){const $=[];let V;for(const G of R){const K=G[0],ae=G[1],le=G[2];if(V=null==G[3]?{}:G[3],!(K in a))return void c(M,R);const he=a[K];if(he.inboundNodes.length<=ae)return void c(M,R);$.push(he.inboundNodes[ae].outputTensors[le])}$.length>0&&M.apply(wa($),V)}function m(M){const R=M.name,$=xi(M,null!=e.customObjects?e.customObjects:{});$.setFastWeightInitDuringBuild(s),a[R]=$,M.inboundNodes.forEach(G=>{if(!(G instanceof Array))throw new oe(`Corrupted configuration, expected array for nodeData: ${G}`);c($,G)})}const g=e.name,y=e.layers;for(const M of y)m(M);for(;!s$(i);)for(const M of y){const R=a[M.name];if(R.name in i){const $=i[R.name];delete i[R.name];for(const V of $)d(R,V)}}const C=[],T=[],k=e.inputLayers;for(const M of k){const R=M[0],$=M[1],V=M[2];Va(R in a),C.push(a[R].inboundNodes[$].outputTensors[V])}const D=e.outputLayers;for(const M of D){const R=M[0],$=M[1],V=M[2];Va(R in a),T.push(a[R].inboundNodes[$].outputTensors[V])}return new t({inputs:C,outputs:T,name:g})}get stateful(){if(this._stateful)throw new oe("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){qe(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function FM(n,t){return function JS(n,t,e){const r=t.length;if(null==n||Array.isArray(n)&&0===n.length)return t.map(s=>null);if(1===r)return Array.isArray(n)&&1===n.length?n:"object"==typeof n&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}if("object"==typeof n&&Object.keys(n).length>0&&"object"==typeof n[Object.keys(n)[0]]){const s=[];return t.forEach(a=>{s.push(a in n?n[a]:null)}),s}throw new Error(`The model has multiple (${r}) outputs, so ${e} must be either an array with ${r} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}(n,t,"classWeight")}function fg(n,t,e,r){return QS.apply(this,arguments)}function QS(){return(QS=(0,Fe.Z)(function*(n,t,e,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=e){const s=qe(()=>{if(1===n.shape.length)return ki(n);if(2===n.shape.length){if(n.shape[1]>1)return nl(n,1);if(1===n.shape[1])return $e(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(yield s.data());Tn(s);const i=[];return a.forEach(c=>{if(null==e[c])throw new Error(`classWeight must contain all classes in the training data. The class ${c} exists in the data but not in classWeight`);i.push(e[c])}),rs(i,"float32")}return null})).apply(this,arguments)}function LM(n,t){return Ce(n,t)}function eC(n,t){let e,r;e=t.xs,r=t.ys,q(null!=e&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=BM("input",n.inputNames,e),i=BM("output",n.outputNames,r),c=a[0].shape[0];q(a.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),q(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let d=0;d<a.length;d++)q(a[d].shape[0]===c,()=>`Batch size mismatch: input ${n.inputNames[d]} has ${a[d].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);for(let d=0;d<i.length;d++)q(i[d].shape[0]===c,()=>`Batch size mismatch: output ${n.outputNames[d]} has ${i[d].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);return{xs:a,ys:i}}function BM(n,t,e){if(e instanceof jn)return[e];if(Array.isArray(e))return q(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const r=[];for(const s of t){if(null==e[s])throw new oe(`The feature data generated by the dataset lacks the required ${n} key '${s}'.`);r.push(e[s])}return r}}function PM(n){if(3===n.length)throw new Zt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}function tC(){return(tC=(0,Fe.Z)(function*(n,t,e){const r=null!=e.batchesPerEpoch;if(q(null!=n.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),q(null!=e,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),q(null!=e.epochs&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),q(!r||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),q(null==e.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const s=null!=e.validationData;let a,i;if(s)if(zM(e.validationData))q(null==e.validationBatches||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const M=PM(e.validationData);a=M.xs,i=M.ys}const c=n.makeTrainFunction(),d=n.getDedupedMetricsNames();let m;m=s?d.slice().concat(d.map(M=>"val_"+M)):d.slice();const g=IM(e.callbacks,e.yieldEvery),y=null==e.verbose?1:e.verbose,{callbackList:C,history:T}=TM(g,y,e.epochs,null,null,gO(t,e),null,s,m);C.setModel(n),n.history=T,yield C.onTrainBegin(),n.stopTraining_=!1;let k=null==e.initialEpoch?0:e.initialEpoch,D=yield t.iterator();for(;k<e.epochs;){const M={};yield C.onEpochBegin(k);let R=0,$=0;for(r||(D=yield t.iterator());!r||R<e.batchesPerEpoch;){const V=yield D.next();if(r&&V.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${R} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=V.value){const{xs:G,ys:K}=eC(n,V.value),ae={};ae.batch=$,ae.size=G[0].shape[0],yield C.onBatchBegin($,ae);const le=[];if(null!=e.classWeight){const ke=FM(e.classWeight,n.outputNames);for(let Ue=0;Ue<ke.length;++Ue)le.push(yield fg(K[Ue],null,ke[Ue]))}const he=G.concat(K).concat(le),Ae=c(he);Tn(he);for(let ke=0;ke<d.length;++ke){const Je=Ae[ke];ae[d[ke]]=Je,Qr(Je)}yield C.onBatchEnd($,ae),NM(ae),$++,R++}if(r?R>=e.batchesPerEpoch:V.done){if(s){let G;G=zM(e.validationData)?Nr(yield n.evaluateDataset(e.validationData,{batches:e.validationBatches})):Nr(n.evaluate(a,i,{batchSize:null==e.validationBatchSize?32:e.validationBatchSize,verbose:0}));for(let K=0;K<n.metricsNames.length;++K)M[`val_${n.metricsNames[K]}`]=G[K]}break}if(n.stopTraining_)break}if(yield C.onEpochEnd(k,M),k++,n.stopTraining_)break}return yield C.onTrainEnd(),yield n.history.syncData(),n.history}finally{n.isTraining=!1}})).apply(this,arguments)}function gO(n,t){let e=null;return null!=t.batchesPerEpoch?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function zM(n){return"function"==typeof n.iterator}function VM(n){return"function"==typeof n.next}function nC(){return(nC=(0,Fe.Z)(function*(n,t,e){const r=null!=(e=e||{}).batches,s=n.testFunction;let a=[];if(e.verbose>0)throw new Zt("Verbose mode is not implemented yet.");q(!r||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=VM(t)?t:yield t.iterator();let c=0,d=0;for(;!r||d<e.batches;){const m=yield i.next();if(a=qe(()=>{if(m.value){const{xs:g,ys:y}=eC(n,m.value),C=g.concat(y),T=qe(()=>s(C));if(Tn(C),0===d)for(let D=0;D<T.length;++D)a.push(ln(0));const k=C[0].shape[0];for(let D=0;D<T.length;++D){const M=T[D],R=a[D];a[D]=qe(()=>Nt(a[D],Ce(k,M))),d>0&&Tn(R)}Tn(T),c+=k,++d}return a}),m.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let m=0;m<a.length;++m){const g=a[m];a[m]=nn(a[m],c),Tn(g)}return wa(a)})).apply(this,arguments)}function j0(n){q(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Es(n,t,e){return null==n?[null]:Array.isArray(n)?n.map(r=>Xc(r,t,e-t)):Xc(n,t,e-t)}function hg(n,t){return qe(()=>null==n?null:Array.isArray(n)?n.map(e=>hg(e,t)):tM(n,"int32"===t.dtype?t:Lt(t,"int32")))}function X0(n,t){const e=[];let r=0,s=null;for(;r<n;)s=r+t,s>=n&&(s=n),e.push([r,s]),r=s;return e}function rC(n){const t=[];n instanceof jn&&(n=[n]);for(let e=0;e<n.length;++e){const r=n[e];if(1===r.rank)t.push(Pi(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ji(n,t){if(null==n)return;const e=[];if(t instanceof jn)e.push(t.id);else if(Array.isArray(t))t.forEach(s=>e.push(s.id));else if(null!=t)for(const s in t)e.push(t[s].id);const r=[];if(n instanceof jn)-1===e.indexOf(n.id)&&r.push(n);else if(Array.isArray(n))n.forEach(s=>{-1===e.indexOf(s.id)&&r.push(s)});else if(null!=n)for(const s in n){const a=n[s];-1===e.indexOf(a.id)&&r.push(a)}r.forEach(s=>{s.isDisposed||s.dispose()})}function nd(n){return Array.isArray(n)}function WM(n){return!function UM(n){return n instanceof jn}(n)&&!nd(n)}function Y0(n,t,e,r=!0,s=""){if(null==t||0===t.length){if(null!=n){let i=!1;if(nd(n)&&n.length>0)i=!0;else if(WM(n)){for(const c in n)if(n.hasOwnProperty(c)){i=!0;break}}else i=!0;if(i)throw new oe(`Error when checking model ${s} expected no data, but got ${n}`)}return[]}if(null==n)return t.map(i=>null);let a;if(WM(n)){n=n,a=[];for(const i of t){if(null==n[i])throw new oe(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(n[i])}}else if(nd(n)){if((n=n).length!==t.length)throw new oe(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);a=n}else{if(n=n,t.length>1)throw new oe(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);a=[n]}if(a=rC(a),null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const c=a[i];if(c.shape.length!==e[i].length)throw new oe(`Error when checking ${s}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${c.shape}`);for(let d=0;d<e[i].length;++d){if(0===d&&!r)continue;const m=c.shape[d],g=e[i][d];if(null!=g&&g>=0&&m!==g)throw new oe(`${s} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${s} received an input with ${c.shape[0]} examples, each with shape [${c.shape.slice(1,c.shape.length)}] (tensor shape [${c.shape}])`)}}return a}function qM(n,t,e,r=!0,s=""){let a;if(Array.isArray(n)){if(n.length!==t.length)throw new oe(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);a=n}else{if(t.length>1)throw new oe(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);a=[n]}if(null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const c=a[i];if(c.shape.length!==e[i].length)throw new oe(`Error when checking ${s}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let d=0;d<e[i].length;++d){if(0===d&&!r)continue;const m=c.shape[d],g=e[i][d];if(null!=g&&g!==m)throw new oe(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}let Il=(()=>{class n extends Zi{constructor(e){super(e),this.isTraining=!1}summary(e,r,s=console.log){if(!this.built)throw new oe("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function lO(n,t,e,r=console.log){const s=function fO(n){let t=!0;const e=[],r=[];for(const s in n.nodesByDepth)e.push(n.nodesByDepth[s]);for(const s of e){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of n.layers){let a=!1;for(const i of s.inboundNodes)if(-1!==r.indexOf(i)){if(a){t=!1;break}a=!0}if(!t)break}return t}(n),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(g=>Math.floor(t*g))),!s){a.push("Receives inputs"),i=[];for(const g in n.nodesByDepth)i.push(...n.nodesByDepth[g])}r("_".repeat(t)),lg(a,e,r),r("=".repeat(t));const c=n.layers;for(let g=0;g<c.length;++g)s?hO(c[g],e,r):dO(c[g],e,i,r),r((g===c.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const d=function cO(n){let t;return t=O0(null!=n.collectedTrainableWeights?n.collectedTrainableWeights:n.trainableWeights),t}(n),m=O0(n.nonTrainableWeights);r(`Total params: ${d+m}`),r(`Trainable params: ${d}`),r(`Non-trainable params: ${m}`),r("_".repeat(t))}(this,e,r,s)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function uO(n){const t={Adagrad:()=>Ao.adagrad(.01),Adadelta:()=>Ao.adadelta(1,.95,Gr()),Adam:()=>Ao.adam(.001,.9,.999,Gr()),Adamax:()=>Ao.adamax(.002,.9,.999,Gr(),0),RMSProp:()=>Ao.rmsprop(.001,.9,0,Gr()),SGD:()=>Ao.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new oe(`Unknown Optimizer ${n}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Di))throw new oe("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let r=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new oe(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);r=e.loss.map(d=>HS(d))}else{const c=HS(e.loss);this.outputs.forEach(d=>{r.push(c)})}else{e.loss=e.loss;for(const c in e.loss)if(-1===this.outputNames.indexOf(c))throw new oe(`Unknown entry in loss dictionary: "${c}". Only expected the following keys: ${this.outputNames}`);for(const c of this.outputNames)null==e.loss[c]&&console.warn(`Output "${c}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${c} during training`),r.push(HS(e.loss[c]))}this.lossFunctions=r,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let c=0;c<this.outputs.length;++c){const d=this.internalOutputShapes[c];this.feedOutputNames.push(this.outputNames[c]),this.feedOutputShapes.push(d),this.feedLossFns.push(this.lossFunctions[c])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],jc("loss",()=>{for(let c=0;c<this.outputs.length;++c){if(-1!==s.indexOf(c))continue;const d=this.lossFunctions[c];this.outputs.length>1&&(this.metricsTensors.push([d,c]),this.metricsNames.push(this.outputNames[c]+"_loss"))}});const a=function yO(n,t){if(null==n||Array.isArray(n)&&0===n.length)return t.map(r=>[]);let e;if("string"==typeof n||"function"==typeof n)e=[n];else{if(!Array.isArray(n)&&"object"!=typeof n)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);e=n}if(Array.isArray(e))return t.map(r=>e);{const r=[];for(const s of t){let a=e.hasOwnProperty(s)?e[s]:[];Array.isArray(a)||(a=[a]),r.push(a)}return r}}(e.metrics,this.outputNames),i=(c,d,m)=>{this.outputNames.length>1&&(d=this.outputNames[c]+"_"+d),this.metricsNames.push(d),this.metricsTensors.push([m,c])};jc("metric",()=>{for(let c=0;c<this.outputs.length;++c)-1===s.indexOf(c)&&(g=>{let C,T,k;for(const D of g){if("string"==typeof D&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(D)){const R=this.internalOutputShapes[c];let $;1===R[R.length-1]||this.lossFunctions[c]===q0?-1!==["accuracy","acc"].indexOf(D)?T=KS:-1!==["crossentropy","ce"].indexOf(D)&&(T=DM):this.lossFunctions[c]===G0?-1!==["accuracy","acc"].indexOf(D)?T=RM:-1!==["crossentropy","ce"].indexOf(D)&&(T=og):-1!==["accuracy","acc"].indexOf(D)?T=ZS:-1!==["crossentropy","ce"].indexOf(D)&&(T=Cl),-1!==["accuracy","acc"].indexOf(D)?$="acc":-1!==["crossentropy","ce"].indexOf(D)&&($="ce"),k=T,C=""+$}else k=oO(D),C=""+ug(D);let M;jc(C,()=>{M=k}),i(c,C,M)}})(a[c])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,r,s={}){const a=null==s.batchSize?32:s.batchSize;j0(a);const c=this.standardizeUserDataXY(e,r,!0,a);try{const d=c[0].concat(c[1]);return this.makeTestFunction(),wa(this.testLoop(this.testFunction,d,a,s.verbose,s.steps))}finally{ji(c[0],e),ji(c[1],r)}}evaluateDataset(e,r){var s=this;return(0,Fe.Z)(function*(){return s.makeTestFunction(),function vO(n,t,e){return nC.apply(this,arguments)}(s,e,r)})()}checkNumSamples(e,r,s,a="steps"){let i;if(null!=s){if(i=null,null!=r)throw new oe(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${r}`)}else{if(null==e)throw new oe(`Either the input data should have a defined shape, or ${a} shoud be specified.`);i=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return i}execute(e,r){if(Array.isArray(r)&&0===r.length)throw new oe("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(r),i=this.retrieveSymbolicTensors(s?r:[r]),c=new bu;if(e instanceof jn&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new oe(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let m=0;m<this.inputs.length;++m)c.add(this.inputs[m],e[m])}else for(const m of this.inputs){const g=e[m.name];if(null==g)throw new oe(`No value is provided for the model's input ${m.name}`);c.add(m,g)}const d=us(i,c);return s?d:d[0]}retrieveSymbolicTensors(e){const r=ei(null,e.length);let s=e.length;for(const a of this.layers){const i=Array.isArray(a.output)?a.output:[a.output],c=i.map(d=>d.name);for(let d=0;d<e.length;++d){const m=c.indexOf(e[d]);if(-1!==m&&(r[d]=i[m],s--),0===s)break}if(0===s)break}if(s>0){const a=[];throw r.forEach((i,c)=>{null==i&&a.push(e[c])}),new oe(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return r}predictLoop(e,r=32,s=!1){return qe(()=>{const a=this.checkNumSamples(e);if(s)throw new Zt("Verbose predictLoop() is not implemented yet.");const i=X0(a,r),c=this.outputs.map(d=>[]);for(let d=0;d<i.length;++d)qe(()=>{const C=Es(e,i[d][0],i[d][1]),T=[];if(Array.isArray(C))for(let D=0;D<C.length;++D)T.push({key:this.inputs[D],value:C[D]});else T.push({key:this.inputs[0],value:C});const k=new bu(T);return us(this.outputs,k)}).forEach((g,y)=>c[y].push(g));return wa(c.map(d=>$r(d,0)))})}predict(e,r={}){const s=rC(e);qM(s,this.inputNames,this.feedInputShapes,!1);try{const a=null==r.batchSize?32:r.batchSize;return j0(a),this.predictLoop(s,a)}finally{ji(s,e)}}predictOnBatch(e){qM(e,this.inputNames,this.feedInputShapes,!0);const r=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,r)}standardizeUserDataXY(e,r,s=!0,a){if(null==this.optimizer_)throw new Qa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let c=0;c<this.feedOutputShapes.length;++c){const d=this.feedOutputShapes[c];i.push(this.feedLossFns[c]===G0?d.slice(0,d.length-1).concat([1]):d)}if(function GM(n,t,e){const r=wn(n.map(a=>a.shape[0]));r.sort();const s=wn(t.map(a=>a.shape[0]));if(s.sort(),r.length>1)throw new oe(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(a=>a.shape))}`);if(s.length>1)throw new oe(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(r.length>0&&s.length>0&&!_t(r,s))throw new oe(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Y0(e,this.feedInputNames,this.feedInputShapes,!1,"input"),r=Y0(r,this.feedOutputNames,i,!1,"target")),function J0(n,t,e){const r=[ri,q0,ig];for(let s=0;s<n.length;++s){const a=n[s],i=t[s],c=e[s];if(null!=i){if(i===ig&&1===a.shape[a.shape.length-1])throw new oe(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const d=a.shape.slice(1),m=c.slice(1);for(let g=0;g<d.length;++g){const y=d[g],C=m[g];if(null!=C&&y!==C)throw new oe(`A target Tensor with shape ${a.shape} was passed for an output of shape ${c}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(r,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new oe(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,r]}standardizeUserData(e,r,s,a,i=!0,c){var d=this;return(0,Fe.Z)(function*(){const[m,g]=d.standardizeUserDataXY(e,r,i,c);if(null!=s)throw new Error("sample weight is not supported yet.");let y=null;if(null!=a){const C=FM(a,d.outputNames);y=[];for(let T=0;T<C.length;++T)y.push(yield fg(g[T],null,C[T]))}return[m,g,y]})()}testLoop(e,r,s,a=0,i){return qe(()=>{const c=this.checkNumSamples(r,s,i,"steps"),d=[];if(a>0)throw new Zt("Verbose mode is not implemented yet.");if(null!=i)throw new Zt("steps mode in testLoop() is not implemented yet");{const m=X0(c,s),g=rs(bs(0,c));for(let y=0;y<m.length;++y){const C=m[y][0],T=m[y][1],k=Xc(g,C,T-C),D=hg(r,k),M=e(D);if(0===y)for(let R=0;R<M.length;++R)d.push(ln(0));for(let R=0;R<M.length;++R)d[R]=Nt(d[R],Ce(T-C,M[R]))}for(let y=0;y<d.length;++y)d[y]=nn(d[y],c)}return d})}getDedupedMetricsNames(){const e=this.metricsNames,r=[];for(let s=0;s<e.length;++s){const a=e[s];let i=a;Hk(e,a)>1&&(i+=`_${Hk(e.slice(0,s),a)}`),r.push(i)}return r}makeTrainFunction(){return e=>{const r=[],s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),c=[],m=this.collectedTrainableWeights.map(C=>C.read());return[this.optimizer_.minimize(()=>{const C=[];for(let M=0;M<this.inputs.length;++M)C.push({key:this.inputs[M],value:s[M]});const T=new bu(C),k=us(this.outputs,T,{training:!0});let D;for(let M=0;M<this.lossFunctions.length;++M){let $=this.lossFunctions[M](a[M],k[M]);null!=i[M]&&($=LM($,i[M]));const V=Ir($);r.push(V),D=0===M?$:Nt(D,$)}for(let M=0;M<this.metricsTensors.length;++M){let R;if(this.outputs.length>1&&M<this.outputs.length)R=r[M];else{const V=this.metricsTensors[M][1];R=Ir((0,this.metricsTensors[M][0])(a[V],k[V]))}Qr(R),c.push(R)}return D=Ir(D),this.calculateLosses().forEach(M=>{D=Nt(D,M)}),D},!0,m)].concat(c)}}makeTestFunction(){this.testFunction=e=>qe(()=>{const r=[];let s;const a=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),c=[];for(let g=0;g<this.inputs.length;++g)c.push({key:this.inputs[g],value:a[g]});const d=new bu(c),m=us(this.outputs,d);for(let g=0;g<this.lossFunctions.length;++g){const C=Ir((0,this.lossFunctions[g])(i[g],m[g]));s=0===g?C:Nt(s,C),r.push(s)}for(let g=0;g<this.metricsTensors.length;++g){const C=this.metricsTensors[g][1],T=Ir((0,this.metricsTensors[g][0])(i[C],m[C]));r.push(T)}return r})}fit(e,r,s={}){var a=this;return(0,Fe.Z)(function*(){if(a.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let i,c,d,m,g,y,C,T,k;a.isTraining=!0;try{const D=null==s.batchSize?32:s.batchSize;j0(D);const M=!1,R=yield a.standardizeUserData(e,r,s.sampleWeight,s.classWeight,M,D);i=R[0],c=R[1],k=R[2];let V,$=!1;if(null!=s.validationData&&s.validationData.length>0){if($=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Zt("validationData including sample weights is not supported yet."):new oe(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);g=s.validationData[0],y=s.validationData[1];const Ue=!0,Je=yield a.standardizeUserData(g,y,null,null,Ue,D);C=Je[0],T=Je[1],V=C.concat(T)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){$=!0;const Ue=Math.floor(i[0].shape[0]*(1-s.validationSplit)),Je=i[0].shape[0];C=Es(i,Ue,Je),d=i,i=Es(i,0,Ue),T=Es(c,Ue,Je),m=c,c=Es(c,0,Ue),V=C.concat(T)}else null!=s.validationSteps&&($=!0);const G=i.concat(c).concat(k);a.checkTrainableWeightsConsistency();const K=a.makeTrainFunction(),ae=a.getDedupedMetricsNames();let le,he;$?(a.makeTestFunction(),le=a.testFunction,he=ae.slice().concat(ae.map(Ue=>"val_"+Ue))):(le=null,V=[],he=ae.slice());const Ae=IM(s.callbacks,s.yieldEvery);return yield a.fitLoop(K,G,ae,D,s.epochs,s.verbose,Ae,le,V,s.shuffle,he,s.initialEpoch,null,null)}finally{a.isTraining=!1,ji(i,e),ji(c,r),ji(d,e),ji(m,r),ji(C,g),ji(T,y),null!=k&&Tn(k)}})()}fitLoop(e,r,s,a,i,c,d,m,g,y,C,T,k,D){var M=this;return(0,Fe.Z)(function*(){null==a&&(a=32),null==i&&(i=1),null==y&&(y=!0),null==T&&(T=0);let R=!1;if(null!=m&&null!=g&&(R=!0),null!=D&&(R=!0,null==k))throw new oe("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const $=M.checkNumSamples(r,a,k,"steps_per_epoch");let V;null!=$&&(V=bs(0,$)),null==c&&(c=1);const{callbackList:G,history:K}=TM(d,c,i,T,$,k,a,R,C);G.setModel(M),M.history=K,yield G.onTrainBegin(),M.stopTraining_=!1;for(let ae=T;ae<i;++ae){yield G.onEpochBegin(ae);const le={};if(null!=k)throw new Zt("stepsPerEpoch mode is not implemented yet.");{if("batch"===y)throw new Zt("batch shuffling is not implemneted yet");y&&zo(V);const he=rs(V),Ae=X0($,a);for(let ke=0;ke<Ae.length;++ke){const Ue={};if(yield G.onBatchBegin(ke,Ue),qe(()=>{const Je=Ae[ke][0],st=Ae[ke][1],at=Xc(he,Je,st-Je);Ue.batch=ke,Ue.size=st-Je;const ot=hg(r,at),ct=e(ot);for(let pt=0;pt<s.length;++pt){const gt=ct[pt];Ue[s[pt]]=gt,Qr(gt)}if(ke===Ae.length-1&&R){const pt=M.testLoop(m,g,a);for(let ut=0;ut<s.length;++ut){const gt=s[ut],At=pt[ut];Qr(At),le["val_"+gt]=At}}}),yield G.onBatchEnd(ke,Ue),NM(Ue),M.stopTraining_)break}he.dispose()}if(yield G.onEpochEnd(ae,le),M.stopTraining_)break}return yield G.onTrainEnd(),yield M.history.syncData(),M.history})()}fitDataset(e,r){var s=this;return(0,Fe.Z)(function*(){return function mO(n,t,e){return tC.apply(this,arguments)}(s,e,r)})()}trainOnBatch(e,r){var s=this;return(0,Fe.Z)(function*(){const a=yield s.standardizeUserData(e,r),i=a[0],c=a[1],m=s.makeTrainFunction()(i.concat(c)),g=[];for(const y of m){const C=yield y.data();g.push(C[0])}return Tn(m),ji(a[0],e),ji(a[1],r),wa(g)})()}getNamedWeights(e){const r=[],s=null!=e&&e.trainableOnly,a=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let c=0;c<a.length;++c)s&&!a[c].trainable||r.push({name:a[c].originalName,tensor:i[c]});return r}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const r=Fp().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=r-Fp().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=vu(this.loss);else if(Array.isArray(this.loss)){for(const r of this.loss)if("string"!=typeof r)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(r=>vu(r))}else{const r=Object.keys(this.loss);e={};const s=this.loss;for(const a of r){if("string"!=typeof s[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=vu(s[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[vu(ug(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>vu(ug(e)));{const e={};for(const r in this.metrics)e[r]=vu(ug(this.metrics[r]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const s=xi(cg(e.optimizer_config));let a,i;if("string"==typeof e.loss)a=Hc(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(c=>Hc(c));else if(null!=e.loss){a={};for(const c in e.loss)a[c]=Hc(e.loss[c])}if(Array.isArray(e.metrics))i=e.metrics.map(c=>Hc(c));else if(null!=e.metrics){i={};for(const c in e.metrics)i[c]=Hc(e.metrics[c])}this.compile({loss:a,metrics:i,optimizer:s})}save(e,r){var s=this;return(0,Fe.Z)(function*(){if("string"==typeof e){const y=Hn(e);if(0===y.length)throw new oe(`Cannot find any save handlers for URL '${e}'`);if(y.length>1)throw new oe(`Found more than one (${y.length}) save handlers for URL '${e}'`);e=y[0]}if(null==e.save)throw new oe("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=yield Bn(s.getNamedWeights(r)),m={modelTopology:s.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Z0}`,convertedBy:null};if(null!=r&&r.includeOptimizer&&null!=s.optimizer){m.trainingConfig=s.getTrainingConfig();const y="optimizer",{data:C,specs:T}=yield Bn(yield s.optimizer.getWeights(),y);a.specs.push(...T),a.data=$a([a.data,C])}return null!=s.userDefinedMetadata&&(OM(s.userDefinedMetadata,s.name,!0),m.userDefinedMetadata=s.userDefinedMetadata),m.weightData=a.data,m.weightSpecs=a.specs,e.save(m)})()}setUserDefinedMetadata(e){OM(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}return n.className="Model",n})();function wO(n,t){return rd.apply(this,arguments)}function rd(){return(rd=(0,Fe.Z)(function*(n,t){"modelTopology"in n||(n={modelTopology:n});let e=(n=n).modelTopology;null!=e.model_config&&(e=e.model_config);const s=xi(cg(e),t);if(null!=n.weightsManifest){const a=yield Jx(n.weightsManifest,n.pathPrefix,s.weights.map(c=>c.originalName)),i={};for(const c of s.weights)i[c.originalName]=a[c.originalName];s.loadWeights(i),Tn(a)}return s})).apply(this,arguments)}function dg(n,t){return _l.apply(this,arguments)}function _l(){return(_l=(0,Fe.Z)(function*(n,t){if(null==t&&(t={}),"string"==typeof n){const e=h_(n,t);if(0===e.length)e.push(t1(n,t));else if(e.length>1)throw new oe(`Found more than one (${e.length}) load handlers for URL '${n}'`);n=e[0]}return Q0(n,void 0,t)})).apply(this,arguments)}function Q0(n,t,e){return pg.apply(this,arguments)}function pg(){return(pg=(0,Fe.Z)(function*(n,t,e){if(null==e&&(e={}),null==n.load)throw new oe("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=yield n.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==e.strict||e.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,c=xi(cg(s),t,i),d=r.trainingConfig;if(null!=d&&c.loadTrainingConfig(d),null!=r.userDefinedMetadata&&c.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new oe("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:m,optimizerWeights:g}=HM(r.weightData,r.weightSpecs);c.loadWeights(m,a),null!=c.optimizer&&g.length>0&&(yield c.optimizer.setWeights(g)),Tn(m),Tn(g.map(y=>y.tensor))}return c})).apply(this,arguments)}function HM(n,t){const e=px(n,t),r={},s=[];return t.forEach(a=>{"optimizer"===a.group?s.push({name:a.name,tensor:e[a.name]}):r[a.name]=e[a.name]}),{modelWeights:r,optimizerWeights:s}}Ct(Il),Ct((()=>{class n extends Il{}return n.className="Functional",n})());let eb=(()=>{class n extends Il{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:I0("sequential_"),null!=e.layers)for(const r of e.layers)this.add(r)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new oe(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const r=e instanceof n||e instanceof Il;let s;if(r){if(s=e,1!==s.outputs.length)throw new oe("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==s.inputs.length)throw new oe("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new oe("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=cM({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(r)this.outputs=s.outputs,this.inputs=s.inputs;else{if(1!==e.inboundNodes.length)throw new oe(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new oe("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=L0(this.outputs[0])}this.inboundNodes=[],new tg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ei(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,r){return null==this.model&&this.build(),this.model.call(e,r)}build(e){if(er(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Il({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,r,s=console.log){this.built||this.build(),super.summary(e,r,s)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,r,s={}){if(!this.built)throw new Qa("The model needs to be compiled before being used.");return this.model.evaluate(e,r,s)}evaluateDataset(e,r){var s=this;return(0,Fe.Z)(function*(){if(!s.built)throw new Qa("The model needs to be compiled before being used.");return s.model.evaluateDataset(e,r)})()}predict(e,r={}){return null==this.model&&this.build(),this.model.predict(e,r)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(e,r,s={}){var a=this;return(0,Fe.Z)(function*(){if(!a.built)throw new Qa("The model needs to be compiled before being used.");return a.model.fit(e,r,s)})()}fitDataset(e,r){var s=this;return(0,Fe.Z)(function*(){if(!s.built)throw new Qa("The model needs to be compiled before being used.");return s.model.fitDataset(e,r)})()}trainOnBatch(e,r){var s=this;return(0,Fe.Z)(function*(){return s.model.trainOnBatch(e,r)})()}static fromConfig(e,r,s={},a=!1){let i,c={};if(r instanceof Array){if(null==r[0].className||"Merge"===r[0].className)throw new oe("Legacy serialization format not supported yet.");i=r}else q(null!=r.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=r.layers,delete r.layers,c=r;const d=new e(c);if(!(d instanceof n))throw new Zt(`Sequential.fromConfig called on non-Sequential input: ${d}`);for(const m of i){const y=xi(m,void 0,a);a&&y.setFastWeightInitDuringBuild(!0),d.add(y)}return d}set stopTraining(e){if(null==this.model)throw new oe("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new oe("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const r of this.layers){const s={};s.className=r.getClassName(),s.config=r.getConfig(),e.push(s)}return{name:this.name,layers:e}}}return n.className="Sequential",n})();function sC(n){return new Il(n)}function KM(n){return new eb(n)}function aC(n){return cM(n)}function ZM(n,t){_M.registerCallbackConstructor(n,t)}Ct(eb);class Ca extends el{getConfig(){return{}}}Ct((()=>{class n extends Ca{apply(e,r=1){return function g$(n,t=1){if(1!==t)throw new Zt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return il(n)}(e,r)}}return n.className="elu",n})()),Ct((()=>{class n extends Ca{apply(e){return zh(e)}}return n.className="selu",n})()),Ct((()=>{class n extends Ca{apply(e){return Oi(e)}}return n.className="relu",n})()),Ct((()=>{class n extends Ca{apply(e){return qe(()=>du(6,Oi(e)))}}return n.className="relu6",n})()),Ct((()=>{class n extends Ca{apply(e){return e}}return n.className="linear",n})()),Ct((()=>{class n extends Ca{apply(e){return Za(e)}}return n.className="sigmoid",n})()),Ct((()=>{class n extends Ca{apply(e){return function y$(n){return qe(()=>{const t=Nt(.5,Ce(.2,n));return oa(t,0,1)})}(e)}}return n.className="hardSigmoid",n})()),Ct((()=>{class n extends Ca{apply(e){return $i(e)}}return n.className="softplus",n})()),Ct((()=>{class n extends Ca{apply(e){return function v$(n){return qe(()=>nn(n,Nt(es(n),1)))}(e)}}return n.className="softsign",n})()),Ct((()=>{class n extends Ca{apply(e){return sl(e)}}return n.className="tanh",n})());let mg=(()=>{class n extends Ca{apply(e,r=-1){return Uh(e,r)}}return n.className="softmax",n})();function wu(n){return n.getClassName()}function nb(n,t={}){return Km(n,Fa.getMap().classNameMap,t,"activation")}function Tl(n){if(null==n){return nb({className:"linear",config:{}})}if("string"==typeof n){const t={};return t.className=n,t.config={},nb(t)}return n instanceof Ca?n:nb(n)}function oC(n){if(null!=n&&"object"!=typeof n)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}Ct(mg),Ct((()=>{class n extends Ca{apply(e,r=-1){return cm(e,r)}}return n.className="logSoftmax",n})()),Ct((()=>{class n extends Ca{apply(e,r=1){return qe(()=>Ce(Za(Ce(e,r)),e))}}return n.className="swish",n})()),Ct((()=>{class n extends Ca{apply(e){return qe(()=>Ce(e,sl($i(e))))}}return n.className="mish",n})());class uC extends el{}let Qc=(()=>{class n extends uC{constructor(e){super(),oC(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return qe(()=>{let r=ns([1]);return this.hasL1&&(r=Nt(r,Kt(Ce(this.l1,es(e))))),this.hasL2&&(r=Nt(r,Kt(Ce(this.l2,Jm(e))))),$e(r,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,r){return new e({l1:r.l1,l2:r.l2})}}return n.className="L1L2",n})();Ct(Qc);const JM={l1l2:"L1L2"};function vr(n){return RS(n)}function QM(n,t={}){return Km(n,Fa.getMap().classNameMap,t,"regularizer")}function Lr(n){return null==n?null:"string"==typeof n?QM({className:n in JM?JM[n]:n,config:{}}):n instanceof uC?n:QM(n)}let lC=(()=>{class n extends Pn{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,r){e=cn(e);let s=Oi(e);return null!=this.maxValue&&(s=oa(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},r=super.getConfig();return Object.assign(e,r),e}}return n.className="ReLU",n})();Ct(lC);let cC=(()=>{class n extends Pn{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,r){const s=cn(e);return Rh(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},r=super.getConfig();return Object.assign(e,r),e}}return n.className="LeakyReLU",n})();Ct(cC);let eD=(()=>{class n extends Pn{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Fr(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Lr(e.alphaRegularizer),this.alphaConstraint=xs(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new oe(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const r=(e=er(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)r[a-1]=1;this.alpha=this.addWeight("alpha",r,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)s[a]=e[a];this.inputSpec=[new Hr({ndim:e.length,axes:s})],this.built=!0}call(e,r){return e=cn(e),Bh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Fn(this.alphaInitializer),alphaRegularizer:vr(this.alphaRegularizer),alphaConstraint:hr(this.alphaConstraint),sharedAxes:this.sharedAxes},r=super.getConfig();return Object.assign(e,r),e}}return n.className="PReLU",n})();Ct(eD);let fC=(()=>{class n extends Pn{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Zt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,r){const s=cn(e);return il(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},r=super.getConfig();return Object.assign(e,r),e}}return n.className="ELU",n})();Ct(fC);let tD=(()=>{class n extends Pn{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,r){const s=cn(e);return Ce(s,Lt(Fs(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},r=super.getConfig();return Object.assign(e,r),e}}return n.className="ThresholdedReLU",n})();Ct(tD);let nD=(()=>{class n extends Pn{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new mg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,r){const s=cn(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Softmax",n})();function sd(n,t,e){if("number"==typeof n)return ei(n,t);if(n.length!==t)throw new oe(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let r=0;r<t;++r){const s=n[r];if(!Qk(s))throw new oe(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${s}`)}return n}function Xi(n,t,e,r,s=1){if(null==n)return n;let i;return i="same"===e?n:n-(t+(t-1)*(s-1))+1,Math.floor((i+r-1)/r)}function $o(n,t,e,r){if(null==n)return null;if("valid"===r)n=n*t+xl([e-t,0]);else{if("same"!==r)throw new oe(`Unsupport padding mode: ${r}.`);n*=t}return n}function hC(n,t){return qe(()=>(ss(t),"channelsFirst"===t?Vn(n,[0,2,3,1]):n))}function rD(n,t){return qe(()=>(ss(t),"channelsFirst"===t?Vn(n,[0,2,3,4,1]):n))}function dC(n,t,e,r=[1,1],s="valid",a,i,c=null){return qe(()=>{if(null==a&&(a="channelsLast"),ss(a),3!==n.rank&&4!==n.rank)throw new oe(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(3!==t.rank&&4!==t.rank)throw new oe(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let d=hC(n,a);if("causal"===s)throw new Zt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return d=Kw({x:d,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:c}),"channelsFirst"===a&&(d=Vn(d,[0,3,1,2])),d})}Ct(nD);class ad extends Pn{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ad.verifyArgs(e),this.rank=t,Ts(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Zt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=sd(e.kernelSize,t,"kernelSize"),this.strides=sd(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,ni(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ss(this.dataFormat),this.activation=Tl(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Fr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=xs(e.biasConstraint),this.biasRegularizer=Lr(e.biasRegularizer),this.activityRegularizer=Lr(e.activityRegularizer),this.dilationRate=sd(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new oe(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new oe(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new oe(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Va("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!OS(t.kernelSize,"number",1,3))throw new oe(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:wu(this.activation),useBias:this.useBias,biasInitializer:Fn(this.biasInitializer),biasRegularizer:vr(this.biasRegularizer),activityRegularizer:vr(this.activityRegularizer),biasConstraint:hr(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Yi extends ad{constructor(t,e){super(t,e),this.kernel=null,Yi.verifyArgs(e),this.filters=e.filters,Ts(this.filters,"filters"),this.kernelInitializer=Fr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=xs(e.kernelConstraint),this.kernelRegularizer=Lr(e.kernelRegularizer)}build(t){t=er(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new oe(`The channel dimension of the input should be defined. Found ${t[e]}`);const r=t[e],s=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:r}}],this.built=!0}call(t,e){return qe(()=>{let r;t=cn(t);const s=null==this.bias?null:this.bias.read(),a=FS(this.activation.getClassName());if(null!=a&&2===this.rank)r=dC(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)r=function sD(n,t,e,r=1,s="valid",a,i=1){return qe(()=>{if(null==a&&(a="channelsLast"),ss(a),3!==n.shape.length)throw new oe(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(3!==t.shape.length)throw new oe(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=e&&1!==e.shape.length)throw new oe(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(n=Vn(n,[0,2,1])),"causal"===s)throw new Zt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=sm(n,t,r,"same"===s?"same":"valid","NWC",i);return null!=e&&(c=Vi(c,e)),c})}(t,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)r=dC(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Zt("convolutions greater than 3D are not implemented yet.");r=function rb(n,t,e,r=[1,1,1],s="valid",a,i){return qe(()=>{if(null==a&&(a="channelsLast"),ss(a),4!==n.rank&&5!==n.rank)throw new oe(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(4!==t.rank&&5!==t.rank)throw new oe(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let c=rD(n,a);if("causal"===s)throw new Zt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=sy(c,t,r,"same"===s?"same":"valid","NDHWC",i),null!=e&&(c=Vi(c,e)),"channelsFirst"===a&&(c=Vn(c,[0,4,1,2,3])),c})}(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=er(t);const e=[],r="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<r.length;++a){const i=Xi(r[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(i)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:Fn(this.kernelInitializer),kernelRegularizer:vr(this.kernelRegularizer),kernelConstraint:hr(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new oe(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}let sb=(()=>{class n extends Yi{constructor(e){super(2,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!OS(e.kernelSize,"number",1,2))throw new oe(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv2D",n})();Ct(sb);let ab=(()=>{class n extends Yi{constructor(e){super(3,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new oe(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv3D",n})();Ct(ab);let ib=(()=>{class n extends sb{constructor(e){if(super(e),this.inputSpec=[new Hr({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new oe(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=er(e)).length)throw new oe("Input should have rank 4; Received input shape: "+JSON.stringify(e));const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new oe("The channel dimension of the inputs should be defined. Found `None`.");const s=e[r],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hr({ndim:4,axes:{[r]:s}})],this.built=!0}call(e,r){return qe(()=>{let s=cn(e);if(4!==s.shape.length)throw new oe(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape;let c,d;"channelsFirst"===this.dataFormat?(c=2,d=3):(c=1,d=2);const g=a[d],C=this.kernelSize[1],k=this.strides[1],R=[a[0],$o(a[c],this.strides[0],this.kernelSize[0],this.padding),$o(g,k,C,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(s=Vn(s,[0,2,3,1]));let $=am(s,this.kernel.read(),R,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&($=Vn($,[0,3,1,2])),null!=this.bias&&($=Vi($,this.bias.read(),this.dataFormat)),null!=this.activation&&($=this.activation.apply($)),$})}computeOutputShape(e){const r=(e=er(e)).slice();let s,a,i;"channelsFirst"===this.dataFormat?(s=1,a=2,i=3):(s=3,a=1,i=2);const c=this.kernelSize[0],d=this.kernelSize[1],m=this.strides[0],g=this.strides[1];return r[s]=this.filters,r[a]=$o(r[a],m,c,this.padding),r[i]=$o(r[i],g,d,this.padding),r}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv2DTranspose",n})();Ct(ib);let pC=(()=>{class n extends ab{constructor(e){if(super(e),this.inputSpec=[new Hr({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new oe(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=er(e)).length)throw new oe("Input should have rank 5; Received input shape: "+JSON.stringify(e));const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new oe("The channel dimension of the inputs should be defined. Found `None`.");const s=e[r],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hr({ndim:5,axes:{[r]:s}})],this.built=!0}call(e,r){return qe(()=>{let s=cn(e);if(5!==s.shape.length)throw new oe(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape;let c,d,m;"channelsFirst"===this.dataFormat?(m=2,c=3,d=4):(m=1,c=2,d=3);const y=a[c],C=a[d],k=this.kernelSize[1],D=this.kernelSize[2],R=this.strides[1],$=this.strides[2],ae=[a[0],$o(a[m],this.strides[0],this.kernelSize[0],this.padding),$o(y,R,k,this.padding),$o(C,$,D,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(s=Vn(s,[0,2,3,4,1]));let le=iy(s,this.kernel.read(),ae,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(le=Vn(le,[0,4,1,2,3])),null!==this.bias&&(le=Vi(le,this.bias.read(),this.dataFormat)),null!==this.activation&&(le=this.activation.apply(le)),le})}computeOutputShape(e){const r=(e=er(e)).slice();let s,a,i,c;"channelsFirst"===this.dataFormat?(s=1,a=2,i=3,c=4):(s=4,a=1,i=2,c=3);const d=this.kernelSize[0],m=this.kernelSize[1],g=this.kernelSize[2],y=this.strides[0],C=this.strides[1],T=this.strides[2];return r[s]=this.filters,r[a]=$o(r[a],y,d,this.padding),r[i]=$o(r[i],C,m,this.padding),r[c]=$o(r[c],T,g,this.padding),r}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv3DTranspose",n})();Ct(pC);let aD=(()=>{class n extends Yi{constructor(e,r){if(super(e,r),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==r.filters)throw new oe("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=r.kernelInitializer||null!=r.kernelRegularizer||null!=r.kernelConstraint)throw new oe("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=r.padding&&"same"!==r.padding&&"valid"!==r.padding)throw new oe(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(r.padding)}`);this.depthMultiplier=null==r.depthMultiplier?1:r.depthMultiplier,this.depthwiseInitializer=Fr(r.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Lr(r.depthwiseRegularizer),this.depthwiseConstraint=xs(r.depthwiseConstraint),this.pointwiseInitializer=Fr(r.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Lr(r.pointwiseRegularizer),this.pointwiseConstraint=xs(r.pointwiseConstraint)}build(e){if((e=er(e)).length<this.rank+2)throw new oe(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r]||e[r]<0)throw new oe(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[r])}`);const s=e[r],a=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let d=0;d<this.rank;++d)i.push(1);i.push(s*this.depthMultiplier,this.filters);const c=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,c,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,c,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,c,this.biasConstraint):null,this.inputSpec=[new Hr({ndim:this.rank+2,axes:{[r]:s}})],this.built=!0}call(e,r){return qe(()=>{let s;if(e=cn(e),1===this.rank)throw new Zt("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Vn(e,[0,2,3,1])),s=wm(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Vi(s,this.bias.read(),this.dataFormat)),null!=this.activation&&(s=this.activation.apply(s)),"channelsFirst"===this.dataFormat&&(s=Vn(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Fn(this.depthwiseInitializer),e.pointwiseInitializer=Fn(this.pointwiseInitializer),e.depthwiseRegularizer=vr(this.depthwiseRegularizer),e.pointwiseRegularizer=vr(this.pointwiseRegularizer),e.depthwiseConstraint=hr(this.depthwiseConstraint),e.pointwiseConstraint=hr(this.pointwiseConstraint),e}}return n.className="SeparableConv",n})(),iD=(()=>{class n extends aD{constructor(e){super(2,e)}}return n.className="SeparableConv2D",n})();Ct(iD);let oD=(()=>{class n extends Yi{constructor(e){super(1,e),n.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!OS(e.kernelSize,"number",1,1))throw new oe(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv1D",n})();Ct(oD);let uD=(()=>{class n extends Pn{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,r){return qe(()=>{if(e=cn(e),"channelsLast"===this.dataFormat){const s=T0(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return T0(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const s=T0(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return T0(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Cropping2D",n})();Ct(uD);let lD=(()=>{class n extends Pn{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ss(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function u$(n){Kc(a$,"InterpolationFormat",n)}(this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,r){return qe(()=>{let s=cn(e);const a=s.shape;if("channelsFirst"===this.dataFormat){s=Vn(s,[0,2,3,1]);const i=this.size[0]*a[2],c=this.size[1]*a[3],d="nearest"===this.interpolation?Ya.resizeNearestNeighbor(s,[i,c]):Ya.resizeBilinear(s,[i,c]);return Vn(d,[0,3,1,2])}{const i=this.size[0]*a[1],c=this.size[1]*a[2];return"nearest"===this.interpolation?Ya.resizeNearestNeighbor(s,[i,c]):Ya.resizeBilinear(s,[i,c])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},r=super.getConfig();return Object.assign(e,r),e}}return n.className="UpSampling2D",n})();Ct(lD);let fD=(()=>{class n extends ad{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Fr(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=xs(e.depthwiseConstraint),this.depthwiseRegularizer=Lr(e.depthwiseRegularizer)}build(e){if((e=er(e)).length<4)throw new oe(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const r="channelsFirst"===this.dataFormat?1:3;if(null==e[r]||e[r]<0)throw new oe(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[r]}).`);const s=e[r];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,r){return qe(()=>{let s=function cD(n,t,e=[1,1],r="valid",s,a){return qe(()=>{null==s&&(s="channelsLast"),ss(s);let i=hC(n,s);if(4!==n.rank)throw new oe(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(4!==t.rank)throw new oe(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Fc(i,t,e,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Vn(i,[0,3,1,2])),i})}(e=cn(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Vi(s,this.bias.read(),this.dataFormat)),null!=this.activation&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=er(e);const s="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=Xi("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),c=Xi(s,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,i,c]:[e[0],i,c,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Fn(this.depthwiseInitializer),e.depthwiseRegularizer=vr(this.depthwiseRegularizer),e.depthwiseConstraint=hr(this.depthwiseRegularizer),e}}return n.className="DepthwiseConv2D",n})();function mC(n,t,e,r){if(Array.isArray(n)){if(null!=t||null!=e)throw new oe("When inputs is an array, neither initialState or constants should be provided");null!=r&&(e=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function s(a){return null==a||Array.isArray(a)?a:[a]}return{inputs:n,initialState:t=s(t),constants:e=s(e)}}function vg(n,t,e,r=!1,s,a,i=!1,c=!1){return qe(()=>{const d=t.shape.length;if(d<3)throw new oe(`Input should be at least 3D, but is ${d}D.`);const m=[1,0].concat(bs(2,d));if(t=Vn(t,m),null!=a)throw new Zt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=Lt(Lt(s,"bool"),"float32")).rank===d-1&&(s=Os(s,-1)),s=Vn(s,m)),r&&(t=Xa(t,0),null!=s&&(s=Xa(s,0)));const g=[];let y,C=e;const T=t.shape[0],k=za(t);let D,M;null!=s&&(D=za(s));for(let R=0;R<T;++R){const $=k[R],V=qe(()=>n($,C));if(null==s)y=V[0],C=V[1];else{const G=qe(()=>{const K=D[R],ae=Ht(ba(K),K);return{output:Nt(Ce(V[0],K),Ce(C[0],ae)),newStates:C.map((Ae,ke)=>Nt(Ce(V[1][ke],K),Ce(Ae,ae)))}});y=G.output,C=G.newStates}c&&g.push(y)}return c&&(M=xa(g,1)),[y,M,C]})}Ct(fD);let Ji=(()=>{class n extends Pn{constructor(e){let r;if(super(e),null==e.cell)throw new oe("cell property is missing for the constructor of RNN.");if(r=Array.isArray(e.cell)?new yC({cells:e.cell}):e.cell,null==r.stateSize)throw new oe("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=r,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Hr({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?bs(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(r=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Qm(e)&&(e=e[0]),e=e;let r=this.cell.stateSize;Array.isArray(r)||(r=[r]);const s=r[0];let a;if(a=this.returnSequences?[e[0],e[1],s]:[e[0],s],this.returnState){const i=[];for(const c of r)i.push([e[0],c]);return[a].concat(i)}return a}computeMask(e,r){return qe(()=>{Array.isArray(r)&&(r=r[0]);const s=this.returnSequences?r:null;if(this.returnState){const a=this.states.map(i=>null);return[s].concat(a)}return s})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,r=[];for(let s=0;s<e;++s)r.push(null);return r}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Zt("Constants support is not implemented in RNN yet.");Qm(e)&&(e=e[0]),e=e;const s=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Hr({shape:[s,null,...a]});const i=[e[0]].concat(e.slice(2));let c;if(this.cell.build(i),c=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!_t(this.stateSpec.map(d=>d.shape[d.shape.length-1]),c))throw new oe(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=c.map(d=>new Hr({shape:[null,d]}));this.stateful&&this.resetStates()}resetStates(e,r=!1){qe(()=>{if(!this.stateful)throw new Fi("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(null==s)throw new oe("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>ns([s,a])):[ns([s,this.cell.stateSize])];else if(null==e)Tn(this.states_),null!=this.keptStates&&(Tn(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>ns([s,a])):this.states_[0]=ns([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new oe(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===r?this.keptStates.push(this.states_.slice()):Tn(this.states_);for(let a=0;a<this.states_.length;++a){const i=e[a],c=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,d=[s,c];if(!_t(i.shape,d))throw new oe(`State ${a} is incompatible with layer ${this.name}: expected shape=${d}, received shape=${i.shape}`);this.states_[a]=i}}this.states_=this.states_.map(a=>Qr(a.clone()))})}apply(e,r){let s=null==r?null:r.initialState,a=null==r?null:r.constants;null==r&&(r={});const i=mC(e,s,a,this.numConstants);e=i.inputs,s=i.initialState,a=i.constants;let c=[],d=[];if(null!=s){r.initialState=s,c=c.concat(s),this.stateSpec=[];for(const g of s)this.stateSpec.push(new Hr({shape:g.shape}));d=d.concat(this.stateSpec)}if(null!=a&&(r.constants=a,c=c.concat(a),this.numConstants=a.length),c[0]instanceof Hi){const g=[e].concat(c),y=this.inputSpec.concat(d),C=this.inputSpec;this.inputSpec=y;const T=super.apply(g,r);return this.inputSpec=C,T}return super.apply(e,r)}call(e,r){return qe(()=>{const s=null==r?null:r.mask,a=null==r?null:r.training;let i=null==r?null:r.initialState;e=cn(e),null==i&&(i=this.stateful?this.states_:this.getInitialState(e));const c=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==c)throw new oe(`RNN Layer has ${c} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const d={training:a},g=vg((D,M)=>{const R=this.cell.call([D].concat(M),d);return[R[0],R.slice(1)]},e,i,this.goBackwards,s,null,this.unroll,this.returnSequences),y=g[0],C=g[1],T=g[2];this.stateful&&this.resetStates(T,a);const k=this.returnSequences?C:y;return this.returnState?[k].concat(T):k})}getInitialState(e){return qe(()=>{let r=ns(e.shape);return r=Kt(r,[1,2]),r=Pi(r),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?zi(r,[1,s]):r):this.cell.stateSize>1?[zi(r,[1,this.cell.stateSize])]:[r]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),r={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(r.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===n.className&&(r.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),r)}static fromConfig(e,r,s={}){const i=xi(r.cell,s);return new e(Object.assign(r,{cell:i}))}}return n.className="RNN",n})();Ct(Ji);class yg extends Pn{}let gC=(()=>{class n extends yg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ts(this.units,"units"),this.activation=Tl(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Fr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Fr(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Fr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lr(e.kernelRegularizer),this.recurrentRegularizer=Lr(e.recurrentRegularizer),this.biasRegularizer=Lr(e.biasRegularizer),this.kernelConstraint=xs(e.kernelConstraint),this.recurrentConstraint=xs(e.recurrentConstraint),this.biasConstraint=xs(e.biasConstraint),this.dropout=Jh([1,xl([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Jh([1,xl([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=er(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,r){return qe(()=>{if(2!==(e=e).length)throw new oe(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const a=null!=r.training&&r.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Al({ones:()=>ba(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Al({ones:()=>ba(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,d=this.recurrentDropoutMask;i=Do(null!=c?Ce(e,c):e,this.kernel.read()),null!=this.bias&&(i=Vi(i,this.bias.read())),null!=d&&(s=Ce(s,d));let m=Nt(i,Do(s,this.recurrentKernel.read()));return null!=this.activation&&(m=this.activation.apply(m)),[m,m]})}getConfig(){const e=super.getConfig(),r={units:this.units,activation:wu(this.activation),useBias:this.useBias,kernelInitializer:Fn(this.kernelInitializer),recurrentInitializer:Fn(this.recurrentInitializer),biasInitializer:Fn(this.biasInitializer),kernelRegularizer:vr(this.kernelRegularizer),recurrentRegularizer:vr(this.recurrentRegularizer),biasRegularizer:vr(this.biasRegularizer),activityRegularizer:vr(this.activityRegularizer),kernelConstraint:hr(this.kernelConstraint),recurrentConstraint:hr(this.recurrentConstraint),biasConstraint:hr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),r)}}return n.className="SimpleRNNCell",n})();Ct(gC);let vC=(()=>{class n extends Ji{constructor(e){e.cell=new gC(e),super(e)}call(e,r){return qe(()=>(null!=this.cell.dropoutMask&&(Tn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Tn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==r?null:r.mask,training:null==r?null:r.training,initialState:null==r?null:r.initialState})))}static fromConfig(e,r){return new e(r)}}return n.className="SimpleRNN",n})();Ct(vC);let ob=(()=>{class n extends yg{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new oe("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ts(this.units,"units"),this.activation=Tl(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Tl(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Fr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Fr(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Fr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lr(e.kernelRegularizer),this.recurrentRegularizer=Lr(e.recurrentRegularizer),this.biasRegularizer=Lr(e.biasRegularizer),this.kernelConstraint=xs(e.kernelConstraint),this.recurrentConstraint=xs(e.recurrentConstraint),this.biasConstraint=xs(e.biasConstraint),this.dropout=Jh([1,xl([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Jh([1,xl([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=er(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,r){return qe(()=>{if(2!==(e=e).length)throw new oe(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=null!=r.training&&r.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Al({ones:()=>ba(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Al({ones:()=>ba(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const c=this.recurrentDropoutMask;let d,m,g;0<this.dropout&&this.dropout<1&&(e=Ce(e,this.dropoutMask[0]));let y=Do(e,this.kernel.read());this.useBias&&(y=Vi(y,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Ce(a,c[0]));const C=this.recurrentKernel.read(),[T,k]=ca(C,[2*this.units,this.units],C.rank-1),D=Do(a,T),[M,R,$]=ca(y,3,y.rank-1),[V,G]=ca(D,2,D.rank-1);d=this.recurrentActivation.apply(Nt(M,V)),m=this.recurrentActivation.apply(Nt(R,G));const K=Do(Ce(m,a),k);g=this.activation.apply(Nt($,K));const ae=Nt(Ce(d,a),Ce(Nt(1,cr(d)),g));return[ae,ae]})}getConfig(){const e=super.getConfig(),r={units:this.units,activation:wu(this.activation),recurrentActivation:wu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fn(this.kernelInitializer),recurrentInitializer:Fn(this.recurrentInitializer),biasInitializer:Fn(this.biasInitializer),kernelRegularizer:vr(this.kernelRegularizer),recurrentRegularizer:vr(this.recurrentRegularizer),biasRegularizer:vr(this.biasRegularizer),activityRegularizer:vr(this.activityRegularizer),kernelConstraint:hr(this.kernelConstraint),recurrentConstraint:hr(this.recurrentConstraint),biasConstraint:hr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),r)}}return n.className="GRUCell",n})();Ct(ob);let id=(()=>{class n extends Ji{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ob(e),super(e)}call(e,r){return qe(()=>(null!=this.cell.dropoutMask&&(Tn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Tn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==r?null:r.mask,training:null==r?null:r.training,initialState:null==r?null:r.initialState})))}static fromConfig(e,r){return 0===r.implmentation&&(r.implementation=1),new e(r)}}return n.className="GRU",n})();Ct(id);let ef=(()=>{class n extends yg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ts(this.units,"units"),this.activation=Tl(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Tl(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Fr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Fr(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Fr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Lr(e.kernelRegularizer),this.recurrentRegularizer=Lr(e.recurrentRegularizer),this.biasRegularizer=Lr(e.biasRegularizer),this.kernelConstraint=xs(e.kernelConstraint),this.recurrentConstraint=xs(e.recurrentConstraint),this.biasConstraint=xs(e.biasConstraint),this.dropout=Jh([1,xl([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Jh([1,xl([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var r;let a;if(e=er(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,c=this.units;a=new((r=class extends As{apply(m,g){const y=i.apply([c]),C=(new Ui).apply([c]),T=i.apply([2*c]);return E0(E0(y,C),T)}}).className="CustomInit",r)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,r){return qe(()=>{const s=null!=r.training&&r.training;if(3!==(e=e).length)throw new oe(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Al({ones:()=>ba(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Al({ones:()=>ba(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let m,g,y,C;0<this.dropout&&this.dropout<1&&(e=Ce(e,this.dropoutMask[0]));let T=Do(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Ce(a,d[0])),T=Nt(T,Do(a,this.recurrentKernel.read())),this.useBias&&(T=Vi(T,this.bias.read()));const[k,D,M,R]=ca(T,4,T.rank-1);m=this.recurrentActivation.apply(k),g=this.recurrentActivation.apply(D),y=Nt(Ce(g,i),Ce(m,this.activation.apply(M))),C=this.recurrentActivation.apply(R);const $=Ce(C,this.activation.apply(y));return[$,$,y]})}getConfig(){const e=super.getConfig(),r={units:this.units,activation:wu(this.activation),recurrentActivation:wu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fn(this.kernelInitializer),recurrentInitializer:Fn(this.recurrentInitializer),biasInitializer:Fn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:vr(this.kernelRegularizer),recurrentRegularizer:vr(this.recurrentRegularizer),biasRegularizer:vr(this.biasRegularizer),activityRegularizer:vr(this.activityRegularizer),kernelConstraint:hr(this.kernelConstraint),recurrentConstraint:hr(this.recurrentConstraint),biasConstraint:hr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),r)}}return n.className="LSTMCell",n})();Ct(ef);let hD=(()=>{class n extends Ji{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ef(e),super(e)}call(e,r){return qe(()=>(null!=this.cell.dropoutMask&&(Tn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Tn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==r?null:r.mask,training:null==r?null:r.training,initialState:null==r?null:r.initialState})))}static fromConfig(e,r){return 0===r.implmentation&&(r.implementation=1),new e(r)}}return n.className="LSTM",n})();Ct(hD);let yC=(()=>{class n extends yg{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const r of this.cells.slice().reverse())Array.isArray(r.stateSize)?e.push(...r.stateSize):e.push(r.stateSize);return e}call(e,r){return qe(()=>{let s=(e=e).slice(1);const a=[];for(const d of this.cells.slice().reverse())Array.isArray(d.stateSize)?a.push(s.splice(0,d.stateSize.length)):a.push(s.splice(0,1));a.reverse();const i=[];let c;for(let d=0;d<this.cells.length;++d){const m=this.cells[d];s=a[d],c=0===d?[e[0]].concat(s):[c[0]].concat(s),c=m.call(c,r),i.push(c.slice(1))}s=[];for(const d of i.slice().reverse())s.push(...d);return[c[0]].concat(s)})}build(e){let r;Qm(e)&&(e=e[0]),e=e,this.cells.forEach((s,a)=>{jc(`RNNCell_${a}`,()=>{s.build(e),r=Array.isArray(s.stateSize)?s.stateSize[0]:s.stateSize,e=[e[0],r]})}),this.built=!0}getConfig(){const e=super.getConfig(),a={cells:this.cells.map(i=>({className:i.getClassName(),config:i.getConfig()}))};return Object.assign(Object.assign({},e),a)}static fromConfig(e,r,s={}){const a=[];for(const i of r.cells)a.push(xi(i,s));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const r of this.cells)e.push(...r.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const r of this.cells)e.push(...r.nonTrainableWeights);if(!this.trainable){const r=[];for(const s of this.cells)r.push(...s.trainableWeights);return r.concat(e)}return e}getWeights(){const e=[];for(const r of this.cells)e.push(...r.weights);return VS(e)}setWeights(e){const r=[];for(const s of this.cells){const i=e.splice(s.weights.length);for(let c=0;c<s.weights.length;++c)r.push([s.weights[c],i[c]])}US(r)}}return n.className="StackedRNNCells",n})();function Al(n){const{ones:t,rate:e,training:r=!1,count:s=1,dropoutFunc:a}=n,i=()=>null!=a?a(t(),e):D0(t(),e),c=()=>wl(i,t,r);return!s||s<=1?Qr(c().clone()):Array(s).fill(void 0).map(c).map(m=>Qr(m.clone()))}Ct(yC);let TO=(()=>{class n extends Ji{constructor(e){if(e.unroll)throw new Zt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Zt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Hr({ndim:5})]}call(e,r){return qe(()=>{if(null!=this.cell.dropoutMask&&(Tn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Tn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),r&&r.constants)throw new oe("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==r?null:r.mask,training:null==r?null:r.training,initialState:null==r?null:r.initialState})})}computeOutputShape(e){let r=this.computeSingleOutputShape(e);return this.returnSequences||(r=[r[0],...r.slice(2)]),this.returnState&&(r=[r,...Array(2).fill([e[0],...r.slice(-3)])]),r}getInitialState(e){return qe(()=>{const{stateSize:r}=this.cell,a=this.computeSingleOutputShape(e.shape),c=ns([a[0],...a.slice(2)]);return Array.isArray(r)?Array(r.length).fill(c):[c]})}resetStates(e,r=!1){qe(()=>{if(!this.stateful)throw new Fi("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),i=[a[0],...a.slice(2)];if(null==s[0])throw new oe("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>ns(i)):[ns(i)];else if(null==e)Tn(this.states_),null!=this.keptStates&&(Tn(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ns(i)):this.states_[0]=ns(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new oe(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);r?this.keptStates.push(this.states_.slice()):Tn(this.states_);for(let d=0;d<this.states_.length;++d){const m=e[d],g=i;if(!_t(m.shape,g))throw new oe(`State ${d} is incompatible with layer ${this.name}: expected shape=${g}, received shape=${m.shape}`);this.states_[d]=m}}this.states_=this.states_.map(d=>Qr(d.clone()))})}computeSingleOutputShape(e){const{dataFormat:r,filters:s,kernelSize:a,padding:i,strides:c,dilationRate:d}=this.cell,m="channelsFirst"===r,y=e[m?4:3],C=Xi(e[m?3:2],a[0],i,c[0],d[0]),T=Xi(y,a[1],i,c[1],d[1]);return[...e.slice(0,2),...m?[s,C,T]:[C,T,s]]}}return n.className="ConvRNN2D",n})(),bC=(()=>{class n extends ef{constructor(e){const{filters:r,kernelSize:s,strides:a,padding:i,dataFormat:c,dilationRate:d}=e;super(Object.assign(Object.assign({},e),{units:r})),this.filters=r,Ts(this.filters,"filters"),this.kernelSize=sd(s,2,"kernelSize"),this.kernelSize.forEach(m=>Ts(m,"kernelSize")),this.strides=sd(a||1,2,"strides"),this.strides.forEach(m=>Ts(m,"strides")),this.padding=i||"valid",ni(this.padding),this.dataFormat=c||"channelsLast",ss(this.dataFormat),this.dilationRate=sd(d||1,2,"dilationRate"),this.dilationRate.forEach(m=>Ts(m,"dilationRate"))}build(e){var r;e=er(e);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new oe(`The channel dimension of the input should be defined. Found ${e[s]}`);const c=this.kernelSize.concat([e[s],4*this.filters]);this.kernel=this.addWeight("kernel",c,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const d=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",d,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let m;if(this.unitForgetBias){const g=this.biasInitializer,y=this.filters;m=new((r=class extends As{apply(T,k){return A0([g.apply([y]),la([y]),g.apply([2*y])])}}).className="CustomInit",r)}else m=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,m,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,r){return qe(()=>{if(3!==e.length)throw new oe(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=r.training||!1,a=e[0],i=e[1],c=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Al({ones:()=>ba(a),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const m=this.dropoutMask,g=(kt,Ot,Dt)=>Ot&&Ot[Dt]?Ce(Ot[Dt],kt):kt;let y=g(a,m,0),C=g(a,m,1),T=g(a,m,2),k=g(a,m,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Al({ones:()=>ba(i),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const D=this.recurrentDropoutMask;let M=g(i,D,0),R=g(i,D,1),$=g(i,D,2),V=g(i,D,3);const[K,ae,le,he]=ca(this.kernel.read(),4,3),[Ae,ke,Ue,Je]=this.useBias?ca(this.bias.read(),4):[null,null,null,null];y=this.inputConv(y,K,Ae,this.padding),C=this.inputConv(C,ae,ke,this.padding),T=this.inputConv(T,le,Ue,this.padding),k=this.inputConv(k,he,Je,this.padding);const[st,at,ot,ct]=ca(this.recurrentKernel.read(),4,3);M=this.recurrentConv(M,st),R=this.recurrentConv(R,at),$=this.recurrentConv($,ot),V=this.recurrentConv(V,ct);const pt=this.recurrentActivation.apply(Nt(y,M)),ut=this.recurrentActivation.apply(Nt(C,R)),gt=Nt(Ce(ut,c),Ce(pt,this.activation.apply(Nt(T,$)))),At=Ce(this.recurrentActivation.apply(Nt(k,V)),this.activation.apply(gt));return[At,At,gt]})}getConfig(){const s=function(n,t){var e={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&t.indexOf(r)<0&&(e[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(n);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(n,r[s])&&(e[r[s]]=n[r[s]])}return e}(super.getConfig(),["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),a)}inputConv(e,r,s,a){const i=So(e,r,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return s?Vi(i,s,this.dataFormat):i}recurrentConv(e,r){return So(e,r,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}return n.className="ConvLSTM2DCell",n})();Ct(bC);let ub=(()=>{class n extends TO{constructor(e){const r=new bC(e);super(Object.assign(Object.assign({},e),{cell:r}))}static fromConfig(e,r){return new e(r)}}return n.className="ConvLSTM2D",n})();Ct(ub);let xC=(()=>{class n extends Pn{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const r=e.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(null==this.noiseShape[a]?r[a]:this.noiseShape[a]);return s}call(e,r){return qe(()=>{this.invokeCallHook(e,r);const s=cn(e);if(0<this.rate&&this.rate<1){const a=null!=r.training&&r.training,i=this.getNoiseShape(s);return wl(()=>D0(s,this.rate,i,this.seed),()=>s,a)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},r=super.getConfig();return Object.assign(e,r),e}dispose(){return super.dispose()}}return n.className="Dropout",n})();Ct(xC);let bg=(()=>{class n extends xC{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const r=e.shape;return[r[0],1,r[2]]}}return n.className="SpatialDropout1D",n})();Ct(bg);let pD=(()=>{class n extends Pn{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let r=null;null!=e.batchSize&&(r=e.batchSize),this.batchInputShape=[r,e.inputDim]}this.units=e.units,Ts(this.units,"units"),this.activation=Tl(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Fr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Fr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=xs(e.kernelConstraint),this.biasConstraint=xs(e.biasConstraint),this.kernelRegularizer=Lr(e.kernelRegularizer),this.biasRegularizer=Lr(e.biasRegularizer),this.activityRegularizer=Lr(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const r=(e=er(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[r,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:r}}],this.built=!0}computeOutputShape(e){const r=(e=er(e)).slice();return r[r.length-1]=this.units,r}call(e,r){return qe(()=>{this.invokeCallHook(e,r);const s=cn(e),a=FS(this.activation.getClassName());let i;return null!=a?i=Do(s,this.kernel.read(),a,this.bias?this.bias.read():null):(i=Do(s,this.kernel.read()),null!=this.bias&&(i=Vi(i,this.bias.read())),null!=this.activation&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:wu(this.activation),useBias:this.useBias,kernelInitializer:Fn(this.kernelInitializer),biasInitializer:Fn(this.biasInitializer),kernelRegularizer:vr(this.kernelRegularizer),biasRegularizer:vr(this.biasRegularizer),activityRegularizer:vr(this.activityRegularizer),kernelConstraint:hr(this.kernelConstraint),biasConstraint:hr(this.biasConstraint)},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Dense",n})();Ct(pD);let wC=(()=>{class n extends Pn{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=er(e);for(const r of e.slice(1))if(null==r)throw new oe(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],bl(e,1)]}call(e,r){return qe(()=>{this.invokeCallHook(e,r);let s=cn(e);if("channelsFirst"===this.dataFormat&&s.rank>1){const a=[0];for(let i=2;i<s.rank;++i)a.push(i);a.push(1),s=Vn(s,a)}return function m$(n){if(n.rank<=1)throw new oe(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],bl(n.shape,1)];return $e(n,t)}(s)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const r=super.getConfig();return Object.assign(e,r),e}}return n.className="Flatten",n})();Ct(wC);let NC=(()=>{class n extends Pn{constructor(e){super(e),this.supportsMasking=!0,this.activation=Tl(e.activation)}call(e,r){return qe(()=>{this.invokeCallHook(e,r);const s=cn(e);return this.activation.apply(s)})}getConfig(){const e={activation:wu(this.activation)},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Activation",n})();Ct(NC);let SC=(()=>{class n extends Pn{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,r){return qe(()=>function d$(n,t){return qe(()=>{if(2!==n.shape.length)throw new oe(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);return zi(Pi(n,1),[1,t,1])})}(e=cn(e),this.n))}getConfig(){const e={n:this.n},r=super.getConfig();return Object.assign(e,r),e}}return n.className="RepeatVector",n})();Ct(SC);let CC=(()=>{class n extends Pn{constructor(e){super(e),this.targetShape=e.targetShape;for(let r=0;r<this.targetShape.length;++r)this.isUnknown(this.targetShape[r])&&(this.targetShape[r]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,r){const s="Total size of new array must be unchanged.",a=r.slice();let i=1,c=null;for(let m=0;m<a.length;++m){const g=a[m];if(this.isUnknown(g)){if(null!==c)throw new oe("Can only specifiy one unknown dimension.");c=m}else i*=g}const d=bl(e);if(null!==c){if(0===i||d%i!=0)throw new oe(s);a[c]=d/i}else if(d!==i)throw new oe(s);return a}computeOutputShape(e){let r=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){r=!0;break}return r?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,r){return qe(()=>{this.invokeCallHook(e,r);const s=cn(e),a=s.shape,i=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return $e(s,i)})}getConfig(){const e={targetShape:this.targetShape},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Reshape",n})();Ct(CC);let IC=(()=>{class n extends Pn{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const r=bs(1,e.dims.length+1);if(!_t(e.dims.slice().sort(),r))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Hr({ndim:this.dims.length+1})]}computeOutputShape(e){const r=(e=er(e)).slice();return this.dims.forEach((s,a)=>{r[a+1]=e[s]}),r}call(e,r){return Vn(cn(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Permute",n})();Ct(IC);let _C=(()=>{class n extends Pn{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),r={maskValue:this.maskValue};return Object.assign(r,e),r}computeMask(e,r){const s=cn(e);return Nh(ll(s,this.maskValue),-1)}call(e,r){return qe(()=>{this.invokeCallHook(e,r);const s=cn(e),c=Nh(ll(s,this.maskValue),-1,!0);return Ce(s,Lt(c,s.dtype))})}}return n.className="Masking",n})();Ct(_C);let TC=(()=>{class n extends Pn{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let r=null;null!=e.batchSize&&(r=e.batchSize),this.batchInputShape=null==e.inputLength?[r,null]:[r].concat(Nr(e.inputLength))}this.inputDim=e.inputDim,Ts(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ts(this.outputDim,"outputDim"),this.embeddingsInitializer=Fr(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Lr(e.embeddingsRegularizer),this.activityRegularizer=Lr(e.activityRegularizer),this.embeddingsConstraint=xs(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,r){return qe(()=>this.maskZero?(e=cn(e),ll(e,Gn(e))):null)}computeOutputShape(e){if(e=er(e),null==this.inputLength)return[...e,this.outputDim];const r=Nr(this.inputLength);if(r.length!==e.length-1)throw new oe(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let a=0;a<r.length;++a){const i=r[a],c=e[a+1];if(null!=i&&null!=c&&i!==c)throw new oe(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==i&&(r[s]=c),s++}}return[e[0],...r,this.outputDim]}call(e,r){return qe(()=>{this.invokeCallHook(e,r);let s=cn(e);"int32"!==s.dtype&&(s=Bi(s,"int32"));const a=tM(this.embeddings.read(),$e(s,[s.size]));return $e(a,er(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Fn(this.embeddingsInitializer),embeddingsRegularizer:vr(this.embeddingsRegularizer),activityRegularizer:vr(this.activityRegularizer),embeddingsConstraint:hr(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Embedding",n})();Ct(TC);class Nu extends Pn{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Zt}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const r=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const a=t[t.length-e.length+s],i=e[s];if(null==a||null==i||a<0||i<0)r.push(null);else if(1===a)r.push(i);else if(1===i)r.push(a);else{if(a!==i)throw new oe("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));r.push(a)}}return r}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[er(t)]),(t=t).length<2)throw new oe(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=wn(e),e.length>1)throw new oe(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let r=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const i=null==t[a]?null:t[a].slice(1);r=this.computeElementwiseOpOutputShape(r,i)}const s=t.map(a=>a.length);this.reshapeRequired=-1!==t.indexOf(null)||1!==wn(s).length}call(t,e){return qe(()=>{if(t=t,this.reshapeRequired){const r=[],s=t.map(a=>a.rank);if(-1===s.indexOf(null)){const a=xl(s);for(let i of t){const c=i.rank;for(let d=0;d<a-c;++d)i=Pi(i,1);r.push(i)}return this.mergeFunction(r)}{let a=!1;for(const d of t){const m=d.rank;if(null==m){const g=d.shape,y=g[0],C=g.slice(1).concat([y]);let T=$e(d,[y].concat(bl(g.slice(1))));T=Vn(T,[1,0]),T=$e(T,C),r.push(T),a=!0}else if(m>1){const g=bs(1,m).concat([0]);r.push(Vn(d,g)),a=!0}else r.push(d)}let i=this.mergeFunction(r);const c=i.rank;if(a)if(null==c){const d=i.shape,g=d[d.length-1],y=[g].concat(d.slice(0,d.length-1));i=$e(Vn($e(i,[-1,g]),[1,0]),y)}else if(c>1){const d=[c-1].concat(bs(0,c-1));i=Vn(i,d)}return i}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const a=null==t[s]?null:t[s].slice(1);e=this.computeElementwiseOpOutputShape(e,a)}let r=[];for(const s of t)null!=s&&null!==s[0]&&r.push(s[0]);return r=wn(r),e=1===r.length?r.concat(e):[null].concat(e),e}computeMask(t,e){return qe(()=>{if(null==e)return null;if(!Array.isArray(e))throw new oe("`mask` should be an Array");if(!Array.isArray(t))throw new oe("`inputs` should be an Array");if(e.length!==t.length)throw new oe(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(s=>null==s))return null;let r=(e=e.map(s=>null==s?s:Os(s,0)))[0];for(let s=1;s<e.length-1;++s)r=ja(r,e[s]);return r})}}let lb=(()=>{class n extends Nu{constructor(e){super(e)}mergeFunction(e){return qe(()=>{let r=e[0].clone();for(let s=1;s<e.length;++s)r=Nt(r,e[s]);return r})}}return n.className="Add",n})();Ct(lb);let cb=(()=>{class n extends Nu{constructor(e){super(e)}mergeFunction(e){return qe(()=>{let r=e[0].clone();for(let s=1;s<e.length;++s)r=Ce(r,e[s]);return r})}}return n.className="Multiply",n})();Ct(cb);let xg=(()=>{class n extends Nu{constructor(e){super(e)}mergeFunction(e){return qe(()=>{let r=e[0].clone();for(let s=1;s<e.length;++s)r=Nt(r,e[s]);return Ce(1/e.length,r)})}}return n.className="Average",n})();Ct(xg);let fb=(()=>{class n extends Nu{constructor(e){super(e)}mergeFunction(e){return qe(()=>{let r=e[0];for(let s=1;s<e.length;++s)r=gi(r,e[s]);return r})}}return n.className="Maximum",n})();Ct(fb);let hb=(()=>{class n extends Nu{constructor(e){super(e)}mergeFunction(e){return qe(()=>{let r=e[0];for(let s=1;s<e.length;++s)r=du(r,e[s]);return r})}}return n.className="Minimum",n})();Ct(hb);let wg=(()=>{class n extends Nu{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new oe("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let r=!0;for(const a of e)if(null!=a){r=!1;break}if(r)return;const s=[];for(let a=0;a<e.length;++a){const i=e[a].slice();i.splice(this.axis,1);let c=!1;for(const d of s)if(_t(d,i)){c=!0;break}c||s.push(i)}if(s.length>1)throw new oe("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return qe(()=>A0(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new oe("A `Concatenate` layer should be called on a list of inputs.");const r=e,s=r[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const i of r.slice(1)){if(null==s[a]||null==i[a]){s[a]=null;break}s[a]+=i[a]}return s}computeMask(e,r){if(null==r)return null;if(!Array.isArray(r))throw new oe("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new oe("`inputs` should be an array for Concatenate");if(r.length!==e.length)throw new oe(`Mismatch in the length of mask (${r.length}) and the legnth of inputs (${e.length})`);return qe(()=>{let s=!0;if(r.forEach(c=>{null==c||(s=!1)}),s)return null;const a=[];for(let c=0;c<e.length;++c)a.push(null==r[c]?Lt(ba(e[c]),"bool"):r[c].rank<e[c].rank?Os(r[c],-1):r[c]);const i=$r(a,this.axis);return wh(i,-1,!1)})}getConfig(){const e={axis:this.axis},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Concatenate",n})();function od(n,t){for(;n<0;)n+=t;return n}Ct(wg);let gD=(()=>{class n extends Nu{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){q(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const r=e[0],s=e[1];if(r.length>3||s.length>3)throw new Zt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(r,s);if(r[a[0]]!==s[a[1]])throw new oe(`Dimension incompatibility: ${r[a[0]]} !== ${s[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new oe(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let a,r=e[0],s=e[1];return a=Array.isArray(this.axes)?this.axes.map((i,c)=>od(i,e[c].shape.length)):[od(this.axes,r.shape.length),od(this.axes,s.shape.length)],this.normalize&&(r=U0(r,a[0]),s=U0(s,a[1])),function db(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Zt("batchDot is not implemented for tensors of 4D or higher rank yet");if(q(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),q(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof e&&(e=[e,e]),"complex64"===n.dtype||"complex64"===t.dtype)throw new Zt("batchDot is not implemented for complex64-type Tensors yet.");const r=n.shape.length,s=t.shape.length;null==e&&(e=[r-1,s-2]);const a=e;return qe(()=>{let i,c;if(r>s){i=r-s;const d=[];for(let m=0;m<i;++m)d.push(1);t=$e(t,t.shape.concat(d))}else if(s>r){i=s-r;const d=[];for(let m=0;m<i;++m)d.push(1);n=$e(n,n.shape.concat(d))}else i=0;if(c=2===n.shape.length&&2===t.shape.length?a[0]===a[1]?Kt(Ce(n,t),a[0]):Kt(Ce(Vn(n,[1,0]),t),a[1]):Rn(n,t,a[0]!==n.shape.length-1,a[1]===t.shape.length-1),i>0){let d;d=r>s?r+s-3:r-1;const m=[];for(let g=d;g<d+i;++g)m.push(g);c=pu(c,m)}return 1===c.shape.length&&(c=Os(c,1)),c})}(r,s,a)}interpretAxes(e,r){let s;return s=Array.isArray(this.axes)?this.axes:[od(this.axes,e.length),od(this.axes,r.length)],s}computeOutputShape(e){q(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const r=e[0].slice(),s=e[1].slice();if(r.length>3||s.length>3)throw new Zt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(r,s);r.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const i=r.concat(s);return 1===i.length&&i.push(1),i}computeMask(e,r){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},r=super.getConfig();return Object.assign(e,r),e}}return n.className="Dot",n})();Ct(gD);let Ng=(()=>{class n extends Pn{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),r={stddev:this.stddev};return Object.assign(r,e),r}call(e,r){return qe(()=>{this.invokeCallHook(e,r);const s=cn(e);return wl(()=>Nt(k0(s.shape,0,this.stddev),s),()=>s,r.training||!1)})}}return n.className="GaussianNoise",n})();Ct(Ng);let EC=(()=>{class n extends Pn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),r={rate:this.rate};return Object.assign(r,e),r}call(e,r){return qe(()=>{this.invokeCallHook(e,r);const s=cn(e);return this.rate>0&&this.rate<1?wl(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return Ce(s,k0(s.shape,1,i))},()=>s,r.training||!1):s})}}return n.className="GaussianDropout",n})();Ct(EC);let El=(()=>{class n extends Pn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||cn(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),r={rate:this.rate};return Object.assign(r,e),r}call(e,r){return qe(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return wl(()=>{const i=cn(e),m=-1.7580993408473766;let g=Co(fl(s),this.rate);g=Bi(g,"float32");const y=((1-this.rate)*(1+this.rate*m**2))**-.5,C=-y*m*this.rate,T=Nt(Ce(i,g),Ce(Nt(g,-1),m));return Nt(Ce(T,y),C)},()=>cn(e),r.training||!1)}return e})}}return n.className="AlphaDropout",n})();function ud(n,t,e,r,s,a=.001){let i;if(2===n.rank)i=Yv(n,t,e,r,s,a);else if(3===n.rank)i=Jv(n,t,e,r,s,a);else{if(4!==n.rank)throw new Zt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);i=em(n,t,e,r,s,a)}return i}Ct(El);let pb=(()=>{class n extends Pn{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Fr(e.betaInitializer||"zeros"),this.gammaInitializer=Fr(e.gammaInitializer||"ones"),this.movingMeanInitializer=Fr(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Fr(e.movingVarianceInitializer||"ones"),this.betaConstraint=xs(e.betaConstraint),this.gammaConstraint=xs(e.gammaConstraint),this.betaRegularizer=Lr(e.betaRegularizer),this.gammaRegularizer=Lr(e.gammaRegularizer)}build(e){e=er(e);const r=this.axis>=0?this.axis:this.axis+e.length,s=e[r];if(null==s)throw new oe(`Axis ${r} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Hr({ndim:e.length,axes:{[r]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,r){return qe(()=>{const s=null!=r.training&&r.training,a=cn(e),i=a.shape,c=i.length,d=bs(0,c),m=this.axis>=0?this.axis:this.axis+c;d.splice(m,1);const g=ei(1,c);g[m]=i[m];const y=d.slice();y.sort();const C=!_t(y,bs(0,c).slice(0,c-1));if(!s)return(()=>{if(C){const V=$e(this.movingMean.read(),g),G=$e(this.movingVariance.read(),g),K=this.center?$e(this.beta.read(),g):null,ae=this.scale?$e(this.gamma.read(),g):null;return ud(a,V,G,K,ae,this.epsilon)}return ud(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[k,D,M]=function bD(n,t,e,r,s=.001){return _t(r.slice().sort(),bs(0,n.rank-1))?function vD(n,t,e,r,s=.001){return qe(()=>{const a=vs(n,r),i=a.mean,c=a.variance;return[ud(n,i,c,e,t,s),i,c]})}(n,t,e,r,s):function yD(n,t,e,r,s=.001){return qe(()=>{const a=vs(n,r),i=a.mean,c=a.variance,d=[];for(const k of bs(0,n.rank))-1!==r.indexOf(k)?d.push(1):d.push(n.shape[k]);const m=$e(i,d),g=$e(c,d),y=null==t?null:$e(t,d),C=null==e?null:$e(e,d);return[ud(n,m,g,C,y,s),i,c]})}(n,t,e,r,s)}(a,this.gamma.read(),this.beta.read(),d,this.epsilon),R=(V,G,K)=>{qe(()=>{const ae=1-K,le=V.read(),he=Ce(Ht(le,G),ae);V.write(Ht(le,he))})};return(()=>{R(this.movingMean,D,this.momentum),R(this.movingVariance,M,this.momentum)})(),k})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fn(this.betaInitializer),gammaInitializer:Fn(this.gammaInitializer),movingMeanInitializer:Fn(this.movingMeanInitializer),movingVarianceInitializer:Fn(this.movingVarianceInitializer),betaRegularizer:vr(this.betaRegularizer),gammaRegularizer:vr(this.gammaRegularizer),betaConstraint:hr(this.betaConstraint),gammaConstraint:hr(this.gammaConstraint)},r=super.getConfig();return Object.assign(e,r),e}}return n.className="BatchNormalization",n})();Ct(pb);let kC=(()=>{class n extends Pn{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const r of this.axis)if(!Number.isInteger(r))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Fr(e.betaInitializer||"zeros"),this.gammaInitializer=Fr(e.gammaInitializer||"ones"),this.betaRegularizer=Lr(e.betaRegularizer),this.gammaRegularizer=Lr(e.gammaRegularizer),this.supportsMasking=!0}build(e){const r=(e=er(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=r);for(const i of this.axis)if(i<0||i>=r)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==wn(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]);this.gamma=this.scale?this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,r){const s=cn(e),a=s.shape,i=a.length;return qe(()=>{let{mean:d,variance:m}=vs(s,this.axis,!0);const g=ei(1,i);for(const M of this.axis)g[M]=a[M];const y=M=>null!=M&&M.shape.length!==i?$e(M,g):M;let C=this.scale?y(this.gamma.read()):null,T=this.center?y(this.beta.read()):null;const k=[],D=[];for(let M=0;M<i;++M)-1!==this.axis.indexOf(M)?(k.push(a[M]),D.push(1)):(k.push(1),D.push(a[M]));return d=Ba(d,k),m=Ba(m,k),null!=C&&(C=Ba(C,D)),null!=T&&(T=Ba(T,D)),ud(s,d,m,T,C,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fn(this.betaInitializer),gammaInitializer:Fn(this.gammaInitializer),betaRegularizer:vr(this.betaRegularizer),gammaRegularizer:vr(this.gammaRegularizer)},r=super.getConfig();return Object.assign(e,r),e}}return n.className="LayerNormalization",n})();Ct(kC);let DC=(()=>{class n extends Pn{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new oe(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let r,s;if("number"==typeof e.padding[0])r=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new oe(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(r=e.padding[0],2!==e.padding[1].length)throw new oe(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[r,s]}this.inputSpec=[new Hr({ndim:4})]}computeOutputShape(e){let r,s;return e=er(e),"channelsFirst"===this.dataFormat?(r=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,s=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],r,s]):(r=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,s=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],r,s,e[3]])}call(e,r){return qe(()=>function xD(n,t,e){return qe(()=>{if(4!==n.rank)throw new oe(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new oe("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==e&&(e="channelsLast"),"channelsLast"!==e&&"channelsFirst"!==e)throw new oe(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===e?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],_s(n,r)})}(cn(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},r=super.getConfig();return Object.assign(e,r),e}}return n.className="ZeroPadding2D",n})();function ld(n,t,e,r,s,a){return qe(()=>{let i;ss(s),jm(a),ni(r),null==e&&(e=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),n=hC(n,s);const c="same"===r?"same":"valid";return i="max"===a?Fh(n,t,e,c):_h(n,t,e,c),"channelsFirst"===s&&(i=Vn(i,[0,3,1,2])),i})}function RC(n,t,e,r,s,a){return qe(()=>{let i;ss(s),jm(a),ni(r),null==e&&(e=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),n=rD(n,s);const c="same"===r?"same":"valid";return i="max"===a?pm(n,t,e,c):Xv(n,t,e,c),"channelsFirst"===s&&(i=Vn(i,[0,4,1,2,3])),i})}Ct(DC);class mb extends Pn{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new oe(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Ts(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new oe(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Ts(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,ni(this.padding),this.inputSpec=[new Hr({ndim:3})]}computeOutputShape(t){const e=Xi((t=er(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return qe(()=>{this.invokeCallHook(t,e),t=Pi(cn(t),2);const r=this.poolingFunction(cn(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return pu(r,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}let $C=(()=>{class n extends mb{constructor(e){super(e)}poolingFunction(e,r,s,a,i){return ss(i),ni(a),ld(e,r,s,a,i,"max")}}return n.className="MaxPooling1D",n})();Ct($C);let OC=(()=>{class n extends mb{constructor(e){super(e)}poolingFunction(e,r,s,a,i){return ss(i),ni(a),ld(e,r,s,a,i,"avg")}}return n.className="AveragePooling1D",n})();Ct(OC);class gb extends Pn{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new oe(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Ts(this.poolSize,"poolSize"),Ts(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ss(this.dataFormat),ni(this.padding),this.inputSpec=[new Hr({ndim:4})]}computeOutputShape(t){t=er(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],r="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Xi(e,this.poolSize[0],this.padding,this.strides[0]),r=Xi(r,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,r]:[t[0],e,r,t[3]]}call(t,e){return qe(()=>(this.invokeCallHook(t,e),this.poolingFunction(cn(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let FC=(()=>{class n extends gb{constructor(e){super(e)}poolingFunction(e,r,s,a,i){return ss(i),ni(a),ld(e,r,s,a,i,"max")}}return n.className="MaxPooling2D",n})();Ct(FC);let LC=(()=>{class n extends gb{constructor(e){super(e)}poolingFunction(e,r,s,a,i){return ss(i),ni(a),ld(e,r,s,a,i,"avg")}}return n.className="AveragePooling2D",n})();Ct(LC);class BC extends Pn{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new oe(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Ts(this.poolSize,"poolSize"),Ts(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ss(this.dataFormat),ni(this.padding),this.inputSpec=[new Hr({ndim:5})]}computeOutputShape(t){t=er(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],r="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Xi(e,this.poolSize[0],this.padding,this.strides[0]),r=Xi(r,this.poolSize[1],this.padding,this.strides[1]),s=Xi(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,r,s]:[t[0],e,r,s,t[4]]}call(t,e){return qe(()=>(this.invokeCallHook(t,e),this.poolingFunction(cn(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let vb=(()=>{class n extends BC{constructor(e){super(e)}poolingFunction(e,r,s,a,i){return ss(i),ni(a),RC(e,r,s,a,i,"max")}}return n.className="MaxPooling3D",n})();Ct(vb);let PC=(()=>{class n extends BC{constructor(e){super(e)}poolingFunction(e,r,s,a,i){return ss(i),ni(a),RC(e,r,s,a,i,"avg")}}return n.className="AveragePooling3D",n})();Ct(PC);class yb extends Pn{constructor(t){super(t),this.inputSpec=[new Hr({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Zt}}let zC=(()=>{class n extends yb{constructor(e){super(e||{})}call(e,r){return qe(()=>{const s=cn(e);return Ir(s,1)})}}return n.className="GlobalAveragePooling1D",n})();Ct(zC);let VC=(()=>{class n extends yb{constructor(e){super(e||{})}call(e,r){return qe(()=>{const s=cn(e);return La(s,1)})}}return n.className="GlobalMaxPooling1D",n})();Ct(VC);class cd extends Pn{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ss(this.dataFormat),this.inputSpec=[new Hr({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Zt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let fd=(()=>{class n extends cd{call(e,r){return qe(()=>{const s=cn(e);return Ir(s,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalAveragePooling2D",n})();Ct(fd);let UC=(()=>{class n extends cd{call(e,r){return qe(()=>{const s=cn(e);return La(s,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalMaxPooling2D",n})();Ct(UC);class WC extends Pn{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,r={}){const a=xi(e.layer,r);delete e.layer;const i={layer:a};return Object.assign(i,e),new t(i)}}let GC=(()=>{class n extends WC{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=er(e)).length<3)throw new oe(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const r=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(r),this.layer.built=!0),super.build(e)}computeOutputShape(e){const r=[(e=er(e))[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(r);return[s[0],e[1]].concat(s.slice(1))}call(e,r){return qe(()=>vg((c,d)=>[cn(this.layer.call(c,r)),[]],e=cn(e),[],!1,null,null,!1,!0)[1])}}return n.className="TimeDistributed",n})();Ct(GC);let HC=(()=>{class n extends WC{constructor(e){super(e);const r=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=r,this.forwardLayer=xi(s),r.goBackwards=!0!==r.goBackwards;const a={};if(a.className=e.layer.getClassName(),a.config=r,this.backwardLayer=xi(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function wD(n){Kc(jk,"BidirectionalMergeMode",n)}(this.mergeMode),e.weights)throw new Zt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const s=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let s,a,i,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState&&(i=r.slice(1)),s=r[0],s=s,"concat"===this.mergeMode?(s[s.length-1]*=2,a=[s]):a=null==this.mergeMode?[s,s.slice()]:[s],this.returnState?null==this.mergeMode?a.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):wa(a)}apply(e,r){let s=null==r?null:r.initialState,a=null==r?null:r.constants;null==r&&(r={});const i=mC(e,s,a,this.numConstants);if(e=i.inputs,s=i.initialState,a=i.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(null==s||0===s.length)&&null==a)return super.apply(e,r);const c=[],d=[];if(null!=s){const g=s.length;if(g%2>0)throw new oe("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");r.initialState=s,c.push(...s);const y=s.map(C=>new Hr({shape:C.shape}));this.forwardLayer.stateSpec=y.slice(0,g/2),this.backwardLayer.stateSpec=y.slice(g/2),d.push(...y)}if(null!=a)throw new Zt("Support for constants in Bidirectional layers is not implemented yet.");const m=c[0]instanceof Hi;for(const g of c)if(g instanceof Hi!==m)throw new oe("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(m){const g=[e].concat(c),y=this.inputSpec.concat(d),C=this.inputSpec;this.inputSpec=y;const T=super.apply(g,r);return this.inputSpec=C,T}return super.apply(e,r)}call(e,r){return qe(()=>{const s=r.initialState;let a,i,c,d;if(null==s)a=this.forwardLayer.call(e,r),i=this.backwardLayer.call(e,r);else{const m=s.slice(0,s.length/2),g=s.slice(s.length/2);a=this.forwardLayer.call(e,Object.assign(r,{initialState:m})),i=this.backwardLayer.call(e,Object.assign(r,{initialState:g}))}return this.returnState&&(Array.isArray(a)&&(c=a.slice(1).concat(i.slice(1))),a=a[0],i=i[0]),this.returnSequences&&(i=Xa(i,1)),"concat"===this.mergeMode?d=A0([a,i]):"sum"===this.mergeMode?d=Nt(a,i):"ave"===this.mergeMode?d=Ce(.5,Nt(a,i)):"mul"===this.mergeMode?d=Ce(a,i):null==this.mergeMode&&(d=[a,i]),this.returnState?null==this.mergeMode?d.concat(c):[d].concat(c):d})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){jc(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),jc(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,r){let s;if(Array.isArray(r)&&(r=r[0]),s=this.returnSequences?null==this.mergeMode?[r,r]:r:null==this.mergeMode?[null,null]:null,this.returnState){const i=this.forwardLayer.states.map(c=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},r=super.getConfig();return Object.assign(e,r),e}static fromConfig(e,r){const s=xi(r.layer);if(delete r.layer,null!=r.numConstants)throw new Zt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=r;return a.layer=s,new e(a)}}return n.className="Bidirectional",n})();Ct(HC);let KC=(()=>{class n extends Pn{constructor(e){super(e),this.scale=e.scale,this.offset=e.offset?e.offset:0}getConfig(){const e={scale:this.scale,offset:this.offset},r=super.getConfig();return Object.assign(e,r),e}call(e,r){return qe(()=>("float32"!==(e=cn(e)).dtype&&(e=Bi(e,"float32")),Nt(Ce(e,this.scale),this.offset)))}}return n.className="Rescaling",n})();Ct(KC);const{resizeBilinear:bb,cropAndResize:DO}=Ya;let ZC=(()=>{class n extends Pn{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,r,s,a,i,c,d,m){return qe(()=>{let g,y=!1;const M=[r/c,s/d,(a+r)/c,(i+s)/d],R=[];3===e.rank?(y=!0,g=xa([e])):g=e;for(let ae=0;ae<g.shape[0];ae++)R.push(M);const $=aa(R,[R.length,4]),V=hl(0,R.length,1,"int32"),K=DO(g,$,V,[a,i],"nearest");return Bi(y?cn(za(K)):K,m)})}upsize(e,r,s,a){return qe(()=>Bi(bb(e,[r,s]),a))}call(e,r){return qe(()=>{const s=cn(e),a=s.dtype,i=s.shape,c=i[i.length-3],d=i[i.length-2];let m=0;c!==this.height&&(m=Math.floor((c-this.height)/2));let g=0;return d!==this.width&&(g=Math.floor((d-this.width)/2),0===g&&(g=1)),m>=0&&g>=0?this.centerCrop(s,m,g,this.height,this.width,c,d,a):this.upsize(e,this.height,this.width,a)})}getConfig(){const e={height:this.height,width:this.width},r=super.getConfig();return Object.assign(e,r),e}computeOutputShape(e){const s=(e=er(e)).length-2;return e[e.length-3]=this.height,e[s]=this.width,e}}return n.className="CenterCrop",n})();Ct(ZC);let xb=(()=>{class n extends Pn{constructor(e){super(e),this.numTokens=e.numTokens,this.outputMode=e.outputMode?e.outputMode:"multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},r=super.getConfig();return Object.assign(e,r),e}computeOutputShape(e){return null==(e=er(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,r){return qe(()=>{let s;if("int32"!==(e=cn(e)).dtype&&(e=Bi(e,"int32")),void 0!==r.countWeights){if("count"!==this.outputMode)throw new oe(`countWeights is not used when outputMode !== count.\n              Received countWeights=${r.countWeights}`);s=cn(r.countWeights)}const a=La(e),i=Lc(e),c=Fs(this.numTokens,a).bufferSync().get(0),d=Co(i,0).bufferSync().get(0);if(!c||!d)throw new oe(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function ND(n,t,e,r){let s=cn(n);if("int32"!==s.dtype&&(s=Bi(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=Os(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Os(s,-1)),s.rank>2)throw new oe(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let d;if(d=Mh(s,void 0!==r&&"count"===t?r:[],e,i),"tfIdf"!==t)return d;if(r)return Ce(d,r);throw new oe("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,s)})}}return n.className="CategoryEncoding",n})();Ct(xb);const jC=new Set(["bilinear","nearest"]);let Sg=(()=>{class n extends Pn{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!jC.has(e.interpolation))throw new oe(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){return e=er(e),[this.height,this.width,e[2]]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},r=super.getConfig();return Object.assign(e,r),e}call(e,r){return qe(()=>{const s=[this.height,this.width];if("bilinear"===this.interpolation)return Ya.resizeBilinear(e,s,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Ya.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...jC]} are supported`)})}}return n.className="Resizing",n})();Ct(Sg);let XC=(()=>{class n{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}return n.className="RandomSeed",n})(),YC=(()=>{class n extends Pn{constructor(e){super(e),this.randomGenerator=new XC(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},r=super.getConfig();return Object.assign(e,r),e}}return n.className="BaseRandomLayer",n})();const Cg=new Set(["bilinear","nearest"]);let JC=(()=>{class n extends YC{constructor(e){super(e);const{factor:r,interpolation:s="bilinear"}=e;if(this.factor=r,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new oe(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new oe(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new oe(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(s){if(!Cg.has(s))throw new oe(`Invalid interpolation parameter: ${s} is not implemented`);this.interpolation=s}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},r=super.getConfig();return Object.assign(e,r),e}computeOutputShape(e){return e=er(e),[this.imgHeight,-1,e[2]]}call(e,r){return qe(()=>{const s=cn(e);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=fl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*a;i=Math.round(i);const c=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Ya.resizeBilinear(e,c);case"nearest":return Ya.resizeNearestNeighbor(e,c);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Cg]} are supported`)}})}}return n.className="RandomWidth",n})();function QC(n){return new ng(n)}function RO(n){return new fC(n)}function $O(n){return new lC(n)}function CD(n){return new cC(n)}function ID(n){return new eD(n)}function _D(n){return new nD(n)}function TD(n){return new tD(n)}function AD(n){return new oD(n)}function ED(n){return new sb(n)}function eI(n){return new ib(n)}function tI(n){return new ab(n)}function nI(n){return new pC(n)}function kD(n){return new iD(n)}function Ig(n){return new uD(n)}function _g(n){return new lD(n)}function MD(n){return new fD(n)}function DD(n){return new NC(n)}function wb(n){return new pD(n)}function rI(n){return new xC(n)}function Nb(n){return new bg(n)}function RD(n){return new wC(n)}function $D(n){return new SC(n)}function sI(n){return new CC(n)}function Sb(n){return new IC(n)}function OD(n){return new TC(n)}function FD(n){return new lb(n)}function LD(n){return new xg(n)}function aI(n){return new wg(n)}function iI(n){return new fb(n)}function BD(n){return new hb(n)}function Tg(n){return new cb(n)}function PD(n){return new gD(n)}function zD(n){return new pb(n)}function Cb(n){return new kC(n)}function o(n){return new DC(n)}function u(n){return new OC(n)}function l(n){return u(n)}function f(n){return u(n)}function h(n){return new LC(n)}function p(n){return h(n)}function b(n){return h(n)}function w(n){return new PC(n)}function N(n){return w(n)}function S(n){return w(n)}function x(n){return new zC(n)}function v(n){return new fd(n)}function I(n){return new VC(n)}function _(n){return new UC(n)}function A(n){return new $C(n)}function E(n){return new FC(n)}function B(n){return new vb(n)}function L(n){return new id(n)}function W(n){return new ob(n)}function O(n){return new hD(n)}function P(n){return new ef(n)}function z(n){return new vC(n)}function F(n){return new gC(n)}function Z(n){return new ub(n)}function j(n){return new bC(n)}function X(n){return new Ji(n)}function H(n){return new yC(n)}function Q(n){return new HC(n)}function ne(n){return new GC(n)}Ct(JC);const de=I,we=_,Te=A,ye=E;function ee(n){return new Ng(n)}function We(n){return new EC(n)}function J(n){return new El(n)}function Me(n){return new _C(n)}function je(n){return new KC(n)}function bt(n){return new ZC(n)}function Le(n){return new Sg(n)}function Xe(n){return new xb(n)}function mt(n){return new JC(n)}function rt(n,t){return KS(n,t)}function St(n,t){return DM(n,t)}function Mt(n,t){return RM(n,t)}function Bt(n,t){return ZS(n,t)}function dt(n,t){return Cl(n,t)}function gn(n,t){return MM(n,t)}function fn(n,t){return function J$(n,t){return qe(()=>{const e=kM(n,t),r=function X$(n,t){return qe(()=>Lt(Kt(ja(ga(n,1),ga(t,0))),"float32"))}(n,t),s=Nt(e,r);return Lt(ps(Fs(s,0),nn(e,s),0),"float32")})}(n,t)}function Wt(n,t){return qS(n,t)}function Jt(n,t){return W0(n,t)}function fe(n,t){return Ki(n,t)}function Ee(n,t){return Ki(n,t)}function lt(n,t){return Ki(n,t)}function Qe(n,t){return ri(n,t)}function It(n,t){return ri(n,t)}function Rt(n,t){return ri(n,t)}function Xt(n){return new Qc(n)}function xn(n){return function gg(n){return oC(n),new Qc({l1:null!=n?n.l1:null,l2:0})}(n)}function $n(n){return function YM(n){return oC(n),new Qc({l2:null!=n?n.l2:null,l1:0})}(n)}class Sr extends Jc{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof Il))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function Jn(n,t){return n<t}function ls(n,t){return n>t}class Ys extends Sr{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new Zt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?Jn:"max"===this.mode||-1!==this.monitor.indexOf("acc")?ls:Jn,this.monitorFunc===Jn&&(this.minDelta*=-1)}onTrainBegin(t){var e=this;return(0,Fe.Z)(function*(){e.wait=0,e.stoppedEpoch=0,e.best=null!=e.baseline?e.baseline:e.monitorFunc===Jn?1/0:-1/0})()}onEpochEnd(t,e){var r=this;return(0,Fe.Z)(function*(){yield xu(e);const s=r.getMonitorValue(e);null!=s&&(r.monitorFunc(s-r.minDelta,r.best)?(r.best=s,r.wait=0):(r.wait++,r.wait>=r.patience&&(r.stoppedEpoch=t,r.model.stopTraining=!0)))})()}onTrainEnd(t){var e=this;return(0,Fe.Z)(function*(){e.stoppedEpoch>0&&e.verbose&&console.log(`Epoch ${e.stoppedEpoch}: early stopping.`)})()}getMonitorValue(t){null==t&&(t={});const e=t[this.monitor];return null==e&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),e}}const fa={earlyStopping:function Oo(n){return new Ys(n)}};He().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Fo,zs=(()=>{return(n=zs||(zs={}))[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF",zs;var n})();!function(n){let t;var e;(e=t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(Fo||(Fo={}));const Ag={};function Ib(n,t){Ag[n]={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:t}}function _b(n){return Ag[n]}function Tb(n){delete Ag[n]}function U(n,t,e,r,s){const a=t.inputParams[n];if(a&&void 0!==a.inputIndexStart){const c=a.inputIndexStart,d=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?c+1:a.inputIndexEnd,m=c<0?t.inputNames.length+c:c;if("tensor"===a.type)return cs(t.inputNames[m],e,r,s);if("tensors"===a.type){const C=t.inputs.slice(c,d);return t.inputNames.slice(c,d).filter((k,D)=>{var M;return"NoOp"!==(null===(M=C[D])||void 0===M?void 0:M.op)}).map(k=>cs(k,e,r,s))}const g=cs(t.inputNames[m],e,r,s),y=g.dataSync();return"number"===a.type?y[0]:Xr(g.shape,y)}const i=t.attrParams[n];return i&&i.value}function cs(n,t,e,r){const[s,a]=si(n,e);if(null!=r){const c=r.getHashTableHandleByName(s);if(null!=c)return c}const i=e.currentContextIds.find(c=>!!t[oI(s,c)]);return void 0!==i?t[oI(s,i)][a]:void 0}function OO(n,t,e){return t[oI(n,e.currentContextId)]}function Ml(n,t){const[e,r,s]=si(n,t);return[oI(e,t&&t.currentContextId),r,s]}function oI(n,t){return t?`${n}-${t}`:n}function si(n,t){if(""===n)return["",0,void 0];const e=null!=t&&null!=t.parseNodeNameCache;if(e){const a=t.parseNodeNameCache.get(n);if(null!=a)return a}const r=n.split(":");let s;if(1===r.length)s=[n,0,void 0];else{const i=3===r.length?r[1]:void 0;s=[r[0],Number(r[r.length-1]),i]}return e&&t.parseNodeNameCache.set(n,s),s}function uI(n,t,e){let r=U("pad",n,t,e);if("explicit"===r){r=U("explicitPaddings",n,t,e);const s=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)s[a][0]=r[2*a],s[a][1]=r[2*a+1];return s}return r}function Dl(n){return n.kept?n:ki(n)}const hP=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],dP=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pP=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],mP=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],gP=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],vP=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yP=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],bP=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],xP=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],wP=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],NP=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SP=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],CP=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],IP=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],_P=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],TP=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],AP=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],EP=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],kP=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class FO{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[$t,mn,on,kn,Ye,Ze,ve,Et,xt,Cn,In,Zn,Er,kr,or,ur,ks,lr,Zr].map(r=>r.json));this.opMappers=e.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(t,e={}){const s=[],a=[],i=[],c=t.node.reduce((D,M)=>(D[M.name]=this.mapNode(M),M.op.startsWith("Placeholder")?s.push(D[M.name]):"Const"===M.op?a.push(D[M.name]):(null==M.input||0===M.input.length)&&i.push(D[M.name]),D),{});let d=[];const m=[];let g={},y={};null!=e&&(g=this.mapSignatureEntries(e.inputs),y=this.mapSignatureEntries(e.outputs));const C=Object.keys(c);C.forEach(D=>{const M=c[D];M.inputNames.forEach((R,$)=>{const[V,,G]=Ml(R),K=c[V];if(null!=K.outputs){const ae=K.outputs.indexOf(G);-1!==ae&&(M.inputNames[$]=`${V}:${ae}`)}M.inputs.push(K),K.children.push(M)})}),0===Object.keys(y).length?C.forEach(D=>{const M=c[D];0===M.children.length&&m.push(M)}):Object.keys(y).forEach(D=>{const[M]=Ml(D),R=c[M];null!=R&&(R.signatureKey=y[D],m.push(R))}),Object.keys(g).length>0?Object.keys(g).forEach(D=>{const[M]=Ml(D),R=c[M];R&&(R.signatureKey=g[D],d.push(R))}):d=s;let T={};null!=t.library&&null!=t.library.function&&(T=t.library.function.reduce((D,M)=>(D[M.signature.name]=this.mapFunction(M),D),{}));const k={nodes:c,inputs:d,outputs:m,weights:a,placeholders:s,signature:e,functions:T};return i.length>0&&(k.initNodes=i),k}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,r)=>(e[t[r].name]=r,e),{})}mapNode(t){const e=_b(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const r={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(r.inputParams=e.inputs.reduce((s,a)=>(s[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},s),{})),null!=e.attrs&&(r.attrParams=e.attrs.reduce((s,a)=>{const i=a.type;let c;switch(a.type){case"string":c=VD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=VD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":c=jD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=jD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":c=WD(t.attr,a.tfName,a.defaultValue||0),void 0===c&&a.tfDeprecatedName&&(c=WD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":c=ZD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=ZD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":c=UD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=UD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":c=YD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=YD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":c=KD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=KD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":c=XD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=XD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":c=qD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=qD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":c=HD(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=HD(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":c=BO(t.attr,a.tfName,a.defaultValue),void 0===c&&a.tfDeprecatedName&&(c=BO(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${t.op}`)}return s[a.name]={value:c,type:i},s},{})),r}mapFunction(t){const e=t.nodeDef,s=[];let a={};null!=e&&(a=e.reduce((y,C)=>(y[C.name]=this.mapNode(C),"Const"===C.op&&s.push(y[C.name]),y),{}));const i=[],c=[];t.signature.inputArg.forEach(y=>{const[C]=Ml(y.name),T={name:C,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:GD(y.type),type:"dtype"}},children:[]};T.signatureKey=y.name,i.push(T),a[C]=T}),Object.keys(a).forEach(y=>{const C=a[y];C.inputNames.forEach((T,k)=>{const[D,,M]=Ml(T),R=a[D];if(null!=R.outputs){const $=R.outputs.indexOf(M);-1!==$&&(C.inputNames[k]=`${D}:${$}`)}C.inputs.push(R),R.children.push(C)})});const m=t.ret;t.signature.outputArg.forEach(y=>{const[C,T]=Ml(m[y.name]),k=a[C];null!=k&&(k.defaultOutput=T,c.push(k))});const g=this.mapArgsToSignature(t);return{nodes:a,inputs:i,outputs:c,weights:s,placeholders:[],signature:g}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r),e),{}),outputs:t.signature.outputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r,t.ret),e),{})}}mapArgToTensorInfo(t,e){let r=t.name;return null!=e&&(r=e[r]),{name:r,dtype:t.type}}}function LO(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):function MP(n){const t=He().global;if(void 0!==t.atob)return t.atob(n);if("undefined"!=typeof Buffer)return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(n);return t?e:e.toLowerCase()}function VD(n,t,e,r=!1){const s=n[t];return null!=s?LO(s.s,r):e}function UD(n,t,e){const r=n[t];return r?r.b:e}function WD(n,t,e){const r=n[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:e;return"number"==typeof s?s:parseInt(s,10)}function GD(n){switch("string"==typeof n&&(n=zs[n]),n){case zs.DT_FLOAT:case zs.DT_HALF:return"float32";case zs.DT_INT32:case zs.DT_INT64:case zs.DT_INT8:case zs.DT_UINT8:return"int32";case zs.DT_BOOL:return"bool";case zs.DT_DOUBLE:return"float32";case zs.DT_STRING:return"string";default:return null}}function BO(n,t,e){const r=n[t];return r&&r.func?r.func.name:e}function qD(n,t,e){const r=n[t];return r&&r.type?GD(r.type):e}function HD(n,t,e){const r=n[t];return r&&r.list&&r.list.type?r.list.type.map(s=>GD(s)):e}function PO(n){if(!n.unknownRank)return null!=n.dim?n.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function KD(n,t,e){const r=n[t];return r&&r.shape?PO(r.shape):e}function ZD(n,t,e){const r=n[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>"number"==typeof s?s:parseInt(s,10)):e}function jD(n,t,e,r=!1){const s=n[t];return s&&s.list&&s.list.s?s.list.s.map(a=>LO(a,r)):e}function XD(n,t,e){const r=n[t];return r&&r.list&&r.list.shape?r.list.shape.map(s=>PO(s)):e}function YD(n,t,e){const r=n[t];return r&&r.list&&r.list.b?r.list.b:e}class DP{constructor(t,e,r){this.node=t,this.tensorMap=e,this.context=r,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(s=>this.getInput(s)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((s,a)=>(s[a]=this.getAttr(a),s),{}))}getInput(t){return cs(t,this.tensorMap,this.context)}getAttr(t,e){const r=this.node.rawAttrs[t];if(null!=r.tensor)return cs(t,this.tensorMap,this.context);if(null!=r.i||null!=r.f)return WD(this.node.rawAttrs,t,e);if(null!=r.s)return VD(this.node.rawAttrs,t,e);if(null!=r.b)return UD(this.node.rawAttrs,t,e);if(null!=r.shape)return KD(this.node.rawAttrs,t,e);if(null!=r.type)return qD(this.node.rawAttrs,t,e);if(null!=r.list){if(null!=r.list.i||null!=r.list.f)return ZD(this.node.rawAttrs,t,e);if(null!=r.list.s)return jD(this.node.rawAttrs,t,e);if(null!=r.list.shape)return XD(this.node.rawAttrs,t,e);if(null!=r.list.b)return YD(this.node.rawAttrs,t,e);if(null!=r.list.type)return HD(this.node.rawAttrs,t,e)}return e}}function Qi(n,t,e=""){if("number"!=typeof n&&"number"!=typeof t){q(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let r=0;r<n.length;r++){const s=n[r],a=t[r];q(s<0||a<0||s===a,()=>e+` Shapes ${n} and ${t} must match`)}}}function zO(n){return!("number"==typeof n||n.some(t=>t<0))}function Ab(n,t,e){let r=JD(n,e);const s=!zO(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(a=>{r=JD(a.shape,r)}),!zO(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function JD(n,t){if("number"==typeof n)return t;if("number"==typeof t)return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let r=0;r<n.length;++r){const s=n[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[r]=s>=0?s:a}return e}class OP{constructor(t,e,r,s,a,i,c){this.name=t,this.dtype=e,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=c,this.tensors=[],this.closed_=!1,this.idTensor=ln(0),Qr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(null==t||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=e.shape),Qi(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);r.tensor=e,Qr(e),r.written=!0,this.tensors[t]=r}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((r,s)=>this.write(r,e[s]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let s=0;s<this.size();s++)t.push(s)}if(0===t.length)return aa([],[0].concat(this.elementShape));const r=this.readMany(t);return Qi(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),xa(r,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return aa([],[0].concat(this.elementShape));const e=[];for(let s=0;s<this.size();s++)e.push(s);const r=this.readMany(e);return Qi(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),$r(r,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(t,za(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let r=0;const s=t.map(d=>(r+=d,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===r?0:e.size/r,i=[];qe(()=>{e=$e(e,[1,r,a]);for(let d=0;d<t.length;++d)i[d]=$e(qn(e,[0,0===d?0:s[d-1],0],[1,t[d],a]),this.elementShape);return i});const c=[];for(let d=0;d<t.length;d++)c[d]=d;this.writeMany(c,i)}}class dd{get id(){return this.idTensor.id}constructor(t,e,r,s=-1){this.tensors=t,this.elementShape=e,this.elementDtype=r,null!=t&&t.forEach(a=>{if(r!==a.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${a.dtype}`);Qi(e,a.shape,"TensorList shape mismatch: "),Qr(a)}),this.idTensor=ln(0),this.maxNumElements=s,Qr(this.idTensor)}copy(){return new dd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(null==t||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,r=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==r&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Qi(t,this.elementShape,"TensorList shape mismatch: ");const s=Ab(this.elementShape,this.tensors,t);return qe(()=>{const a=this.tensors.map(i=>$e(i,s));return xa(a,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const r=Ab(this.elementShape,this.tensors,t),s=this.tensors.pop();return s.kept=!1,Qi(s.shape,t,"TensorList shape mismatch: "),$e(s,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Qi(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Qr(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new dd([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let r=0;r<Math.min(this.tensors.length,t);++r)e.tensors[r]=this.tensors[r];return e}getItem(t,e,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);Qi(this.tensors[t].shape,e,"TensorList shape mismatch: ");const s=Ab(this.elementShape,this.tensors,e);return $e(this.tensors[t],s)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Qi(this.elementShape,e.shape,"TensorList shape mismatch: "),Qr(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,r){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Qi(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());const s=Ab(this.elementShape,this.tensors,r);return 0===t.length?aa([],[0].concat(s)):qe(()=>{const a=t.map(i=>$e(this.tensors[i],s));return xa(a,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Qi(this.elementShape,e,"TensorList shape mismatch: ");const r=Ab(this.elementShape,this.tensors,e);return 0===this.size()?aa([],[0].concat(r)):qe(()=>{const s=this.tensors.map(a=>$e(a,r));return $r(s,0)})}}const zP=function(){var n=(0,Fe.Z)(function*(t,e,r){switch(t.op){case"If":case"StatelessIf":{const s=U("thenBranch",t,e,r),a=U("elseBranch",t,e,r),i=U("cond",t,e,r),c=U("args",t,e,r);return(yield i.data())[0]?r.functionMap[s].executeFunctionAsync(c,r.tensorArrayMap,r.tensorListMap):r.functionMap[a].executeFunctionAsync(c,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{const s=U("body",t,e,r),a=U("cond",t,e,r),i=U("args",t,e,r),c=yield r.functionMap[a].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap),d=i.map(y=>y.id);let m=yield c[0].data();c.forEach(y=>{!y.kept&&-1===d.indexOf(y.id)&&y.dispose()});let g=i;for(;m[0];){const y=g;g=yield r.functionMap[s].executeFunctionAsync(g,r.tensorArrayMap,r.tensorListMap);const C=g.map(k=>k.id);y.forEach(k=>{!k.kept&&-1===d.indexOf(k.id)&&-1===C.indexOf(k.id)&&k.dispose()});const T=yield r.functionMap[a].executeFunctionAsync(g,r.tensorArrayMap,r.tensorListMap);m=yield T[0].data(),T.forEach(k=>{!k.kept&&-1===d.indexOf(k.id)&&-1===C.indexOf(k.id)&&k.dispose()})}return g}case"LoopCond":return[Dl(U("pred",t,e,r))];case"Switch":{const s=U("pred",t,e,r);let a=U("data",t,e,r);return a.kept||(a=Dl(a)),(yield s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=t.inputNames.find(a=>void 0!==cs(a,e,r));return s?[Dl(cs(s,e,r))]:void 0}case"Enter":{const s=U("frameName",t,e,r),a=U("tensor",t,e,r);return r.enterFrame(s),[Dl(a)]}case"Exit":{const s=U("tensor",t,e,r);return r.exitFrame(),[Dl(s)]}case"NextIteration":{const s=U("tensor",t,e,r);return r.nextIteration(),[Dl(s)]}case"TensorArrayV3":{const s=U("size",t,e,r),a=U("dtype",t,e,r),i=U("elementShape",t,e,r),c=U("dynamicSize",t,e,r),d=U("clearAfterRead",t,e,r),m=U("identicalElementShapes",t,e,r),g=U("name",t,e,r),y=new OP(g,a,s,i,m,c,d);return r.addTensorArray(y),[y.idTensor,ln(1)]}case"TensorArrayWriteV3":{const s=U("tensorArrayId",t,e,r),a=U("index",t,e,r),i=U("tensor",t,e,r),c=r.getTensorArray(s.id);return c.write(a,i),[c.idTensor]}case"TensorArrayReadV3":{const s=U("tensorArrayId",t,e,r),a=U("index",t,e,r);return[r.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=U("tensorArrayId",t,e,r),a=U("indices",t,e,r),i=U("dtype",t,e,r);return[r.getTensorArray(s.id).gather(a,i)]}case"TensorArrayScatterV3":{const s=U("tensorArrayId",t,e,r),a=U("indices",t,e,r),i=U("tensor",t,e,r),c=r.getTensorArray(s.id);return c.scatter(a,i),[c.idTensor]}case"TensorArrayConcatV3":{const s=U("tensorArrayId",t,e,r),a=r.getTensorArray(s.id),i=U("dtype",t,e,r);return[a.concat(i)]}case"TensorArraySplitV3":{const s=U("tensorArrayId",t,e,r),a=U("tensor",t,e,r),i=U("lengths",t,e,r),c=r.getTensorArray(s.id);return c.split(i,a),[c.idTensor]}case"TensorArraySizeV3":{const s=U("tensorArrayId",t,e,r);return[ln(r.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=U("tensorArrayId",t,e,r),a=r.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=U("tensorListId",t,e,r),a=U("index",t,e,r),i=U("tensor",t,e,r),c=r.getTensorList(s.id);return c.setItem(a,i),[c.idTensor]}case"TensorListGetItem":{const s=U("tensorListId",t,e,r),a=U("index",t,e,r),i=U("elementShape",t,e,r),c=U("elementDType",t,e,r);return[r.getTensorList(s.id).getItem(a,i,c)]}case"TensorListScatterV2":case"TensorListScatter":{const s=U("indices",t,e,r),d=function BP(n,t,e,r){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new dd([],e,n.dtype,r),i=za(n,0);return t.forEach((c,d)=>{a.setItem(c,i[d])}),a}(U("tensor",t,e,r),s,U("elementShape",t,e,r),U("numElements",t,e,r));return r.addTensorList(d),[d.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=U("elementShape",t,e,r),a=U("elementDType",t,e,r);let i;i="TensorListReserve"===t.op?"numElements":"maxNumElements";const c=U(i,t,e,r),m=function LP(n,t,e,r){return new dd([],n,t,r)}(s,a,0,"TensorListReserve"===t.op?-1:c);return r.addTensorList(m),[m.idTensor]}case"TensorListGather":{const s=U("tensorListId",t,e,r),a=U("indices",t,e,r),i=U("elementShape",t,e,r),c=U("elementDType",t,e,r);return[r.getTensorList(s.id).gather(a,c,i)]}case"TensorListStack":{const s=U("tensorListId",t,e,r),a=U("elementShape",t,e,r),i=U("elementDType",t,e,r),c=U("numElements",t,e,r);return[r.getTensorList(s.id).stack(a,i,c)]}case"TensorListFromTensor":{const c=function FP(n,t,e){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);Qi(n.shape.slice(1),t,"TensorList shape mismatch: ");const a=za(n);return new dd(a,t,r)}(U("tensor",t,e,r),U("elementShape",t,e,r),U("elementDType",t,e,r));return r.addTensorList(c),[c.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=U("tensorListId",t,e,r),a=r.getTensorList(s.id),i=U("dtype",t,e,r),c=U("elementShape",t,e,r);return[a.concat(i,c)]}case"TensorListPushBack":{const s=U("tensorListId",t,e,r),a=U("tensor",t,e,r),i=r.getTensorList(s.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{const s=U("tensorListId",t,e,r),a=U("elementShape",t,e,r),i=U("elementDType",t,e,r);return[r.getTensorList(s.id).popBack(a,i)]}case"TensorListSplit":{const s=U("tensor",t,e,r),a=U("elementShape",t,e,r),c=function PP(n,t,e){let r=0;const s=t.map(g=>(r+=g,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${n.shape}`);const i=JD(n.shape.slice(1),e),c=0===r?0:n.size/r,d=qe(()=>{const g=[];n=$e(n,[1,r,c]);for(let y=0;y<t.length;++y)g[y]=$e(qn(n,[0,0===y?0:s[y-1],0],[1,t[y],c]),i);return n.dispose(),g}),m=new dd([],e,n.dtype,t.length);for(let g=0;g<d.length;g++)m.setItem(g,d[g]);return m}(s,U("lengths",t,e,r),a);return r.addTensorList(c),[c.idTensor]}case"TensorListLength":{const s=U("tensorListId",t,e,r);return[ln(r.getTensorList(s.id).size(),"int32")]}case"TensorListResize":{const s=U("tensorListId",t,e,r),a=U("size",t,e,r),c=r.getTensorList(s.id).resize(a);return r.addTensorList(c),[c.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(e,r,s){return n.apply(this,arguments)}}();function VO(n,t,e){const[r,s]=U("fusedOps",n,t,e),a="biasadd"===r,i=!a,c="prelu"===s,d="fusedbatchnorm"===r,m=U("numArgs",n,t,e);if(a){if(c&&2!==m)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&a&&1!==m)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(d)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const g=U("strides",n,t,e),y=uI(n,t,e),C=U("dataFormat",n,t,e).toUpperCase(),T=U("dilations",n,t,e);let[k,D]=U("args",n,t,e);return i&&(D=k,k=void 0),{stride:g,pad:y,dataFormat:C,dilations:T,biasArg:k,preluArg:D,activationFunc:s,leakyreluAlpha:U("leakyreluAlpha",n,t,e)}}function QD(n,t,e){return{boxes:U("boxes",n,t,e),scores:U("scores",n,t,e),maxOutputSize:U("maxOutputSize",n,t,e),iouThreshold:U("iouThreshold",n,t,e),scoreThreshold:U("scoreThreshold",n,t,e),softNmsSigma:U("softNmsSigma",n,t,e)}}const WP=function(){var n=(0,Fe.Z)(function*(t,e,r,s,a=xr){switch(t.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:c,maxOutputSize:d,iouThreshold:m,scoreThreshold:g,softNmsSigma:y}=QD(t,e,r),C=yield a.image.nonMaxSuppressionWithScoreAsync(i,c,d,m,g,y);return[C.selectedIndices,C.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:c,maxOutputSize:d,iouThreshold:m,scoreThreshold:g}=QD(t,e,r),y=U("padToMaxOutputSize",t,e,r),C=yield a.image.nonMaxSuppressionPaddedAsync(i,c,d,m,g,y);return[C.selectedIndices,C.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:c,maxOutputSize:d,iouThreshold:m,scoreThreshold:g}=QD(t,e,r);return[yield a.image.nonMaxSuppressionAsync(i,c,d,m,g)]}case"Where":{const i=a.cast(U("condition",t,e,r),"bool"),c=[yield a.whereAsync(i)];return i.dispose(),c}case"ListDiff":return a.setdiff1dAsync(U("x",t,e,r),U("y",t,e,r));default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(e,r,s,a){return n.apply(this,arguments)}}();class HP{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=ln(0),this.tensorMap=new Map,Qr(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ln(this.size(),"int32")}import(t,e){var r=this;return(0,Fe.Z)(function*(){r.checkKeyAndValueTensor(t,e);const s=yield t.data();return r.tensorMap.forEach(a=>a.dispose()),r.tensorMap.clear(),qe(()=>{const a=za(e),i=s.length,c=a.length;q(i===c,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${c} elements.`);for(let d=0;d<i;d++){const m=s[d],g=a[d];Qr(g),r.tensorMap.set(m,g)}return r.handle})})()}find(t,e){var r=this;return(0,Fe.Z)(function*(){r.checkKeyAndValueTensor(t,e);const s=yield t.data();return qe(()=>{const a=[];for(let i=0;i<s.length;i++){const d=r.findWithDefault(s[i],e);a.push(d)}return xa(a)})})()}findWithDefault(t,e){const r=this.tensorMap.get(t);return null!=r?r:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}const KP=function(){var n=(0,Fe.Z)(function*(t,e,r,s){switch(t.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(t.name);if(null!=a)return[a];{const i=U("keyDType",t,e,r),c=U("valueDType",t,e,r),d=new HP(i,c);return s.addHashTable(t.name,d),[d.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=U("tableHandle",t,e,r,s),i=U("keys",t,e,r),c=U("values",t,e,r);return[yield s.getHashTableById(a.id).import(i,c)]}case"LookupTableFind":case"LookupTableFindV2":{const a=U("tableHandle",t,e,r,s),i=U("keys",t,e,r),c=U("defaultValue",t,e,r);return[yield s.getHashTableById(a.id).find(i,c)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=U("tableHandle",t,e,r,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(e,r,s,a){return n.apply(this,arguments)}}();function UO(n,t,e,r,s=qe){const a=((i,c,d)=>{switch(i.category){case"arithmetic":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(U("a",n,t,e),U("b",n,t,e))];case"AddN":return[r.addN(U("tensors",n,t,e))];case"FloorMod":case"Mod":return[r.mod(U("a",n,t,e),U("b",n,t,e))];case"Mul":return[r.mul(U("a",n,t,e),U("b",n,t,e))];case"RealDiv":case"Div":return[r.div(U("a",n,t,e),U("b",n,t,e))];case"DivNoNan":return[r.divNoNan(U("a",n,t,e),U("b",n,t,e))];case"FloorDiv":return[r.floorDiv(U("a",n,t,e),U("b",n,t,e))];case"Sub":return[r.sub(U("a",n,t,e),U("b",n,t,e))];case"Minimum":return[r.minimum(U("a",n,t,e),U("b",n,t,e))];case"Maximum":return[r.maximum(U("a",n,t,e),U("b",n,t,e))];case"Pow":return[r.pow(U("a",n,t,e),U("b",n,t,e))];case"SquaredDifference":return[r.squaredDifference(U("a",n,t,e),U("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"basic_math":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(U("x",n,t,e))];case"Acos":return[r.acos(U("x",n,t,e))];case"Acosh":return[r.acosh(U("x",n,t,e))];case"Asin":return[r.asin(U("x",n,t,e))];case"Asinh":return[r.asinh(U("x",n,t,e))];case"Atan":return[r.atan(U("x",n,t,e))];case"Atan2":return[r.atan2(U("x",n,t,e),U("y",n,t,e))];case"Atanh":return[r.atanh(U("x",n,t,e))];case"Ceil":return[r.ceil(U("x",n,t,e))];case"Complex":return[r.complex(U("real",n,t,e),U("imag",n,t,e))];case"Cos":return[r.cos(U("x",n,t,e))];case"Cosh":return[r.cosh(U("x",n,t,e))];case"Elu":return[r.elu(U("x",n,t,e))];case"Erf":return[r.erf(U("x",n,t,e))];case"Exp":return[r.exp(U("x",n,t,e))];case"Expm1":return[r.expm1(U("x",n,t,e))];case"Floor":return[r.floor(U("x",n,t,e))];case"Log":return[r.log(U("x",n,t,e))];case"Log1p":return[r.log1p(U("x",n,t,e))];case"Imag":return[r.imag(U("x",n,t,e))];case"Neg":return[r.neg(U("x",n,t,e))];case"Reciprocal":return[r.reciprocal(U("x",n,t,e))];case"Real":return[r.real(U("x",n,t,e))];case"Relu":return[r.relu(U("x",n,t,e))];case"Round":return[r.round(U("x",n,t,e))];case"Selu":return[r.selu(U("x",n,t,e))];case"Sigmoid":return[r.sigmoid(U("x",n,t,e))];case"Sin":return[r.sin(U("x",n,t,e))];case"Sign":return[r.sign(U("x",n,t,e))];case"Sinh":return[r.sinh(U("x",n,t,e))];case"Softplus":return[r.softplus(U("x",n,t,e))];case"Sqrt":return[r.sqrt(U("x",n,t,e))];case"Square":return[r.square(U("x",n,t,e))];case"Tanh":return[r.tanh(U("x",n,t,e))];case"Tan":return[r.tan(U("x",n,t,e))];case"ClipByValue":return[r.clipByValue(U("x",n,t,e),U("clipValueMin",n,t,e),U("clipValueMax",n,t,e))];case"Relu6":return[r.relu6(U("x",n,t,e))];case"Rsqrt":return[r.rsqrt(cs(n.inputNames[0],t,e))];case"Prod":return[r.prod(U("x",n,t,e),U("axes",n,t,e))];case"LeakyRelu":return[r.leakyRelu(U("x",n,t,e),U("alpha",n,t,e))];case"Prelu":return[r.prelu(U("x",n,t,e),U("alpha",n,t,e))];case"IsNan":return[r.isNaN(cs(n.inputNames[0],t,e))];case"IsInf":return[r.isInf(cs(n.inputNames[0],t,e))];case"IsFinite":return[r.isFinite(cs(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"control":return zP(i,c,d);case"convolution":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"Conv1D":{const s=U("stride",n,t,e),a=U("pad",n,t,e),i=U("dataFormat",n,t,e).toUpperCase(),c=U("dilation",n,t,e);return[r.conv1d(U("x",n,t,e),U("filter",n,t,e),s,a,i,c)]}case"Conv2D":{const s=U("strides",n,t,e),a=uI(n,t,e),i=U("dataFormat",n,t,e).toUpperCase(),c=U("dilations",n,t,e);return[r.conv2d(U("x",n,t,e),U("filter",n,t,e),[s[1],s[2]],a,i,[c[1],c[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:c,biasArg:d,preluArg:m,activationFunc:g,leakyreluAlpha:y}=VO(n,t,e);return[r.fused.conv2d({x:U("x",n,t,e),filter:U("filter",n,t,e),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[c[1],c[2]],bias:d,activation:g,preluActivationWeights:m,leakyreluAlpha:y})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:c,biasArg:d,preluArg:m,activationFunc:g,leakyreluAlpha:y}=VO(n,t,e);return[r.fused.depthwiseConv2d({x:U("x",n,t,e),filter:U("filter",n,t,e),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[c[1],c[2]],bias:d,activation:g,preluActivationWeights:m,leakyreluAlpha:y})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=U("outputShape",n,t,e),a=U("strides",n,t,e),i=uI(n,t,e);return[r.conv2dTranspose(U("x",n,t,e),U("filter",n,t,e),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=U("strides",n,t,e),a=uI(n,t,e),i=U("dilations",n,t,e),c=U("dataFormat",n,t,e).toUpperCase();return[r.depthwiseConv2d(U("input",n,t,e),U("filter",n,t,e),[s[1],s[2]],a,c,[i[1],i[2]])]}case"Conv3D":{const s=U("strides",n,t,e),a=U("pad",n,t,e),i=U("dataFormat",n,t,e).toUpperCase(),c=U("dilations",n,t,e);return[r.conv3d(U("x",n,t,e),U("filter",n,t,e),[s[1],s[2],s[3]],a,i,[c[1],c[2],c[3]])]}case"AvgPool":{const s=U("strides",n,t,e),a=U("pad",n,t,e),i=U("kernelSize",n,t,e);return[r.avgPool(U("x",n,t,e),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=U("strides",n,t,e),a=U("pad",n,t,e),i=U("kernelSize",n,t,e);return[r.maxPool(U("x",n,t,e),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=U("strides",n,t,e),a=U("pad",n,t,e),i=U("kernelSize",n,t,e),c=U("includeBatchInIndex",n,t,e),{result:d,indexes:m}=r.maxPoolWithArgmax(U("x",n,t,e),[i[1],i[2]],[s[1],s[2]],a,c);return[d,m]}case"AvgPool3D":{const s=U("strides",n,t,e),a=U("pad",n,t,e),i=U("kernelSize",n,t,e);return[r.avgPool3d(U("x",n,t,e),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=U("strides",n,t,e),a=U("pad",n,t,e),i=U("kernelSize",n,t,e);return[r.maxPool3d(U("x",n,t,e),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=U("strides",n,t,e),a=U("pad",n,t,e),i=U("dilations",n,t,e),c=s[1],d=s[2],m=i[1],g=i[2];return[r.dilation2d(U("x",n,t,e),U("filter",n,t,e),[c,d],a,[m,g],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"creation":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"Fill":{const s=U("shape",n,t,e),a=U("dtype",n,t,e),i=U("value",n,t,e);return[r.fill(s,i,a)]}case"LinSpace":{const s=U("start",n,t,e),a=U("stop",n,t,e),i=U("num",n,t,e);return[r.linspace(s,a,i)]}case"Multinomial":{const s=U("logits",n,t,e),a=U("numSamples",n,t,e),i=U("seed",n,t,e);return[r.multinomial(s,a,i)]}case"OneHot":{const s=U("indices",n,t,e),a=U("depth",n,t,e),i=U("onValue",n,t,e),c=U("offValue",n,t,e),d=U("dtype",n,t,e);return[r.oneHot(s,a,i,c,d)]}case"Ones":return[r.ones(U("shape",n,t,e),U("dtype",n,t,e))];case"OnesLike":return[r.onesLike(U("x",n,t,e))];case"RandomStandardNormal":return[r.randomStandardNormal(U("shape",n,t,e),U("dtype",n,t,e),U("seed",n,t,e))];case"RandomUniform":return[r.randomUniform(U("shape",n,t,e),U("minval",n,t,e),U("maxval",n,t,e),U("dtype",n,t,e))];case"Range":{const s=U("start",n,t,e),a=U("stop",n,t,e),i=U("step",n,t,e);return[r.range(s,a,i,U("dtype",n,t,e))]}case"TruncatedNormal":{const s=U("shape",n,t,e),a=U("mean",n,t,e),i=U("stdDev",n,t,e),c=U("seed",n,t,e);return[r.truncatedNormal(s,a,i,U("dtype",n,t,e),c)]}case"Zeros":return[r.zeros(U("shape",n,t,e),U("dtype",n,t,e))];case"ZerosLike":return[r.zerosLike(U("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"dynamic":return WP(i,c,d);case"evaluation":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"LowerBound":{const s=U("sortedSequence",n,t,e),a=U("values",n,t,e);return[r.lowerBound(s,a)]}case"TopKV2":{const s=U("x",n,t,e),a=U("k",n,t,e),i=U("sorted",n,t,e),c=r.topk(s,a,i);return[c.values,c.indices]}case"UpperBound":{const s=U("sortedSequence",n,t,e),a=U("values",n,t,e);return[r.upperBound(s,a)]}case"Unique":{const s=U("x",n,t,e),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=U("x",n,t,e),a=U("axis",n,t,e),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"image":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"ResizeBilinear":{const s=U("images",n,t,e),a=U("size",n,t,e),i=U("alignCorners",n,t,e),c=U("halfPixelCenters",n,t,e);return[r.image.resizeBilinear(s,[a[0],a[1]],i,c)]}case"ResizeNearestNeighbor":{const s=U("images",n,t,e),a=U("size",n,t,e),i=U("alignCorners",n,t,e),c=U("halfPixelCenters",n,t,e);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,c)]}case"CropAndResize":{const s=U("image",n,t,e),a=U("boxes",n,t,e),i=U("boxInd",n,t,e),c=U("cropSize",n,t,e),d=U("method",n,t,e),m=U("extrapolationValue",n,t,e);return[r.image.cropAndResize(s,a,i,c,d,m)]}case"ImageProjectiveTransformV3":{const s=U("images",n,t,e),a=U("transforms",n,t,e),i=U("outputShape",n,t,e),c=U("fillValue",n,t,e),d=U("interpolation",n,t,e),m=U("fillMode",n,t,e);return[r.image.transform(s,a,d.toLowerCase(),m.toLowerCase(),c,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"graph":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const s=U("default",n,t,e);return[cs(n.name,t,e)||s];case"Placeholder":return[cs(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Dl(U("x",n,t,e))];case"IdentityN":return U("x",n,t,e).map(g=>Dl(g));case"Shape":return[r.tensor1d(U("x",n,t,e).shape,"int32")];case"ShapeN":return U("x",n,t,e).map(g=>r.tensor1d(g.shape));case"Size":return[r.scalar(U("x",n,t,e).size,"int32")];case"Rank":return[r.scalar(U("x",n,t,e).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=U("x",n,t,e),c=U("data",n,t,e),d=U("message",n,t,e),m=U("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(d);for(let g=0;g<c.length;g++)console.log(Array.prototype.slice.call(c[g].dataSync()).slice(0,m));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"logical":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"Equal":return[r.equal(U("a",n,t,e),U("b",n,t,e))];case"NotEqual":return[r.notEqual(U("a",n,t,e),U("b",n,t,e))];case"Greater":return[r.greater(U("a",n,t,e),U("b",n,t,e))];case"GreaterEqual":return[r.greaterEqual(U("a",n,t,e),U("b",n,t,e))];case"Less":return[r.less(U("a",n,t,e),U("b",n,t,e))];case"LessEqual":return[r.lessEqual(U("a",n,t,e),U("b",n,t,e))];case"LogicalAnd":return[r.logicalAnd(U("a",n,t,e),U("b",n,t,e))];case"LogicalNot":return[r.logicalNot(U("a",n,t,e))];case"LogicalOr":return[r.logicalOr(U("a",n,t,e),U("b",n,t,e))];case"Select":case"SelectV2":return[r.where(U("condition",n,t,e),U("a",n,t,e),U("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"matrices":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(U("a",n,t,e),U("b",n,t,e),U("transposeA",n,t,e),U("transposeB",n,t,e))];case"Einsum":return[r.einsum(U("equation",n,t,e),...U("tensors",n,t,e))];case"Transpose":return[r.transpose(U("x",n,t,e),U("perm",n,t,e))];case"_FusedMatMul":const[s,a]=U("fusedOps",n,t,e),i="biasadd"===s,c="prelu"===a,d=U("numArgs",n,t,e),m=U("leakyreluAlpha",n,t,e);if(i){if(c&&2!==d)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&1!==d)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[g,y]=U("args",n,t,e);return[r.fused.matMul({a:U("a",n,t,e),b:U("b",n,t,e),transposeA:U("transposeA",n,t,e),transposeB:U("transposeB",n,t,e),bias:g,activation:a,preluActivationWeights:y,leakyreluAlpha:m})];case"MatrixBandPart":return[r.linalg.bandPart(U("a",n,t,e),U("numLower",n,t,e),U("numUpper",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"normalization":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(U("x",n,t,e),U("axis",n,t,e),U("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(U("x",n,t,e),U("mean",n,t,e),U("variance",n,t,e),U("offset",n,t,e),U("scale",n,t,e),U("epsilon",n,t,e))];case"LRN":return[r.localResponseNormalization(U("x",n,t,e),U("radius",n,t,e),U("bias",n,t,e),U("alpha",n,t,e),U("beta",n,t,e))];case"Softmax":return[r.softmax(U("x",n,t,e))];case"LogSoftmax":return[r.logSoftmax(U("x",n,t,e))];case"SparseToDense":return[r.sparseToDense(U("sparseIndices",n,t,e),U("outputShape",n,t,e),U("sparseValues",n,t,e),U("defaultValue",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"ragged":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(U("paramsNestedSplits",n,t,e),U("paramsDenseValues",n,t,e),U("indices",n,t,e),U("outputRaggedRank",n,t,e));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(U("starts",n,t,e),U("limits",n,t,e),U("splits",n,t,e));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(U("shape",n,t,e),U("values",n,t,e),U("defaultValue",n,t,e),U("rowPartitionTensors",n,t,e),U("rowPartitionTypes",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"reduction":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"Max":{const c=U("axis",n,t,e),d=U("keepDims",n,t,e);return[r.max(U("x",n,t,e),c,d)]}case"Mean":{const c=U("axis",n,t,e),d=U("keepDims",n,t,e);return[r.mean(U("x",n,t,e),c,d)]}case"Min":{const c=U("axis",n,t,e),d=U("keepDims",n,t,e);return[r.min(U("x",n,t,e),c,d)]}case"Sum":{const c=U("axis",n,t,e),d=U("keepDims",n,t,e);return[r.sum(U("x",n,t,e),c,d)]}case"All":{const c=U("axis",n,t,e),d=U("keepDims",n,t,e);return[r.all(U("x",n,t,e),c,d)]}case"Any":{const c=U("axis",n,t,e),d=U("keepDims",n,t,e);return[r.any(U("x",n,t,e),c,d)]}case"ArgMax":{const c=U("axis",n,t,e);return[r.argMax(U("x",n,t,e),c)]}case"ArgMin":{const c=U("axis",n,t,e);return[r.argMin(U("x",n,t,e),c)]}case"Prod":{const c=U("axis",n,t,e),d=U("keepDims",n,t,e);return[r.prod(U("x",n,t,e),c,d)]}case"Cumprod":{const c=U("axis",n,t,e),d=U("exclusive",n,t,e),m=U("reverse",n,t,e);return[r.cumprod(U("x",n,t,e),c,d,m)]}case"Cumsum":{const c=U("axis",n,t,e),d=U("exclusive",n,t,e),m=U("reverse",n,t,e);return[r.cumsum(U("x",n,t,e),c,d,m)]}case"Bincount":const s=U("x",n,t,e),a=U("weights",n,t,e),i=U("size",n,t,e);return[r.bincount(s,a,i)];case"DenseBincount":{const c=U("x",n,t,e),d=U("weights",n,t,e),m=U("size",n,t,e),g=U("binaryOutput",n,t,e);return[r.denseBincount(c,d,m,g)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"slice_join":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=U("n",n,t,e),a=U("axis",n,t,e);let i=U("tensors",n,t,e);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=U("x",n,t,e),a=U("indices",n,t,e);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=U("axis",n,t,e),a=U("batchDims",n,t,e),i=U("x",n,t,e),c=U("indices",n,t,e);return[r.gather(i,r.cast(c,"int32"),s,a)]}case"Reverse":{const s=U("dims",n,t,e),a=[];for(let c=0;c<s.length;c++)s[c]&&a.push(c);const i=U("x",n,t,e);return[r.reverse(i,a)]}case"ReverseV2":{const s=U("axis",n,t,e),a=U("x",n,t,e);return[r.reverse(a,s)]}case"Slice":{const s=U("begin",n,t,e),a=U("size",n,t,e);return[r.slice(U("x",n,t,e),s,a)]}case"StridedSlice":{const s=U("begin",n,t,e),a=U("end",n,t,e),i=U("strides",n,t,e),c=U("beginMask",n,t,e),d=U("endMask",n,t,e),m=U("ellipsisMask",n,t,e),g=U("newAxisMask",n,t,e),y=U("shrinkAxisMask",n,t,e),C=U("x",n,t,e);return[r.stridedSlice(C,s,a,i,c,d,m,g,y)]}case"Pack":return qe(()=>{const s=U("axis",n,t,e),a=U("tensors",n,t,e),i=a[0].shape,c=r.squeeze(a[0]).shape,d=a.map(m=>{const g=_t(m.shape,i);if(!g&&!_t(r.squeeze(m).shape,c))throw new Error("the input tensors shape does not match");return g?m:r.reshape(m,i)});return[r.stack(d,s)]});case"Unpack":{const s=U("axis",n,t,e),a=U("tensor",n,t,e);return r.unstack(a,s)}case"Tile":{const s=U("reps",n,t,e);return[r.tile(U("x",n,t,e),s)]}case"Split":case"SplitV":{const s=U("axis",n,t,e),a=U("numOrSizeSplits",n,t,e),i=U("x",n,t,e);return r.split(i,a,s)}case"ScatterNd":{const s=U("indices",n,t,e),a=U("values",n,t,e),i=U("shape",n,t,e);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=U("x",n,t,e),a=U("indices",n,t,e);return[r.gatherND(s,a)]}case"SparseToDense":{const s=U("sparseIndices",n,t,e),a=U("outputShape",n,t,e),i=U("sparseValues",n,t,e),c=U("defaultValue",n,t,e);return[r.sparseToDense(s,i,a,i.dtype===c.dtype?c:r.cast(c,i.dtype))]}case"TensorScatterUpdate":{const s=U("indices",n,t,e),a=U("values",n,t,e),i=U("tensor",n,t,e);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"sparse":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:c}=r.sparse.sparseFillEmptyRows(U("indices",n,t,e),U("values",n,t,e),U("denseShape",n,t,e),U("defaultValue",n,t,e));return[s,a,i,c]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(U("inputIndices",n,t,e),U("inputShape",n,t,e),U("newShape",n,t,e));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(U("data",n,t,e),U("indices",n,t,e),U("segmentIds",n,t,e))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(U("data",n,t,e),U("indices",n,t,e),U("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"spectral":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"FFT":return[r.fft(U("x",n,t,e))];case"IFFT":return[r.ifft(U("x",n,t,e))];case"RFFT":return[r.rfft(U("x",n,t,e))];case"IRFFT":return[r.irfft(U("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"string":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(U("input",n,t,e),U("pattern",n,t,e),U("rewrite",n,t,e),U("replaceGlobal",n,t,e))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(U("data",n,t,e),U("dataSplits",n,t,e),U("separator",n,t,e),U("nGramWidths",n,t,e),U("leftPad",n,t,e),U("rightPad",n,t,e),U("padWidth",n,t,e),U("preserveShortSequences",n,t,e));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(U("input",n,t,e),U("delimiter",n,t,e),U("skipEmpty",n,t,e));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(U("input",n,t,e),U("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"transformation":return s(()=>((n,t,e,r=xr)=>{switch(n.op){case"Cast":return[r.cast(U("x",n,t,e),U("dtype",n,t,e))];case"ExpandDims":{const s=U("axis",n,t,e);return[r.expandDims(U("x",n,t,e),s)]}case"Squeeze":{const s=U("axis",n,t,e);return[r.squeeze(U("x",n,t,e),s)]}case"Reshape":return[r.reshape(U("x",n,t,e),U("shape",n,t,e))];case"MirrorPad":return[r.mirrorPad(U("x",n,t,e),U("padding",n,t,e),U("mode",n,t,e))];case"PadV2":case"Pad":return[r.pad(U("x",n,t,e),U("padding",n,t,e),U("constantValue",n,t,e))];case"SpaceToBatchND":{const s=U("blockShape",n,t,e),a=U("paddings",n,t,e);return[r.spaceToBatchND(U("x",n,t,e),s,a)]}case"BatchToSpaceND":{const s=U("blockShape",n,t,e),a=U("crops",n,t,e);return[r.batchToSpaceND(U("x",n,t,e),s,a)]}case"DepthToSpace":{const s=U("blockSize",n,t,e),a=U("dataFormat",n,t,e).toUpperCase();return[r.depthToSpace(U("x",n,t,e),s,a)]}case"BroadcastTo":return[r.broadcastTo(U("x",n,t,e),U("shape",n,t,e))];case"BroadcastArgs":return[r.broadcastArgs(U("s0",n,t,e),U("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,c,d));case"hash_table":return KP(i,c,d,r);case"custom":const m=_b(i.op);if(m&&m.customExecutor)return m.customExecutor(new DP(i,c,d));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return Ln(a)?a.then(i=>[].concat(i)):[].concat(a)}class WO{constructor(t={},e={},r={},s={},a){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const r=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(r))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function GO(n,t,e,r){const s=new Set,a=[];let i=null,c=null;const d=new Set,m=new Set(Object.keys(n).map(C=>si(C)[0]));r=r||[];const g=new Set(r.map(C=>si(C.name)[0])),y=[...t];for(;y.length>0;){const C=y.pop();if((pd(C)||hz(C)||dz(C))&&null==i&&(i=C,c=i.children.map(T=>T.name).filter(T=>s.has(T))),s.add(C.name),null==e[C.name]&&!m.has(C.name)&&!g.has(C.name)){if(0===C.inputs.length){a.push(C.name);continue}C.inputs.forEach(T=>{d.has(T.name)||(d.add(T.name),y.push(T))})}}return{inputs:n,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:c}}class lI extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}}const lz=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),cz=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),fz=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function pd(n){return lz.has(n.op)}function hz(n){return cz.has(n.op)}function dz(n){return fz.has(n.op)}class cI{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(r=>t[r].map(s=>s.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new cI(t.functions[r],this)})}getCompilationKey(t,e){const r=t.map(a=>a.name).sort(),s=e.map(a=>a.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(t,e){const r=GO(t,e,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:a,syncInputs:i}=r;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(s.length>0){const m=e.map(y=>y.name),g=Object.keys(t);throw new Error(`Cannot compute the outputs [${m}] from the provided inputs [${g}]. Missing the following inputs: [${s}]`)}const c=function az(n,t){const{usedNodes:e,inputs:r}=t,i=M=>e.has("string"==typeof M?M:M.name);function c(M){return[...new Map(M.map(R=>[R.name,R])).values()]}const d=c([...Object.keys(r).map(M=>si(M)[0]).map(M=>n.nodes[M]),...n.weights,...n.initNodes||[]]).filter(i),m=c([...d,...Object.values(n.nodes)]).filter(i),g=new Map(m.map(M=>[M.name,M])),y={};for(const M of m){y[M.name]=y[M.name]||0;for(const R of M.children)i(R)||(y[R.name]=Number.POSITIVE_INFINITY),y[R.name]=(y[R.name]||0)+1}const C=Object.entries(y).filter(([,M])=>0===M).map(([M])=>M),T=[...C];for(;C.length>0;){const M=C.pop(),R=g.get(M);for(const $ of R.children.filter(i))0==--y[$.name]&&(T.push($.name),C.push($.name))}const D=function iz(n,t){const e=new Map(n.map(i=>[i.name,i])),r=t.map(i=>i.name),s=new Set(r);for(;r.length>0;){const i=r.pop(),c=e.get(i);for(const d of c.children)!e.has(d.name)||s.has(d.name)||(s.add(d.name),r.push(d.name))}return n.filter(i=>s.has(i.name))}(T.map(M=>g.get(M)),d);return function oz(n,t){const e=new Map(n.map((c,d)=>[c.name,d])),r=new Set(t.map(c=>c.name)),s=c=>r.has("string"==typeof c?c:c.name),a=new Set(n.map(c=>c.name)),i=c=>a.has("string"==typeof c?c:c.name);for(const c of n){for(const d of c.children.filter(i)){if(!e.has(d.name))throw new lI(`Child ${d.name} of node ${c.name} is unreachable.`);if(e.get(c.name)>e.get(d.name))throw new lI(`Node ${c.name} is scheduled to run after its child ${d.name}.`)}if(!s(c))for(const d of c.inputs){if(!e.has(d.name))throw new lI(`Input ${d.name} of node ${c.name} is unreachable.`);if(e.get(d.name)>e.get(c.name))throw new lI(`Node ${c.name} is scheduled to run before its input ${d.name}.`)}}}(D,d),D}(this.graph,r),d=function uz(n){const t=new Map(n.map((c,d)=>[c.name,d])),e=Number.MAX_SAFE_INTEGER,r=n.map((c,d)=>pd(c)?e:d),s=c=>{const d=r[t.get(c.name)];return null==d?-1:d},a=n.map((c,d)=>c.children.map(s).reduce((m,g)=>Math.max(m,g),r[d])),i=new Map;for(let c=0;c<n.length;++c){const d=a[c];if(d===e)continue;const m=n[c],g=n[d];i.has(g.name)||i.set(g.name,[]),i.get(g.name).push(m)}return i}(c);return{orderedNodes:c,nodeLiveUntilMap:d}}cloneAndKeepTensor(t){if(null==t)return null;const e=t.clone();return Qr(e),e}cloneTensorList(t){return t?t.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,r])=>[e,this.cloneTensorList(r)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const s=r.map(C=>this.graph.nodes[si(C)[0]]),a=e.map(C=>si(C)[0]),i=new Set(a);let c=a.map(C=>this.graph.nodes[C]);0===c.length&&(c=this._outputs);const d=this.getCompilationKey(s,c);let m=this.compiledMap.get(d);null==m&&(m=this.compile(t,c),this.compiledMap.set(d,m));try{this.keepIntermediateTensors=He().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(C){this.keepIntermediateTensors=!1,console.warn(C.message)}const g={},y={};return qe(()=>{const C=new WO(this.weightMap,g,y,this.functionExecutorMap,this.parseNodeNameCache),T=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(R=>{const[$,V]=si(R,C),G=[];G[V]=t[R],T[$]=G,this.keepIntermediateTensors&&(this.clonedTensorsMap[$]=this.cloneTensorList(G))});const k=this.getFrozenTensorIds(T),{orderedNodes:D,nodeLiveUntilMap:M}=m;for(const R of D){if(T[R.name])continue;const $=UO(R,T,C,this._resourceManager);if(Ln($))throw new Error(`The execution of the op '${R.op}' returned a promise. Please use model.executeAsync() instead.`);T[R.name]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[R.name]=this.cloneTensorList($)),this.checkTensorForDisposalWithNodeLiveUntilInfo(R,T,C,k,i,M.get(R.name))}return null==this.parent&&C.dispose(k),e.map(R=>cs(R,T,C))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(s=>s.id)));return new Set(e)}checkTensorForDisposal(t,e,r,s,a,i,c){if(!pd(e)&&!i.has(t)){for(const d of r[t])null!=d&&(c[d.id]=(c[d.id]||0)+e.children.length);for(const d of e.inputs){if(pd(d))continue;const m=OO(d.name,r,s);if(null!=m)for(const g of m){if(!g||g.kept||a.has(g.id))continue;const y=c[g.id];1===y?(g.dispose(),delete c[g.id]):null!=y&&c[g.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,r,s,a,i){function c(d){return pd(d)||a.has(d.name)}if(!pd(t)&&null!=i)for(const d of i){if(c(d))continue;const m=OO(d.name,e,r);for(const g of m)!g||g.kept||s.has(g.id)||g.dispose()}}executeAsync(t,e){var r=this;return(0,Fe.Z)(function*(){return r._executeAsync(t,e)})()}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach(t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(t,e,r=!1,s={},a={}){var i=this;return(0,Fe.Z)(function*(){i.disposeIntermediateTensors(),r||(t=i.mapInputs(t),i.checkInputs(t),i.checkInputShapeAndType(t),e=i.mapOutputs(e),i.checkOutputs(e));try{i.keepIntermediateTensors=He().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(T){i.keepIntermediateTensors=!1,console.warn(T.message)}const c=new WO(i.weightMap,s,a,i.functionExecutorMap,i.parseNodeNameCache);i.keepIntermediateTensors&&(i.clonedTensorsMap=i.cloneTensorMap(i.weightMap));const d=yield i.executeWithControlFlow(t,c,e,r),m=e.map(T=>cs(T,d,c)),g=m.map(T=>T.id),y=Object.keys(t).map(T=>t[T].id),C=new Set([...g,...y,...i.weightIds]);return Object.values(d).forEach(T=>{T.forEach(k=>{k&&!k.isDisposed&&!C.has(k.id)&&k.dispose()})}),null==i.parent&&c.dispose(C),m})()}executeFunctionAsync(t,e,r){var s=this;return(0,Fe.Z)(function*(){const a=t.reduce((i,c,d)=>(i[s.inputs[d].name]=c,i),{});return s._executeAsync(a,s.outputNodes,!0,e,r)})()}executeWithControlFlow(t,e,r,s){var a=this;return(0,Fe.Z)(function*(){const i=Object.keys(t),c=i.map(K=>a.graph.nodes[si(K)[0]]),d=r.map(K=>si(K)[0]),m=new Set(d);let g=d.map(K=>a.graph.nodes[K]);0===g.length&&(g=a._outputs);const{usedNodes:y,missingInputs:C,dynamicNode:T,syncInputs:k}=GO(t,g,a.weightMap,a._initNodes),D=[...c,...a.graph.weights,...a._initNodes||[]].map(K=>({node:K,contexts:e.currentContext})),M=Object.assign({},a.weightMap);Object.keys(t).forEach(K=>{const[ae,le]=si(K),he=[];he[le]=t[K],M[ae]=he});const R={},$=a.getFrozenTensorIds(M),V={};for(;D.length>0;){const K=a.processStack(c,D,e,M,V,$,m,R,y);yield Promise.all(K)}null==T&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const G=g.filter(K=>!pd(K)&&!cs(K.name,M,e)).map(K=>K.name);if(G.length>0){let K="";throw null!=T&&(K=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${k}]`),new Error(`Cannot compute the outputs [${G}] from the provided inputs [${i}]. Consider providing the following inputs: [${C}]. ${K}`)}return M})()}processStack(t,e,r,s,a,i,c,d,m){const g=[];for(;e.length>0;){const y=e.pop();r.currentContext=y.contexts;let C="";if("Enter"===y.node.op&&U("isConstant",y.node,s,r)&&([C]=Ml(y.node.name,r)),null==s[y.node.name]){const T=UO(y.node,s,r,this._resourceManager);C||([C]=Ml(y.node.name,r));const k=r.currentContext;Ln(T)?g.push(T.then(D=>(s[C]=D,this.keepIntermediateTensors&&(this.clonedTensorsMap[C]=this.cloneTensorList(D)),r.currentContext=k,this.checkTensorForDisposal(C,y.node,s,r,i,c,d),this.processChildNodes(y.node,e,r,s,a,m),D))):(s[C]=T,this.keepIntermediateTensors&&(this.clonedTensorsMap[C]=this.cloneTensorList(T)),this.checkTensorForDisposal(C,y.node,s,r,i,c,d),this.processChildNodes(y.node,e,r,s,a,m))}else this.processChildNodes(y.node,e,r,s,a,m)}return g}processChildNodes(t,e,r,s,a,i){t.children.forEach(c=>{const[d]=Ml(c.name,r);a[d]||!i.has(c.name)||("Merge"===c.op?c.inputNames.some(m=>!!cs(m,s,r))&&(a[d]=!0,e.push({contexts:r.currentContext,node:c})):c.inputNames.every(m=>!!cs(m,s,r))&&(a[d]=!0,e.push({contexts:r.currentContext,node:c})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const r=t[e],[s]=si(e),a=this.graph.nodes[s];if(a.attrParams.shape&&a.attrParams.shape.value){const i=a.attrParams.shape.value;q(i.length===r.shape.length&&r.shape.every((d,m)=>-1===i[m]||i[m]===d),()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&q(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){var e,r;const s={};for(const a in t){const i=null===(r=null===(e=this._signature)||void 0===e?void 0:e.inputs)||void 0===r?void 0:r[a];null!=i?s[i.name]=t[a]:s[a]=t[a]}return s}checkInputs(t){const e=Object.keys(t).filter(r=>{const[s]=si(r);return null==this.graph.nodes[s]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var r,s;const a=null===(s=null===(r=this._signature)||void 0===r?void 0:r.outputs)||void 0===s?void 0:s[e];return null!=a?a.name:e},{})}checkOutputs(t){t.forEach(e=>{const[r]=si(e);if(!this.graph.nodes[r])throw new Error(`The output '${e}' is not found in the graph`)})}}class pz{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class eR{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},r=Ne){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=r,null==e&&(this.loadOptions={}),this.resourceManager=new pz}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return Ln(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const a=this.artifacts.userDefinedMetadata;null!=a.signature&&(r=a.signature),null!=a.structuredOutputKeys&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=r,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new cI(FO.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const a=FO.Instance.transformGraph(t.modelInitializer);this.initializer=new cI(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}save(t,e){var r=this;return(0,Fe.Z)(function*(){if("string"==typeof t){const s=r.io.getSaveHandlers(t);if(0===s.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(r.artifacts)})()}addStructuredOutputNames(t){if(this.structuredOutputKeys){const r={};return(t instanceof jn?[t]:t).forEach((s,a)=>r[this.structuredOutputKeys[a]]=s),r}return t}predict(t,e){const r=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(r)}predictAsync(t,e){var r=this;return(0,Fe.Z)(function*(){const s=yield r.executeAsync(t,r.outputNodes);return r.addStructuredOutputNames(s)})()}normalizeInputs(t){var e;if(!(t instanceof jn||Array.isArray(t))){const a=null===(e=this.signature)||void 0===e?void 0:e.inputs;if(null!=a)for(const i in a){const c=a[i];null!=c.resourceId&&(t[i]=this.resourceIdToCapturedInput[c.resourceId])}return t}t=Array.isArray(t)?t:[t];const r=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${t.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((a,i)=>{var c,d,m;const g=null===(m=null===(d=null===(c=this.signature)||void 0===c?void 0:c.inputs)||void 0===d?void 0:d[i])||void 0===m?void 0:m.resourceId;return a[i]=null!=g?this.resourceIdToCapturedInput[g]:t[s++],a},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return null==this.initializer?[]:this.initializer.execute({},null==this.initializerSignature?[]:Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){var t=this;return(0,Fe.Z)(function*(){return null==t.initializer?[]:t.initializer.executeAsync({},null==t.initializerSignature?[]:Object.keys(t.initializerSignature.outputs))})()}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,r=Object.keys(e);for(let s=0;s<r.length;s++)this.resourceIdToCapturedInput[e[r[s]].resourceId]=t[s]}}execute(t,e){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const r=this.executor.execute(t,e);return r.length>1?r:r[0]}executeAsync(t,e){var r=this;return(0,Fe.Z)(function*(){null==r.resourceIdToCapturedInput&&r.setResourceIdToCapturedInput(yield r.executeInitializerGraphAsync()),t=r.normalizeInputs(t),e=r.normalizeOutputs(e);const s=yield r.executor.executeAsync(t,e);return s.length>1?s:s[0]})()}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,r)=>(e[r]=[t[r]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Tn(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}function vz(n){return tR.apply(this,arguments)}function tR(){return(tR=(0,Fe.Z)(function*(n,t={},e=Ne){if(null==n)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof n&&(n=bz(n));const r=new eR(n,t,e);return yield r.load(),r})).apply(this,arguments)}function yz(n){if(null==n)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(n instanceof Array){const[r,s]=n;if(!r)throw new Error("modelJSON must be the first element of the array");if(!(s&&s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");t=vh(kp(r,Mp(r.weightsManifest),s))}else if("load"in n)t=n;else{if(!("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n))throw new Error("Unknown model format");t=vh(n)}const e=new eR(t);return e.load(),e}function bz(n){return n.endsWith("/")||(n+="/"),`${n}model.json?tfjs-format=file`}const qO="4.4.0";function fI(n,t,e=new Map,r=new Set){if(null==n)return null;if("function"==typeof Blob&&n instanceof Blob)return n.slice();if(r.has(n))throw new Error("Circular references are not supported.");if(e.has(n))return e.get(n);const s=t(n);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Eg(n)){const a=Array.isArray(n)?[]:{};r.add(n);for(const i in n){const d=fI(n[i],t,e,r);a[i]=d}return r.delete(n),n.__proto__&&(a.__proto__=n.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${n}`)}return e.set(n,s.value),s.value}function wz(n,t=KO){return HO(n,t)}function HO(n,t,e=new Set){const r=n[0];if(e.has(r))throw new Error("Circular references are not supported.");const s=t(n);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Eg(r)){const a=Array.isArray(r)?[]:{};e.add(r);for(const i in r){const d=HO(n.map(m=>m[i]),t,e);a[i]=d}return e.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function KO(n){return null===n?null:Eg(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}function ZO(n,t){return nR.apply(this,arguments)}function nR(){return(nR=(0,Fe.Z)(function*(n,t){const e=new Map;fI(n,t,e);for(const s of Array.from(e.keys())){const a=e.get(s);if(Ln(a)){const i=yield a;e.set(s,i)}}return fI(n,t,e)})).apply(this,arguments)}function Eg(n){let t=!1;if(He().get("IS_BROWSER"))t=n instanceof TextDecoder;else{const{StringDecoder:e}=ft(8963);t=n instanceof e}return null!=n&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||"object"==typeof n&&!(n instanceof jn)&&!(n instanceof Promise)&&!t)}function Iz(n){return n instanceof jn?{value:n.clone(),recurse:!1}:Eg(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}class jO{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),r=this.get(e);return this.set(e,this.pop()),r}}let _z=(()=>{class n extends jO{constructor(){super(n.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,r=new Array(e),s=this.length();for(let a=0;a<s;a++)r[a]=this.get(this.wrap(this.begin+a));this.data=r,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=s}}return n.INITIAL_CAPACITY=32,n})();function XO(n){return new Az(n)}function Eb(n){return new Ez(n)}class Vs{toArray(){var t=this;return(0,Fe.Z)(function*(){const e=[];let r=yield t.next();for(;!r.done;)e.push(r.value),r=yield t.next();return e})()}toArrayForTest(){var t=this;return(0,Fe.Z)(function*(){const e=t.prefetch(100),r=[];let s=yield e.next();for(;!s.done;)r.push(s.value),s=yield e.next();return r})()}resolveFully(){var t=this;return(0,Fe.Z)(function*(){let e=yield t.next();for(;!e.done;)e=yield t.next()})()}resolveWhile(t){var e=this;return(0,Fe.Z)(function*(){let r=yield e.next(),s=t(r.value);for(;!r.done&&s;)r=yield e.next(),s=t(r.value)})()}handleErrors(t){return new Fz(this,t)}filter(t){return new $z(this,t)}map(t){return new Oz(this,t)}mapAsync(t){return new JO(this,t)}serialMapAsync(t){return new JO(this,t).serial()}flatmap(t){return new Lz(this,t)}forEachAsync(t){var e=this;return(0,Fe.Z)(function*(){return e.map(t).resolveFully()})()}serialForEach(t){var e=this;return(0,Fe.Z)(function*(){return e.serialMapAsync(t).resolveWhile(r=>!0===r)})()}rowMajorBatch(t,e=!0){return new Rz(this,t,e)}columnMajorBatch(t,e=!0,r=KO){return this.rowMajorBatch(t,e).map(a=>wz(a,r))}concatenate(t,e){return new QO(XO([this,t]),e)}take(t){return t<0||null==t?this:new Dz(this,t)}skip(t){return t<0||null==t?this:new Mz(this,t)}prefetch(t){return new eF(this,t)}shuffle(t,e){return new Pz(this,t,e)}serial(){return new kz(this)}}class Az extends Vs{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){var t=this;return(0,Fe.Z)(function*(){if(t.trav>=t.items.length)return{value:null,done:!0};const e=t.items[t.trav];return t.trav++,{value:(n=e,function xz(n,t){return fI(n,t)}(n,Iz)),done:!1};var n})()}}class Ez extends Vs{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}next(){var t=this;return(0,Fe.Z)(function*(){try{return t.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}})()}}class kz extends Vs{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.lastRead.then(()=>t.serialNext()),t.lastRead})()}serialNext(){var t=this;return(0,Fe.Z)(function*(){return t.upstream.next()})()}}class Mz extends Vs{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.lastRead.then(()=>t.serialNext()),t.lastRead})()}serialNext(){var t=this;return(0,Fe.Z)(function*(){for(;t.count++<t.maxCount;){const e=yield t.upstream.next();if(e.done)return e;Tn(e.value)}return t.upstream.next()})()}}class Dz extends Vs{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){var t=this;return(0,Fe.Z)(function*(){return t.count++>=t.maxCount?{value:null,done:!0}:t.upstream.next()})()}}class Rz extends Vs{constructor(t,e,r=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.lastRead.then(()=>t.serialNext()),t.lastRead})()}serialNext(){var t=this;return(0,Fe.Z)(function*(){const e=[];for(;e.length<t.batchSize;){const r=yield t.upstream.next();if(r.done)return t.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(r.value)}return{value:e,done:!1}})()}}class $z extends Vs{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.lastRead.then(()=>t.serialNext()),t.lastRead})()}serialNext(){var t=this;return(0,Fe.Z)(function*(){for(;;){const e=yield t.upstream.next();if(e.done||t.predicate(e.value))return e;Tn(e.value)}})()}}class Oz extends Vs{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}next(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.upstream.next();if(e.done)return{value:null,done:!0};const r=ho(e.value),s=t.transform(e.value),a=ho(s);for(const i of r)_p(i,a)||i.dispose();return{value:s,done:!1}})()}}class Fz extends Vs{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.lastRead.then(()=>t.serialNext()),t.lastRead})()}serialNext(){var t=this;return(0,Fe.Z)(function*(){for(;;)try{return yield t.upstream.next()}catch(e){if(!t.handler(e))return{value:null,done:!0}}})()}}class JO extends Vs{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.upstream.next();if(e.done)return{value:null,done:!0};const r=ho(e.value),s=yield t.transform(e.value),a=ho(s);for(const i of r)_p(i,a)||i.dispose();return{value:s,done:!1}})()}}class rR extends Vs{constructor(){super(),this.outputQueue=new _z,this.lastRead=Promise.resolve({value:null,done:!1})}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.lastRead.then(()=>t.serialNext()),t.lastRead})()}serialNext(){var t=this;return(0,Fe.Z)(function*(){for(;0===t.outputQueue.length();)if(!(yield t.pump()))return{value:null,done:!0};return{value:t.outputQueue.shift(),done:!1}})()}}class Lz extends rR{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.upstream.next();if(e.done)return!1;const r=ho(e.value),s=t.transform(e.value),a=ho(s);t.outputQueue.pushAll(s);for(const i of r)_p(i,a)||i.dispose();return!0})()}}class QO extends Vs{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.readFromChain(t.lastRead),t.lastRead})()}readFromChain(t){var e=this;return(0,Fe.Z)(function*(){if(yield t,null==e.iterator){const s=yield e.moreIterators.next();if(s.done)return{value:null,done:!0};e.iterator=s.value,null!=e.baseErrorHandler&&(e.iterator=e.iterator.handleErrors(e.baseErrorHandler))}const r=yield e.iterator.next();return r.done?(e.iterator=null,e.readFromChain(t)):r})()}}var Rl=(()=>{return(n=Rl||(Rl={}))[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",Rl;var n})();class Bz extends Vs{constructor(t,e=Rl.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}nextState(t){var e=this;return(0,Fe.Z)(function*(){yield t;let r=0,s=0;const i=yield ZO(e.iterators,function a(c){return c instanceof Vs?{value:c.next().then(m=>(r++,m.done&&s++,m.value)),recurse:!1}:{value:null,recurse:!0}});if(r===s)return{value:null,done:!0};if(s>0)switch(e.mismatchMode){case Rl.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${e.count}.`);case Rl.SHORTEST:return{value:null,done:!0}}return e.count++,{value:i,done:!1}})()}next(){var t=this;return(0,Fe.Z)(function*(){return t.currentPromise=t.nextState(t.currentPromise),t.currentPromise})()}}class eF extends Vs{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new jO(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Pz extends eF{constructor(t,e,r){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=zc.alea(r||Cs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){var t=this;return(0,Fe.Z)(function*(){return t.lastRead=t.lastRead.then(()=>t.serialNext()),t.lastRead})()}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){var t=this;return(0,Fe.Z)(function*(){for(t.upstreamExhausted||t.refill();!t.buffer.isEmpty();){const e=t.chooseIndex(),r=yield t.buffer.shuffleExcise(e);if(!r.done)return t.refill(),r;t.upstreamExhausted=!0}return{value:null,done:!0}})()}}let kb=(()=>{class n{constructor(){this.size=null}batch(e,r=!0){const s=this;let a;return q(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),a=this.size===1/0||null==this.size?this.size:r?Math.ceil(this.size/e):Math.floor(this.size/e),ai((0,Fe.Z)(function*(){return(yield s.iterator()).columnMajorBatch(e,r,Uz)}),a)}concatenate(e){const r=this;let s;return s=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ai((0,Fe.Z)(function*(){return(yield r.iterator()).concatenate(yield e.iterator())}),s)}filter(e){const r=this;let s;return s=this.size===1/0?1/0:null,ai((0,Fe.Z)(function*(){return(yield r.iterator()).filter(a=>qe(()=>e(a)))}),s)}forEachAsync(e){var r=this;return(0,Fe.Z)(function*(){return(yield r.iterator()).forEachAsync(e)})()}map(e){const r=this;return ai((0,Fe.Z)(function*(){return(yield r.iterator()).map(s=>qe(()=>e(s)))}),this.size)}mapAsync(e){const r=this;return ai((0,Fe.Z)(function*(){return(yield r.iterator()).mapAsync(e)}),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const r=this;return ai((0,Fe.Z)(function*(){return(yield r.iterator()).prefetch(e)}),this.size)}repeat(e){const r=this;let s;return s=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ai((0,Fe.Z)(function*(){return function YO(n,t){return new QO(n,t)}(Eb((0,Fe.Z)(function*(){return{value:yield r.iterator(),done:!1}})).take(e))}),s)}skip(e){const r=this;let s;return s=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ai((0,Fe.Z)(function*(){return(yield r.iterator()).skip(e)}),s)}shuffle(e,r,s=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,i=zc.alea(r||Cs().toString());return ai((0,Fe.Z)(function*(){let c=i.int32();return s&&(c+=i.int32()),(yield a.iterator()).shuffle(e,c.toString())}),this.size)}take(e){const r=this;let s;return s=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ai((0,Fe.Z)(function*(){return(yield r.iterator()).take(e)}),s)}toArray(){var e=this;return(0,Fe.Z)(function*(){if(e.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield e.iterator()).toArray()})()}toArrayForTest(){var e=this;return(0,Fe.Z)(function*(){if(e.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield e.iterator()).toArrayForTest()})()}}return n.MAX_BUFFER_SIZE=1e4,n})();function ai(n,t=null){return new class extends kb{constructor(){super(...arguments),this.size=t}iterator(){return(0,Fe.Z)(function*(){return n()})()}}}function zz(n){return ai((0,Fe.Z)(function*(){return XO(n)}),n.length)}function Vz(n){if(!Eg(n))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(n))for(let e=0;e<n.length;e++)t=null==t?n[e].size:Math.min(t,n[e].size);else if(n instanceof Object)for(const e in n)t=null==t?n[e].size:Math.min(t,n[e].size);return ai((0,Fe.Z)(function*(){return function Tz(n,t=Rl.FAIL){return new Bz(n,t)}(yield ZO(n,r=>{if(r instanceof kb)return{value:r.iterator(),recurse:!1};if(Eg(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),Rl.SHORTEST)}),t)}function Uz(n){return null===n?null:function Nz(n){return null==n||function Sz(n){return null===n||"object"!=typeof n&&"function"!=typeof n}(n)||Array.isArray(n)||"object"==typeof n&&n instanceof jn||hs(n)}(n[0])?{value:Wz(n),recurse:!1}:{value:null,recurse:!0}}function Wz(n){if(0===n.length)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof jn?xa(n):aa(n)}class tF extends kb{constructor(t){super(),this.input=t}iterator(){var t=this;return(0,Fe.Z)(function*(){return(yield t.input.iterator()).decodeUTF8().split("\n").map(a=>(a.endsWith("\r")&&(a=a.slice(0,-1)),a))})()}}const Mb=Symbol("out"),nF=Symbol("field"),dI=Symbol("quote"),sR=Symbol("quoteafterquote"),rF=Symbol("quoteinquote");class sF extends kb{columnNames(){var t=this;return(0,Fe.Z)(function*(){return t.columnNamesValidated||(yield t.setColumnNames()),t.configuredColumnsOnly?Object.keys(t.columnConfigs):t.fullColumnNames})()}setColumnNames(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.maybeReadHeaderLine();if(!t.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");t.fullColumnNames&&e&&q(e.length===t.fullColumnNames.length,()=>"The length of provided columnNames ("+t.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),t.fullColumnNames||(t.fullColumnNames=e);const r=t.fullColumnNames.reduce((a,i)=>(a[i]=a[i]+1||1,a),{}),s=Object.keys(r).filter(a=>r[a]>1);if(q(0===s.length,()=>"Duplicate column names found: "+s.toString()),t.columnConfigs)for(const a of Object.keys(t.columnConfigs))if(-1===t.fullColumnNames.indexOf(a))throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+t.fullColumnNames.toString()+").");t.columnNamesValidated=!0})()}maybeReadHeaderLine(){var t=this;return(0,Fe.Z)(function*(){if(t.hasHeader){const r=yield(yield t.base.iterator()).next();if(r.done)throw new Error("No data was found for CSV parsing.");return t.parseRow(r.value,!1)}return null})()}constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new tF(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(q(null==e.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}iterator(){var t=this;return(0,Fe.Z)(function*(){t.columnNamesValidated||(yield t.setColumnNames());let e=yield t.base.iterator();return t.hasHeader&&(e=e.skip(1)),e.map(r=>t.makeDataElement(r))})()}makeDataElement(t){const e=this.parseRow(t),r={},s={};for(let a=0;a<this.fullColumnNames.length;a++){const i=this.fullColumnNames[a],c=this.columnConfigs?this.columnConfigs[i]:null;if(!this.configuredColumnsOnly||c){const d=e[a];let m=null;if(""===d)if(c&&void 0!==c.default)m=c.default;else{if(c&&(c.required||c.isLabel))throw new Error(`Required column ${i} is empty in this line: ${t}`);m=void 0}else{const g=Number(d);if(isNaN(g))m=c&&"bool"===c.dtype?this.getBoolean(d):d;else if(c&&c.dtype)switch(c.dtype){case"float32":default:m=g;break;case"int32":m=Math.floor(g);break;case"bool":m=this.getBoolean(d)}else m=g}c&&c.isLabel?s[i]=m:r[i]=m}}return 0===Object.keys(s).length?r:{xs:r,ys:s}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const r=[];let s=0;const a=t.length;let i=Mb;for(let c=0;c<a;c++)switch(i){case Mb:switch(t.charAt(c)){case'"':s=c+1,i=dI;break;case this.delimiter:if(s=c+1," "===this.delimiter&&this.delimWhitespace)break;r.push(""),i=Mb;break;default:i=nF,s=c}break;case nF:t.charAt(c)===this.delimiter&&(r.push(t.substring(s,c)),i=Mb,s=c+1);break;case dI:'"'===t.charAt(c)&&(i=sR);break;case sR:switch(t.charAt(c)){case this.delimiter:r.push(t.substring(s,c-1)),i=Mb,s=c+1;break;case'"':i=dI;break;default:i=rF}break;case rF:'"'===t.charAt(c)&&(i=dI)}if(r.push(i===sR?t.substring(s,a-1):t.substring(s)),e&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}}class aR extends Vs{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static create(t={}){return(0,Fe.Z)(function*(){if(!He().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const e=new aR(t);return yield e.start(),e})()}start(){var t=this;return(0,Fe.Z)(function*(){try{t.stream=yield navigator.mediaDevices.getUserMedia({audio:null==t.audioTrackConstraints||t.audioTrackConstraints,video:!1})}catch(s){throw new Error(`Error thrown while initializing video stream: ${s.message}`)}if(!t.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(t.audioContext=new e,t.sampleRateHz){if(t.audioContext.sampleRate!==t.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${t.sampleRateHz}; Actual: ${t.audioContext.sampleRate}`)}else t.sampleRateHz=t.audioContext.sampleRate;const r=t.audioContext.createMediaStreamSource(t.stream);t.analyser=t.audioContext.createAnalyser(),t.analyser.fftSize=2*t.fftSize,t.analyser.smoothingTimeConstant=t.smoothingTimeConstant,r.connect(t.analyser),t.freqData=new Float32Array(t.fftSize),t.timeData=new Float32Array(t.fftSize)})()}next(){var t=this;return(0,Fe.Z)(function*(){if(t.isClosed)return{value:null,done:!0};let e,r;const s=yield t.getAudioData();if(t.includeSpectrogram){const a=t.flattenQueue(s.freqDataQueue);e=t.getTensorFromAudioDataArray(a,[t.numFrames,t.columnTruncateLength,1])}if(t.includeWaveform){const a=t.flattenQueue(s.timeDataQueue);r=t.getTensorFromAudioDataArray(a,[t.numFrames*t.fftSize,1])}return{value:{spectrogram:e,waveform:r},done:!1}})()}capture(){var t=this;return(0,Fe.Z)(function*(){return(yield t.next()).value})()}getAudioData(){var t=this;return(0,Fe.Z)(function*(){const e=[],r=[];let s=0;return new Promise(a=>{const i=setInterval(()=>{t.includeSpectrogram&&(t.analyser.getFloatFrequencyData(t.freqData),t.freqData[0]===-1/0&&a({freqDataQueue:e,timeDataQueue:r}),e.push(t.freqData.slice(0,t.columnTruncateLength))),t.includeWaveform&&(t.analyser.getFloatTimeDomainData(t.timeData),r.push(t.timeData.slice())),++s===t.numFrames&&(clearInterval(i),a({freqDataQueue:e,timeDataQueue:r}))},t.fftSize/t.sampleRateHz*1e3)})})()}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,r=new Float32Array(t.length*e);return t.forEach((s,a)=>r.set(s,a*e)),r}getTensorFromAudioDataArray(t,e){const r=new Float32Array(ze(e));return r.set(t,r.length-t.length),aa(r,e)}}class iR extends Vs{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=rs([0],"int32"),this.webcamConfig.centerCrop){const r=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,s=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,a=(1-r)/2,i=(1-s)/2;this.cropBox=_o([i,a,s+i,a+r],[1,4])}else this.cropBox=_o([0,0,1,1],[1,4])}summary(){return"webcam"}static create(t,e={}){return(0,Fe.Z)(function*(){if(!He().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const r=new iR(t,e);return yield r.start(),r})()}start(){var t=this;return(0,Fe.Z)(function*(){t.webcamConfig.facingMode&&q("user"===t.webcamConfig.facingMode||"environment"===t.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${t.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{t.stream=yield navigator.mediaDevices.getUserMedia({video:{deviceId:t.webcamConfig.deviceId,facingMode:t.webcamConfig.facingMode?t.webcamConfig.facingMode:"user",width:t.webcamVideoElement.width,height:t.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!t.stream)throw new Error("Could not obtain video from webcam.");try{t.webcamVideoElement.srcObject=t.stream}catch(e){console.log(e),t.webcamVideoElement.src=window.URL.createObjectURL(t.stream)}return t.webcamVideoElement.play(),t.isClosed=!1,new Promise(e=>{t.webcamVideoElement.onloadedmetadata=()=>{e()}})})()}next(){var t=this;return(0,Fe.Z)(function*(){if(t.isClosed)return{value:null,done:!0};let e;try{e=Ov(t.webcamVideoElement)}catch(r){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(r)}`)}if(!t.resize)return{value:e,done:!1};try{return{value:t.cropAndResizeFrame(e),done:!1}}catch(r){throw new Error(`Error thrown cropping the video: ${r.message}`)}finally{e.dispose()}})()}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return qe(()=>{const e=Os(Lt(t,"float32"),0);let r;return r=Ya.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear"),$e(r,r.shape.slice(1))})}capture(){var t=this;return(0,Fe.Z)(function*(){return(yield t.next()).value})()}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class aF{}class iF extends Vs{split(t){return new Gz(this,t)}}class Gz extends iF{constructor(t,e){super(),this.upstream=t,this.impl=new qz(t,e)}summary(){return this.impl.summary()}next(){var t=this;return(0,Fe.Z)(function*(){return t.impl.next()})()}}class qz extends rR{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.upstream.next();if(e.done)return""!==t.carryover&&(t.outputQueue.push(t.carryover),t.carryover="",!0);const r=e.value.split(t.separator);r[0]=t.carryover+r[0];for(const s of r.slice(0,-1))t.outputQueue.push(s);return t.carryover=r[r.length-1],!0})()}}class Hz extends Vs{decodeUTF8(){return new Kz(this)}}class Kz extends iF{constructor(t){super(),this.upstream=t,this.impl=new Zz(t)}summary(){return this.impl.summary()}next(){var t=this;return(0,Fe.Z)(function*(){return t.impl.next()})()}}class Zz extends rR{constructor(t){if(super(),this.upstream=t,He().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=ft(1601);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){var t=this;return(0,Fe.Z)(function*(){const e=yield t.upstream.next();let r,s;return!e.done&&(r=e.value,s=He().get("IS_BROWSER")?t.decoder.decode(r,{stream:!0}):t.decoder.write(Buffer.from(r.buffer)),t.outputQueue.push(s),!0)})()}}class oF extends Hz{constructor(t,e={}){super(),this.file=t,this.options=e,q(t instanceof Uint8Array||!!He().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}next(){var t=this;return(0,Fe.Z)(function*(){return t.offset>=(t.file instanceof Uint8Array?t.file.byteLength:t.file.size)?{value:null,done:!0}:{value:yield new Promise((r,s)=>{const a=t.offset+t.chunkSize;if(t.file instanceof Uint8Array)r(new Uint8Array(t.file.slice(t.offset,a)));else{const i=new FileReader;i.onload=d=>{let m=i.result;if(m instanceof ArrayBuffer&&(m=new Uint8Array(m)),!(m instanceof Uint8Array))return s(new TypeError("FileReader returned unknown type."));r(m)},i.onabort=d=>s(new Error("Aborted")),i.onerror=d=>s(new Error(d.type));const c=t.file.slice(t.offset,a);i.readAsArrayBuffer(c)}t.offset=a}),done:!1}})()}}function oR(){return(oR=(0,Fe.Z)(function*(n,t={},e){let r,s;"string"==typeof n?r=n:(r=n.url,s=Xz(n));const a=yield(e||nx)(r,s);if(a.ok){const i=new Uint8Array(yield a.arrayBuffer());return new oF(i,t)}throw new Error(a.statusText)})).apply(this,arguments)}const Xz=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});function uF(n){return"string"==typeof n&&"file://"===n.slice(0,7)}class lF extends aF{constructor(t,e={}){super(),this.input=t,this.options=e}iterator(){var t=this;return(0,Fe.Z)(function*(){if(uF(t.input)&&He().get("IS_NODE")){const e=ft(7792);t.input=e.readFileSync(t.input.slice(7))}return new oF(t.input,t.options)})()}}class cF extends aF{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}iterator(){var t=this;return(0,Fe.Z)(function*(){return uF(t.url)?new lF(t.url,t.fileOptions).iterator():function jz(n){return oR.apply(this,arguments)}(t.url,t.fileOptions)})()}}function Yz(n,t={}){return new sF(new cF(n),t)}function Jz(n){const t=Eb(n);return ai((0,Fe.Z)(function*(){return t}))}function Qz(n){return ai((0,Fe.Z)(function*(){const t=yield n();return Eb(()=>t.next())}))}function e4(n,t){return uR.apply(this,arguments)}function uR(){return(uR=(0,Fe.Z)(function*(n,t){return iR.create(n,t)})).apply(this,arguments)}function t4(n){return lR.apply(this,arguments)}function lR(){return(lR=(0,Fe.Z)(function*(n){return aR.create(n)})).apply(this,arguments)}const fF="4.4.0";function en(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&q("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}const n4=qh;let hF=(()=>{class n extends Pl{nextDataId(){return n.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Bl(this,Ha())}write(e,r,s){this.firstUse&&(this.firstUse=!1,He().get("IS_NODE")&&Ra("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:s,refCount:1}),a}makeTensorInfo(e,r,s){let a;if("string"===r&&null!=s&&s.length>0&&Hs(s[0])){const i=s.map(c=>_i(c));a=this.write(i,e,r)}else a=this.write(s,e,r);return{dataId:a,shape:e,dtype:r}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,r,s,a,i){this.data.set(e,{values:r,dtype:a,refCount:i})}numDataIds(){return this.data.numDataIds()}read(e){var r=this;return(0,Fe.Z)(function*(){return r.readSync(e)})()}readSync(e){const{dtype:r,complexTensorInfos:s}=this.data.get(e);return"complex64"===r?Eo(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):df(this.data.get(e).values,r)}bufferSync(e){const r=this.readSync(e.dataId);if("string"===e.dtype)try{const s=r.map(a=>fo(a));return En(e.shape,e.dtype,s)}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return En(e.shape,e.dtype,r)}makeOutput(e,r,s){return Ha().makeTensorFromTensorInfo(this.makeTensorInfo(r,s,e),this)}disposeData(e,r=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!r&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);null!=s&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}time(e){return(0,Fe.Z)(function*(){const r=Cs();return e(),{kernelMs:Cs()-r}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){en([e],"where");const r=this.readSync(e.dataId);return n4(e.shape,r)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return n.nextDataId=0,n})();function dF(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const r4={kernelName:Wl,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;en(t,"abs");let r=new Float32Array(ze(t.shape));return r=dF(e.data.get(t.dataId).values),e.makeOutput(r,t.shape,t.dtype)}};function ws(n){return(t,e,r,s,a)=>{const i=An(t,e),c=i.length,d=tn(i),g=jr(a,ze(i)),y=t.length,C=e.length,T=tn(t),k=tn(e),D=tl(t,i),M=tl(e,i);if(D.length+M.length===0)for(let R=0;R<g.length;++R)g[R]=n(r[R%r.length],s[R%s.length]);else for(let R=0;R<g.length;++R){const $=yt(R,c,d),V=$.slice(-y);D.forEach(le=>V[le]=0);const G=pa(V,y,T),K=$.slice(-C);M.forEach(le=>K[le]=0);const ae=pa(K,C,k);g[R]=n(r[G],s[ae])}return[g,i]}}function ii(n){const{inputs:t,backend:e}=n,{real:r,imag:s}=t,a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,c=e.makeTensorInfo(r.shape,"complex64");return e.data.get(c.dataId).complexTensorInfos={real:e.makeTensorInfo(r.shape,"float32",a),imag:e.makeTensorInfo(s.shape,"float32",i)},c}const s4={kernelName:vf,backendName:"cpu",kernelFunc:ii};function pI(n,t,e="float32"){if("complex64"===e)return ii({inputs:{real:pI(n,t,"float32"),imag:pI(n,t,"float32")},backend:n});const r=zr(ze(t),e);return n.makeTensorInfo(t,e,r)}function Su(n){const{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const a4={kernelName:nc,backendName:"cpu",kernelFunc:Su};function md(n){const{inputs:t,backend:e}=n,{input:r}=t,s=e.data.get(r.dataId).complexTensorInfos.real,a=e.data.get(s.dataId).values;return e.makeTensorInfo(s.shape,s.dtype,a)}const i4={kernelName:Vf,backendName:"cpu",kernelFunc:md};function pF(n,t,e,r){if("int32"===r)return[t,"int32",Int32Array.from(n)];if("bool"===r){const s=is([0],e),[a,i]=ws((c,d)=>c!==d?1:0)(t,[],n,s,"bool");return[i,"bool",a]}throw new Error(`Error in Cast: failed to cast ${e} to ${r}`)}function tf(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Su({inputs:{x:s},backend:e});const g=pI(e,s.shape,s.dtype),y=tf({inputs:{x:s},backend:e,attrs:{dtype:"float32"}}),C=ii({inputs:{real:y,imag:g},backend:e});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),C}if("complex64"===s.dtype){const g=md({inputs:{input:s},backend:e}),y=tf({inputs:{x:g},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(g),y}if(!ku(s.dtype,a)){const g=Su({inputs:{x:s},backend:e});return{dataId:g.dataId,shape:g.shape,dtype:a}}const i=e.data.get(s.dataId).values,[c,d,m]=pF(i,s.shape,s.dtype,a);return e.makeTensorInfo(c,d,m)}const o4={kernelName:Zs,backendName:"cpu",kernelFunc:tf};function Us(n,t,e,r){return null==e?({inputs:s,backend:a})=>{const{a:i,b:c}=s,d=a;en([i,c],n);const m=d.data.get(i.dataId).values,g=d.data.get(c.dataId).values,y="string"===i.dtype?ko(m):m,C="string"===i.dtype?ko(g):g,T=r||i.dtype,[k,D]=t(i.shape,c.shape,y,C,T);return d.makeTensorInfo(D,T,k)}:({inputs:s,backend:a})=>{const{a:i,b:c}=s,d=a;if("complex64"===i.dtype||"complex64"===c.dtype){const m=tf({inputs:{x:i},backend:d,attrs:{dtype:"complex64"}}),g=d.data.get(m.dataId),C=g.complexTensorInfos.imag,T=d.data.get(g.complexTensorInfos.real.dataId).values,k=d.data.get(C.dataId).values,D=tf({inputs:{x:c},backend:d,attrs:{dtype:"complex64"}}),M=d.data.get(D.dataId),$=M.complexTensorInfos.imag,V=d.data.get(M.complexTensorInfos.real.dataId).values,G=d.data.get($.dataId).values,[K,ae,le]=e(i.shape,c.shape,T,k,V,G),he=d.makeTensorInfo(le,"float32",K),Ae=d.makeTensorInfo(le,"float32",ae),ke=ii({inputs:{real:he,imag:Ae},backend:d});return d.disposeIntermediateTensorInfo(m),d.disposeIntermediateTensorInfo(D),d.disposeIntermediateTensorInfo(he),d.disposeIntermediateTensorInfo(Ae),ke}{const m=d.data.get(i.dataId).values,g=d.data.get(c.dataId).values,y=r||i.dtype,[C,T]=t(i.shape,c.shape,m,g,y);return d.makeTensorInfo(T,y,C)}}}function cR(n){return(t,e,r,s,a,i)=>{const c=An(t,e),d=ze(c),m=c.length,g=tn(c),y=jr("float32",d),C=jr("float32",d),T=tl(t,c),k=tl(e,c),D=Eo(r,s),M=Eo(a,i),R=t.length,$=tn(t),V=e.length,G=tn(e);if(T.length+k.length===0)for(let K=0;K<y.length;K++){const ae=K%D.length,le=K%M.length,he=n(D[2*ae],D[2*ae+1],M[2*le],M[2*le+1]);y[K]=he.real,C[K]=he.imag}else for(let K=0;K<y.length;K++){const ae=yt(K,m,g),le=ae.slice(-R);T.forEach(Je=>le[Je]=0);const he=pa(le,R,$),Ae=ae.slice(-V);k.forEach(Je=>Ae[Je]=0);const ke=pa(Ae,V,G),Ue=n(D[2*he],D[2*he+1],M[2*ke],M[2*ke+1]);y[K]=Ue.real,C[K]=Ue.imag}return[y,C,c]}}const mF=ws((n,t)=>n+t),u4=cR((n,t,e,r)=>({real:n+e,imag:t+r})),kg=Us(Du,mF,u4),l4={kernelName:Du,backendName:"cpu",kernelFunc:kg};function fR(n,t,e,r,s){const a=ze(r),i=zr(s,e);for(let c=0;c<n.length;c++){const d=n[c];if(d<0)throw new Error("Input x must be non-negative!");d>=s||(i[d]+=a>0?t[c]:1)}return i}function gF(n,t,e,r=!1){const s=n.shape[0],a=n.shape[1],i=En([s,e],t.dtype);for(let c=0;c<s;c++)for(let d=0;d<a;d++){const m=n.get(c,d);if(m<0)throw new Error("Input x must be non-negative!");m>=e||i.set(r?1:t.size>0?i.get(c,m)+t.get(c,d):i.get(c,m)+1,c,m)}return i}function Cu(n){return(t,e,r)=>{const s=Wn(e,t.length);for(let a=0;a<t.length;++a)s[a]=n(t[a],r);return s}}function dr(n,t,e){return nf(n,Cu(t),e)}function nf(n,t,e){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;en(i,n);const c=a,d=c.data.get(i.dataId).values;let m;if("string"===i.dtype){if(!Array.isArray(d))throw new Error("String tensor's value was not an instance of Array");m=ko(d)}else m=d;const g=e||i.dtype,y=t(m,g,s);return c.makeTensorInfo(i.shape,g,y)}}const vF=Cu(n=>Math.ceil(n)),c4=nf($u,vF),f4={kernelName:$u,backendName:"cpu",kernelFunc:c4};function yF(n,t,e,r){const s=Wn(e,ze(t));if(r&&"string"!==e){let a=0;n.forEach(i=>{const c=ze(i.shape);s.set(i.vals,a),a+=c})}else{let a=0;n.forEach(i=>{const c="string"===e?ko(i.vals):i.vals;let d=0;for(let m=0;m<i.shape[0];++m){const g=m*t[1]+a;for(let y=0;y<i.shape[1];++y)s[g+y]=c[d++]}a+=i.shape[1]})}return s}const bF=ws((n,t)=>n===t?1:0),xF=Us(Nf,bF,null,"bool"),h4={kernelName:Nf,backendName:"cpu",kernelFunc:xF},wF=Cu(n=>Math.exp(n)),NF=nf(Bu,wF,"float32"),d4={kernelName:Bu,backendName:"cpu",kernelFunc:NF},SF=Cu(n=>Math.expm1(n)),p4=nf(Jl,SF),m4={kernelName:Jl,backendName:"cpu",kernelFunc:p4},CF=Cu(n=>Math.floor(n)),g4=nf(Ql,CF),v4={kernelName:Ql,backendName:"cpu",kernelFunc:g4},IF=ws((n,t)=>Math.floor(n/t)),y4=Us(ec,IF,null,"int32"),b4={kernelName:ec,backendName:"cpu",kernelFunc:y4};function _F(n,t,e,r,s,a,i,c,d){const m=En([r,a],e);for(let g=0;g<r;g++){const y=[];let C=0;for(let T=0;T<s;T++){const k=n[g*s+T];C+=k*i[T],y.push(k)}if(C<0||C>=d/a)throw new Error(`Invalid indices: ${y} does not index into ${c}`);for(let T=0;T<a;T++)m.values[g*a+T]=t.get(...t.indexToLoc(C*a+T))}return m}function TF(n,t,e){const r=En(e,n.dtype);for(let s=0;s<r.size;++s){const i=r.indexToLoc(s).slice(),m=t.locToIndex([i[0],i[2]]);i[2]=t.values[m];const g=n.locToIndex(i);0<=g&&g<n.values.length&&(r.values[s]=n.values[g])}return r}const AF=ws((n,t)=>n>t?1:0),x4=Us(Tf,AF,null,"bool"),w4={kernelName:Tf,backendName:"cpu",kernelFunc:x4},EF=ws((n,t)=>n>=t?1:0),N4=Us(tc,EF,null,"bool"),S4={kernelName:tc,backendName:"cpu",kernelFunc:N4},kF=ws((n,t)=>n<t?1:0),C4=Us(Ef,kF,null,"bool"),I4={kernelName:Ef,backendName:"cpu",kernelFunc:C4},MF=ws((n,t)=>n<=t?1:0),_4=Us(kf,MF,null,"bool"),T4={kernelName:kf,backendName:"cpu",kernelFunc:_4};function DF(n,t,e){const r=(t-n)/(e-1),s=zr(e,"float32");s[0]=n;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const RF=Cu(n=>Math.log(n)),A4=nf(ic,RF),E4={kernelName:ic,backendName:"cpu",kernelFunc:A4};function $F(n,t,e,r){const s=jr(r,ze(e));for(let a=0;a<s.length;++a){const i=a*t;let c=n[i];for(let d=0;d<t;++d){const m=n[i+d];(Number.isNaN(m)||m>c)&&(c=m)}s[a]=c}return s}const OF=ws((n,t)=>Math.max(n,t)),k4=Us(vn,OF),M4={kernelName:vn,backendName:"cpu",kernelFunc:k4},FF=ws((n,t)=>Math.min(n,t)),D4=Us(Vu,FF),R4={kernelName:Vu,backendName:"cpu",kernelFunc:D4},hR=ws((n,t)=>n*t),$4=cR((n,t,e,r)=>({real:n*e-t*r,imag:n*r+t*e})),mI=Us(fc,hR,$4),O4={kernelName:fc,backendName:"cpu",kernelFunc:mI};function LF(n,t,e){const r=Qo(-1,e);return hR([],t,r,n,e)}const L4={kernelName:$f,backendName:"cpu",kernelFunc:function F4(n){const{inputs:t,backend:e}=n,{x:r}=t;en(r,"neg");const s=e.data.get(r.dataId).values,[a,i]=LF(s,r.shape,r.dtype);return e.makeTensorInfo(i,r.dtype,a)}},BF=ws((n,t)=>n!==t?1:0),B4=Us(Of,BF,null,"bool"),P4={kernelName:Of,backendName:"cpu",kernelFunc:B4};function dR(n,t,e,r,s){const a=t.length,i=ze(t),c=tn(t),d=tn(s),m=jr(e,ze(s));for(let g=0;g<i;++g){const y=yt(g,a,c),C=new Array(y.length);for(let k=0;k<C.length;k++)C[k]=y[r[k]];m[pa(C,a,d)]=n[g]}return m}function Ua(n){const{inputs:t,attrs:e,backend:r}=n,{x:s}=t,{perm:a}=e;en(s,"transpose");const c=new Array(s.shape.length);for(let y=0;y<c.length;y++)c[y]=s.shape[a[y]];const m=dR(r.data.get(s.dataId).values,s.shape,s.dtype,a,c);return{dataId:r.write(m,c,s.dtype),shape:c,dtype:s.dtype}}const z4={kernelName:qa,backendName:"cpu",kernelFunc:Ua};function PF(n,t,e,r){const[s,a]=ms(n,r),i=ra(t,"int32"),c=zr(ze(s),i),d=ze(a);for(let m=0;m<c.length;++m){const g=m*d;let y=1;for(let C=0;C<d;++C)y*=e[g+C];c[m]=y}return{outVals:c,outShape:s,outDtype:i}}const U4={kernelName:zf,backendName:"cpu",kernelFunc:function V4(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;en(s,"prod");const c=s.shape.length,d=Mn(a,s.shape),m=Or(d,c);let g=d,y=s;const C=[];null!=m&&(y=Ua({inputs:{x:s},backend:e,attrs:{perm:m}}),C.push(y),g=Br(g.length,c));const T=e.data.get(y.dataId).values,{outVals:k,outShape:D,outDtype:M}=PF(y.shape,y.dtype,T,g);let R=D;return i&&(R=Wr(D,d)),C.forEach($=>e.disposeIntermediateTensorInfo($)),e.makeTensorInfo(R,M,k)}};function zF(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let r=t;r<n.length;r++)e[t-1]*=n[r];return e}function VF(n,t,e,r,s,a,i,c){if(0===n.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function W4(n,t,e){n.forEach((r,s)=>{if(r<0||r>=e){const a=yt(s,t.length,tn(t)).join(",");throw new Error(`indices[${a}] = ${r} is not in [0, ${e})`)}})}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const m=r[0],{outSplits:g,valueSlices:y,numValues:C}=function q4(n,t,e,r){const s=[];let a=0;const c=new Array(t.length-1+e.length).fill(null).map(()=>[0]);!function G4(n,t){for(let e=0;e<n.length;++e){const r=n[e],s=e===n.length-1?t:n[e+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let a=1;a<r.length;++a)if(r[a-1]>r[a])throw new Error("Ragged splits must be sorted in ascending order")}}(e,r);let d=1;for(let m=0;m<t.length-1;++m){d*=t[m];const g=t[m+1];for(let y=1;y<d+1;++y)c[m].push(y*g)}for(let m=0;m<n.length;++m){let g=n[m],y=n[m]+1;for(let C=0;C<e.length;++C){const T=e[C],k=C+t.length-1;if(k>=0){const D=c[k],M=D[D.length-1]-T[g];for(let R=g;R<y;++R)c[k].push(T[R+1]+M)}g=T[g],y=T[y]}y!==g&&(s.push([g,y]),a+=y-g)}return{outSplits:c,valueSlices:s,numValues:a}}(a,i,n,m),T=function H4(n){const t=[];for(let e=0;e<n.length;++e){const s=Wn("int32",n[e].length);t.push(s),n[e].forEach((a,i)=>s[i]=a)}return t}(g),k=function Z4(n,t,e,r,s){const a=t.slice();a[0]=s;const i=Wn(e,ze(a)),c=n.length;return function K4(n,t,e,r,s,a){const i=zF(t,2)[1],c=zF(a,2)[1];let d=0;for(const m of e)for(let g=m[0];g<m[1];++g){for(let y=0;y<r;++y)s[d*c+y]=n[g*i+y];++d}}(n,t,r,0===c?0:c/t[0],i,a),[i,a]}(e,r,s,y,C);return[T,k[0],k[1]]}const UF=2147483647;function WF(n,t,e,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const c=0===t.length,d=0===s.length,m=0===i.length,g=[];c||g.push(t[0]),d||g.push(s[0]),m||g.push(i[0]);for(let M=1;M<g.length;++M)if(g[M]!==g[M-1])throw new Error("starts, limits, and deltas must have the same shape");const y=0===g.length?1:g[0],C=Wn("int32",y+1);C[0]=0;for(let M=0;M<y;++M){const R=c?n[0]:n[M],$=d?r[0]:r[M],V=m?a[0]:a[M];if(0===V)throw new Error("Requires delta != 0");let G;if(V>0&&$<R||V<0&&$>R)G=0;else if(G=Math.ceil(Math.abs(($-R)/V)),G>UF)throw new Error(`Requires ((limit - start) / delta) <= ${UF}`);C[M+1]=C[M]+G}const k=Wn(e,C[y]);let D=0;for(let M=0;M<y;++M){const R=C[M+1]-C[M];let $=c?n[0]:n[M];const V=m?a[0]:a[M];for(let G=0;G<R;++G)k[D++]=$,$+=V}return[C,k]}var eo=Ja;class gI{constructor(t,e,r,s,a,i,c,d,m,g){this.shape=t,this.shapeShape=e,this.values=r,this.valuesShape=s,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=c,this.rowPartitionValues=d,this.rowPartitionValuesShapes=m,this.rowPartitionTypes=t0(g),this.raggedRank=TN(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===eo.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===eo.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case eo.VALUE_ROWIDS:return gI.getMaxWidthValueRowID(e);case eo.ROW_SPLITS:return gI.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${eo[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let r=0;for(let s=0;s<e-1;++s){const a=t[s+1]-t[s];a>r&&(r=a)}return r}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let r=0,s=t[0],a=0;for(let i=1;i<e;++i){const c=t[i];c!==s&&(s=c,a=Math.max(i-r,a),r=i)}return Math.max(e-r,a)}tensorShapeFromTensor(t,e,r=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return qF(t,r)}calculateOutputSize(t){const e=this.valuesShape;AN(this.defaultValueShape,e);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=_N(this.raggedRank,s,e);i[0]<0&&(i[0]=t);for(let c=1;c<=this.raggedRank;++c)i[c]<0&&(i[c]=this.getMaxWidth(c));return i}calculateFirstParentOutputIndex(t,e,r){const s=Math.min(t,r),a=[];let i=0;for(let c=0;c<s;++c,i+=e)a.push(i);for(let c=s;c<t;++c)a.push(-1);return q(a.length===t,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(t,e,r,s){const a=t.length,i=[];for(let c=0;c<a-1;++c){const d=t[c+1]-t[c];let m=Math.min(s,d),g=e[c];-1===g&&(m=0);for(let y=0;y<m;++y)i.push(g),g+=r;for(let y=0;y<d-m;++y)i.push(-1)}if(a>0&&i.length!==t[a-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,r,s){const a=t.length,i=[];if(0===a)return[];let c=0,d=t[0];if(d>=e.length)throw new Error(`Got currentValueRowId=${d}, which is not less than ${e.length}`);let m=e[d];i.push(m);for(let g=1;g<a;++g){const y=t[g];if(y===d)m>=0&&(++c,c<s?m+=r:m=-1);else{if(c=0,d=y,y>=e.length)throw new Error(`Got nextValueRowId=${y} which is not less than ${e.length}`);m=e[y]}i.push(m)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,r,s){const a=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case eo.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,e,r,s);case eo.ROW_SPLITS:if(a.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(a,e,r,s);default:throw new Error(`Unsupported partition type: ${eo[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case eo.FIRST_DIM_SIZE:return t[0];case eo.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case eo.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${eo[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),r=this.calculateOutputSize(e),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let d=s.length-2;d>=0;--d)s[d]=s[d+1]*r[d+1];const a=qF(r,!1),i=Wn(this.valuesDType,ze(a));if(s[0]*r[0]>0){let d=this.calculateFirstParentOutputIndex(e,s[0],r[0]);for(let m=1;m<=this.raggedRank;++m)d=this.calculateOutputIndex(m-1,d,s[m],r[m]);this.setOutput(this.raggedRank,d,i,a)}return[a,i]}setOutput(t,e,r,s){if(0===r.length)return;const a=this.values,i=r;let c=s.slice();c=c.slice(t+1);const d=ze(c),m=e.length;let g=this.defaultValue;if(g.length!==d&&1!==g.length){const k=this.defaultValueShape;qe(()=>{const D=$e(g,k);g=cu(D,c).dataSync()})}let y=0,C=0,T=0;for(let k=0;k<=m;++k){let D=k<m?e[k]:-1;if(D!==T){if(C<T){const M=a.subarray(y*d);GF(i.subarray(C*d),M,(T-C)*d)}if(k>=m&&(D=Math.floor(r.length/d)),D>T)if(1===this.defaultValue.length)i.subarray(T*d,D*d).fill(this.defaultValue[0]),T=D;else for(;D>T;)GF(i.slice(T*d),g,d),++T;D<0?(y=k+1,C=T):(y=k,C=T,T=C+1)}else++T}}}function GF(n,t,e){for(let r=0;r<e;r++)n[r]=t[r]}function qF(n,t){const e=[];for(let r of n){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}e.push(r)}return e}function HF(n,t,e,r,s,a,i,c,d,m){return new gI(n,t,e,r,s,a,i,c,d,m).compute()}function KF(n,t,e,r){if(n===t||n<t&&e<0||t<n&&e>1)return zr(0,r);const d=zr(Math.abs(Math.ceil((t-n)/e)),r);t<n&&1===e&&(e=-1),d[0]=n;for(let m=1;m<d.length;m++)d[m]=d[m-1]+e;return d}const ZF=Cu(n=>1/Math.sqrt(n)),j4=nf(pc,ZF),X4={kernelName:pc,backendName:"cpu",kernelFunc:j4};function gd(n,t,e,r,s,a,i,c,d,m){const g=[r/s,s],y=n.values,C=t.values;if(0===r)return En(e,t.dtype);const T=d instanceof Jr?d:En(g,t.dtype);"string"==typeof d||"number"==typeof d?T.values.fill(d):"boolean"==typeof d&&T.values.fill(+d);for(let k=0;k<a;k++){const D=[];let M=0;for(let R=0;R<i;R++){const $=y[k*i+R];D.push($),M+=$*c[R]}if(M<0||M>=r/s)throw new Error(`Invalid indices: ${D} does not index into ${e}`);for(let R=0;R<s;R++)m?T.values[M*s+R]+=C[k*s+R]:T.values[M*s+R]=0===t.rank?C[0]:C[k*s+R]}return T}const Y4=Cu(n=>1/(1+Math.exp(-n))),jF=dr(gc,n=>1/(1+Math.exp(-n))),J4={kernelName:gc,backendName:"cpu",kernelFunc:jF};function XF(n,t,e,r,s){const a=Pv(r,t,e),i=ze(e),c=tn(r);if(a){const y=vi(t,c);return"string"===s?n.slice(y,y+i):n.subarray(y,y+i)}const m=En(r,s,"string"===s?ko(n):n),g=En(e,s);for(let y=0;y<g.size;++y){const C=g.indexToLoc(y),T=C.map((k,D)=>k+t[D]);g.set(m.get(...T),...C)}return"string"===s?ZN(g.values):g.values}function vd(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,size:i}=r;en(s,"slice");const[c,d]=xo(s,a,i);Bv(s,c,d);const g=XF(e.data.get(s.dataId).values,c,d,s.shape,s.dtype);return e.makeTensorInfo(d,s.dtype,g)}const Q4={kernelName:Hf,backendName:"cpu",kernelFunc:vd};function YF(n,t,e,r,s,a,i){const c=t[0],d=a[0],m=new Array(d),g=new Array(c),y=t[1];if(0===d){if(0!==c)throw new Error(BN(c));return[Wn(e,0),[0,y],Wn(s,0),m,g]}let C=!0,T=0;const k=new Array(d).fill(0);for(let M=0;M<c;++M){const R=n[M*y];if(R<0)throw new Error(PN(M,R));if(R>=d)throw new Error(m0(M,R,d));++k[R],C=C&&R>=T,T=R}let D=!0;for(let M=0;M<d;++M){const R=0===k[M];m[M]=R,D=D&&!R,k[M]=Math.max(k[M],1),M>0&&(k[M]+=k[M-1])}if(D&&C){const M=n,R=r;for(let $=0;$<c;++$)g[$]=$;return[M,[c,y],R,m,g]}{const M=k[d-1],R=Wn(e,M*y),$=Wn(s,M),V=new Array(d).fill(0);for(let G=0;G<c;++G){const K=n[G*y],le=(0===K?0:k[K-1])+V[K];V[K]++;for(let he=0;he<y;++he)R[le*y+he]=n[G*y+he];$[le]=r[G],g[G]=le}for(let G=0;G<d;++G)if(0===V[G]){const ae=0===G?0:k[G-1];R[ae*y+0]=G;for(let le=1;le<y;++le)R[ae*y+le]=0;$[ae]=i}return[R,[M,y],$,m,g]}}function JF(n,t,e,r,s){const a=ze(r),i=t[0],c=s.length,d=[];let m=1,g=-1;for(let M=0;M<c;++M){const R=s[M];if(-1===R){if(-1!==g)throw new Error(zN(g,M));g=M,d.push(1)}else{if(R<0)throw new Error(VN(M,R));m*=R,d.push(R)}}if(-1!==g){if(m<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const M=Math.trunc(a/m);if(m*M!==a)throw new Error(UN(r,d));d[g]=M}if(ze(d)!==a)throw new Error(WN(r,d));const C=r.length,T=[];if(C>0){T[C-1]=1;for(let M=C-2;M>=0;--M)T[M]=T[M+1]*r[M+1]}const k=[];if(c>0){k[c-1]=1;for(let M=c-2;M>=0;--M)k[M]=k[M+1]*d[M+1]}const D=Wn(e,i*c);for(let M=0;M<i;++M){let R=0;for(let $=0;$<C;++$)R+=n[M*C+$]*T[$];for(let $=0;$<c;++$)D[M*c+$]=Math.trunc(R/k[$]),R%=k[$]}return[D,[i,c],d]}function pR(n,t,e,r,s,a=!1,i=0){const c=r.length,d=[t[0],n.length/t[0]],m=d[1],y=c>0?s[c-1]+1:0;if(y<0)throw new Error("segment ids must be >= 0");const C=t.slice();C[0]=y;const k=Wn(e,C.reduce((V,G)=>V*G,1));if(0===c)return y>0&&k.fill(i),[k,C];if(y<=0)throw new Error("segment ids must be >= 0");let D=0,M=1,R=0,$=s[D];for(;;){let V=0;if(M<c){if(V=s[M],$===V){++M;continue}if($>=V)throw new Error("segment ids are not increasing")}if($<0||$>=y)throw new Error(qN($,y));$>R&&k.fill(i,R*m,$*m);for(let G=D;G<M;++G){const K=r[G];if(K<0||K>=d[0])throw new Error(v0(G,r[G],d[0]));for(let ae=0;ae<m;ae++)k[$*m+ae]+=n[K*m+ae]}if(a)for(let G=0;G<m;G++)k[$*m+G]/=M-D;if(D=M,++M,R=$+1,$=V,M>c)break}return R<y&&k.fill(i,R*m,y*m),[k,C]}const eV=Cu(n=>Math.sqrt(n)),tV=dr(Xo,n=>Math.sqrt(n)),nV={kernelName:Xo,backendName:"cpu",kernelFunc:tV},QF=ws((n,t)=>{const e=n-t;return e*e}),rV=Us(vc,QF),sV={kernelName:vc,backendName:"cpu",kernelFunc:rV},e3=Cu((n,t)=>{const{pattern:e,replaceGlobal:r,rewrite:s}=t;return n.replace(new RegExp(e,r?"g":""),s)}),aV=nf(yc,e3),iV={kernelName:yc,backendName:"cpu",kernelFunc:aV};function t3(n,t,e,r){const s=En(n,t.dtype);for(let a=0;a<s.size;a++){const i=s.indexToLoc(a),c=new Array(i.length);for(let d=0;d<c.length;d++)c[d]=i[d]*e[d]+r[d];s.set(t.get(...c),...i)}return s}class oV{constructor(t,e,r,s,a,i){this.separator=_i(t),this.nGramWidths=e,this.leftPad=_i(r),this.rightPad=_i(s),this.padWidth=a,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const r=this.getPadWidth(e);return Math.max(0,t+2*r-e+1)}createNGrams(t,e,r,s,a,i){for(let c=0;c<a;++c){const d=this.getPadWidth(i),m=Math.max(0,d-c),g=Math.max(0,d-(a-(c+1))),y=i-(m+g),C=e+(m>0?0:c-d);let T=0;T+=m*this.leftPad.length;for(let $=0;$<y;++$)T+=t[C+$].length;T+=g*this.rightPad.length,T+=(m+g+y-1)*this.separator.length,r[s+c]=new Uint8Array(T);const D=r[s+c];let M=0;const R=$=>$.forEach(V=>D[M++]=V);for(let $=0;$<m;++$)R(this.leftPad),R(this.separator);for(let $=0;$<y-1;++$)R(t[C+$]),R(this.separator);if(y>0){R(t[C+y-1]);for(let $=0;$<g;++$)R(this.separator),R(this.rightPad)}else{for(let $=0;$<g-1;++$)R(this.rightPad),R(this.separator);R(this.rightPad)}}}compute(t,e){const r=t.length,s=e.length;if(s>0){let d=e[0];if(0!==d)throw new Error(`First split value must be 0, got ${d}`);for(let m=1;m<s;++m){let g=e[m]>=d;if(g=g&&e[m]<=r,!g)throw new Error(`Invalid split value ${e[m]}, must be in [${d}, ${r}]`);d=e[m]}if(d!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${d}`)}const a=s-1,i=Wn("int32",s);if(0===r||0===s){const d=new Array(r);for(let m=0;m<=a;++m)i[m]=0;return[d,i]}i[0]=0;for(let d=1;d<=a;++d){const m=e[d]-e[d-1];let g=0;this.nGramWidths.forEach(y=>{g+=this.getNumNGrams(m,y)}),this.preserveShort&&m>0&&0===g&&(g=1),i[d]=i[d-1]+g}const c=new Array(i[a]);for(let d=0;d<a;++d){const m=e[d];let g=i[d];if(this.nGramWidths.forEach(y=>{const T=this.getNumNGrams(e[d+1]-e[d],y);this.createNGrams(t,m,c,g,T,y),g+=T}),this.preserveShort&&g===i[d]){const y=e[d+1]-e[d];if(0===y)continue;this.createNGrams(t,m,c,g,1,y+2*this.padWidth)}}return[c,i]}}function n3(n,t,e,r,s,a,i,c){return new oV(e,r,s,a,i,c).compute(n,t)}function uV(n,t,e,r){if(!n.length)return;if(0===t.length){for(let a=0;a<n.length;++a)r.push(n.subarray(a,a+1));return}if(1===t.length){const a=t[0];let i=n.indexOf(a);for(;-1!==i;){const c=n.subarray(0,i);(!e||0!==c.length)&&r.push(c),i=(n=n.subarray(i+1)).indexOf(a)}return void((!e||0!==n.length)&&r.push(n))}let s=0;for(let a=0;a<n.length+1;a++)if(a===n.length||-1!==t.indexOf(n[a])){const i=n.subarray(s,a);(!e||0!==i.length)&&r.push(i),s=a+1}}function r3(n,t,e){const r=n.length,s=[];let a=0,i=0;const c=new Array(r);for(let C=0;C<r;++C){const T=s.length;uV(n[C],t,e,s);const k=s.length-T;c[C]=k,a+=k,i=Math.max(i,k)}const d=Wn("int32",2*a),m=new Array(a),g=[r,i];let y=0;for(let C=0;C<r;++C)for(let T=0;T<c[C];++T)d[2*y]=C,d[2*y+1]=T,m[y]=s[y],++y;return[d,m,g]}function s3(n,t){const e=Wn("int32",n.length);for(let r=0;r<n.length;++r)e[r]=jI(n[r]).modulo(t).getLowBitsUnsigned();return e}const a3=ws((n,t)=>n-t),lV=cR((n,t,e,r)=>({real:n-e,imag:t-r})),mR=Us(co,a3,lV),cV={kernelName:co,backendName:"cpu",kernelFunc:mR};function i3(n,t){const e=new Array(n.rank);for(let s=0;s<e.length;s++)e[s]=n.shape[s]*t[s];const r=En(e,n.dtype);for(let s=0;s<r.values.length;++s){const a=r.indexToLoc(s),i=new Array(n.rank);for(let d=0;d<i.length;d++)i[d]=a[d]%n.shape[d];const c=n.locToIndex(i);r.values[s]=n.values[c]}return r}const Db=(n,t)=>{const e=t.value-n.value;return 0===e?n.index-t.index:e};function o3(n,t,e=0,r=n.length-1){for(;r>e;){if(r-e>600){const c=r-e+1,d=t-e+1,m=Math.log(c),g=.5*Math.exp(2*m/3),y=.5*Math.sqrt(m*g*(c-g)/c)*Math.sign(d-c/2);o3(n,t,Math.max(e,Math.floor(t-d*g/c+y)),Math.min(r,Math.floor(t+(c-d)*g/c+y)))}const s=n[t];let a=e,i=r;for(Ga(n,e,t),Db(n[r],s)>0&&Ga(n,e,r);a<i;){for(Ga(n,a,i),a++,i--;Db(n[a],s)<0;)a+=1;for(;Db(n[i],s)>0;)i-=1}0===Db(n[e],s)?Ga(n,e,i):(i+=1,Ga(n,i,r)),i<=t&&(e=i+1),t<=i&&(r=i-1)}}function u3(n,t,e,r,s){const a=t[t.length-1],[i,c]=[n.length/a,a],d=jr(e,i*r),m=jr("int32",i*r);for(let y=0;y<i;y++){const C=y*c,T=n.subarray(C,C+c);let k=new Array(T.length);T.forEach(($,V)=>k[V]={value:$,index:V}),r<k.length&&(o3(k,r),k=k.slice(0,r)),s&&k.sort(Db);const D=y*r,M=d.subarray(D,D+r),R=m.subarray(D,D+r);for(let $=0;$<r;$++)M[$]=k[$].value,R[$]=k[$].index}const g=t.slice();return g[g.length-1]=r,[En(g,e,d),En(g,"int32",m)]}function l3(n,t,e,r){const s=Mn(t,e)[0],a=[1,e[0],1];for(let k=0;k<s;k++)a[0]*=e[k];a[1]=e[s];for(let k=s+1;k<e.length;k++)a[2]*=e[k];const i=new Map,c=new Int32Array(e[s]),d=new Jr(a,r,n),m=[],g=1===a[0]&&1===a[2];for(let k=0;k<e[s];k++){let D;if(g)D=n[k].toString();else{const R=[];for(let $=0;$<a[0];$++)for(let V=0;V<a[2];V++)R.push(d.get($,k,V));D=R.join(",")}const M=i.get(D);if(null!=M)c[k]=M;else{const R=i.size;i.set(D,R),c[k]=R,m.push(k)}}const y=a.slice();y[1]=i.size;const C=new Jr(y,r);m.forEach((k,D)=>{for(let M=0;M<a[0];M++)for(let R=0;R<a[2];R++)C.set(d.get(M,k,R),M,D,R)});const T=e.slice();return T[s]=y[1],{outputValues:C.values,outputShape:T,indices:c}}const c3="4.4.0";wv("cpu",()=>new hF,1);const f3=dr(Xl,n=>n>=0?n:Math.exp(n)-1),fV={kernelName:Xl,backendName:"cpu",kernelFunc:f3};function h3(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{alpha:a}=r;en([s],"leakyRelu");const i=ze(s.shape),c=e.data.get(s.dataId).values,d=jr("float32",i);for(let m=0;m<c.length;m++)d[m]=c[m]<0?a*c[m]:c[m];return e.makeTensorInfo(s.shape,"float32",d)}const hV={kernelName:Af,backendName:"cpu",kernelFunc:h3},dV=ws((n,t)=>n<0?t*n:n);function d3(n){const{inputs:t,backend:e}=n,{x:r,alpha:s}=t;en([r,s],"prelu");const a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,[c,d]=dV(r.shape,s.shape,a,i,"float32");return e.makeTensorInfo(d,"float32",c)}const pV={kernelName:dc,backendName:"cpu",kernelFunc:d3},p3=dr(hn,n=>Math.max(0,n)),mV={kernelName:hn,backendName:"cpu",kernelFunc:p3},m3=dr(Wu,n=>Math.min(Math.max(0,n),6)),gV={kernelName:Wu,backendName:"cpu",kernelFunc:m3};function vI(n,t,e,r,s){if("linear"===e)return Su({inputs:{x:t},backend:n});if("relu"===e)return p3({inputs:{x:t},backend:n});if("elu"===e)return f3({inputs:{x:t},backend:n});if("relu6"===e)return m3({inputs:{x:t},backend:n});if("prelu"===e)return d3({inputs:{x:t,alpha:r},backend:n});if("leakyrelu"===e)return h3({inputs:{x:t},backend:n,attrs:{alpha:s}});if("sigmoid"===e)return jF({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function _r(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{shape:a}=r,i=ze(s.shape),c=Eu(a,i),d=ze(c);q(i===d,()=>`The new shape (${c}) has ${d} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(s.dataId);const m=e.data.get(s.dataId);if(null!=m.complexTensorInfos){const y=m.complexTensorInfos.imag;m.complexTensorInfos.real.shape=c,y.shape=c}return{dataId:s.dataId,shape:c,dtype:s.dtype}}const vV={kernelName:Uf,backendName:"cpu",kernelFunc:_r};function g3(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a}=t,{transposeA:i,transposeB:c}=r;en([s,a],"matMul");const d=s.shape.length,m=a.shape.length,g=i?s.shape[d-2]:s.shape[d-1],y=c?a.shape[m-1]:a.shape[m-2],C=i?s.shape[d-1]:s.shape[d-2],T=c?a.shape[m-2]:a.shape[m-1],k=s.shape.slice(0,-2),D=a.shape.slice(0,-2),M=ze(k),R=ze(D),V=An(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([C,T]);q(g===y,()=>`Error in matMul: inner shapes (${g}) and (${y}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${c} must match.`);const K=c?[R,T,y]:[R,y,T],ae=_r({inputs:{x:s},backend:e,attrs:{shape:i?[M,g,C]:[M,C,g]}}),le=_r({inputs:{x:a},backend:e,attrs:{shape:K}}),he=i?ae.shape[1]:ae.shape[2],Ae=i?ae.shape[2]:ae.shape[1],ke=c?le.shape[1]:le.shape[2],Ue=Math.max(M,R),Je=e.data.get(ae.dataId).values,st=e.data.get(le.dataId).values,at=tn(ae.shape),ot=tn(le.shape),[ct,pt,ut]=i?[at[0],1,at[1]]:[at[0],at[1],1],[gt,At,kt]=c?[1,ot[1],ot[0]]:[ot[1],1,ot[0]],Ot=Ae*ke,Dt=En([Ue,Ae,ke],ae.dtype),Gt=Dt.values,Pt=e.blockSize;for(let jt=0;jt<Ue;jt++){const dn=jt%M,Sn=jt%R;for(let yn=0;yn<Ae;yn+=Pt){const zn=Math.min(yn+Pt,Ae);for(let Un=0;Un<ke;Un+=Pt){const pr=Math.min(Un+Pt,ke);for(let Tr=0;Tr<he;Tr+=Pt){const as=Math.min(Tr+Pt,he);for(let Ar=yn;Ar<zn;Ar++)for(let br=Un;br<pr;br++){let Kr=0;for(let Pr=Tr;Pr<as;Pr++)Kr+=Je[dn*ct+Ar*pt+Pr*ut]*st[Pr*gt+br*At+Sn*kt];Gt[jt*Ot+(Ar*ke+br)]+=Kr}}}}}return e.disposeIntermediateTensorInfo(ae),e.disposeIntermediateTensorInfo(le),e.makeTensorInfo(V,Dt.dtype,Dt.values)}const yV={kernelName:rr,backendName:"cpu",kernelFunc:g3},xV={kernelName:Nc,backendName:"cpu",kernelFunc:function bV(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a,bias:i,preluActivationWeights:c}=t,{transposeA:d,transposeB:m,activation:g,leakyreluAlpha:y}=r;let C,T,k;const D=[];C=g3({inputs:{a:s,b:a},attrs:{transposeA:d,transposeB:m},backend:e}),i&&(T=kg({inputs:{a:C,b:i},backend:e}),D.push(C),C=T),g&&(k=vI(e,C,g,c,y),D.push(C),C=k);for(const R of D)e.disposeIntermediateTensorInfo(R);return C}},wV=dr(Yr,n=>Math.acos(n)),NV={kernelName:Yr,backendName:"cpu",kernelFunc:wV},SV=dr(Mr,n=>Math.acosh(n)),CV={kernelName:Mr,backendName:"cpu",kernelFunc:SV},_V={kernelName:pf,backendName:"cpu",kernelFunc:function IV(n){const{inputs:t,backend:e}=n,r=t;en(t,"addN");const s=r.map(c=>e.data.get(c.dataId).values),a=En(r[0].shape,r[0].dtype),i=a.values;for(let c=0;c<r.length;c++){const d=s[c];for(let m=0;m<i.length;m++)i[m]+=d[m]}return e.makeTensorInfo(a.shape,a.dtype,a.values)}},AV={kernelName:Rd,backendName:"cpu",kernelFunc:function TV(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;en(s,"all");const c=Mn(a,s.shape);let d=c;const m=Or(d,s.shape.length);let g=s;null!=m&&(g=Ua({inputs:{x:s},backend:e,attrs:{perm:m}}),d=Br(d.length,s.shape.length)),gs("all",d,g.shape.length);const[y,C]=ms(g.shape,d),T=ze(C),k=zr(ze(y),g.dtype),D=e.data.get(g.dataId).values;for(let R=0;R<k.length;++R){const $=R*T;let V=D[$];for(let G=0;G<T;++G){const K=D[$+G];V=V&&K}k[R]=V}null!=m&&e.disposeIntermediateTensorInfo(g);const M=e.makeTensorInfo(y,g.dtype,k);if(i){const $=_r({inputs:{x:M},backend:e,attrs:{shape:Wr(y,c)}});return e.disposeIntermediateTensorInfo(M),$}return M}},kV={kernelName:mf,backendName:"cpu",kernelFunc:function EV(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;en(s,"any");const c=Mn(a,s.shape);let d=c;const m=Or(d,s.shape.length);let g=s;null!=m&&(g=Ua({inputs:{x:s},backend:e,attrs:{perm:m}}),d=Br(d.length,s.shape.length)),gs("any",d,g.shape.length);const[y,C]=ms(g.shape,d),T=ze(C),k=zr(ze(y),g.dtype),D=e.data.get(g.dataId).values;for(let R=0;R<k.length;++R){const $=R*T;let V=D[$];for(let G=0;G<T;++G){const K=D[$+G];V=V||K}k[R]=V}null!=m&&e.disposeIntermediateTensorInfo(g);const M=e.makeTensorInfo(y,g.dtype,k);if(i){const $=_r({inputs:{x:M},backend:e,attrs:{shape:Wr(y,c)}});return e.disposeIntermediateTensorInfo(M),$}return M}},DV={kernelName:na,backendName:"cpu",kernelFunc:function MV(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;en(s,"argMax");let i=Mn(a,s.shape);const c=Or(i,s.shape.length);let d=s;const m=[];null!=c&&(d=Ua({inputs:{x:s},backend:e,attrs:{perm:c}}),m.push(d),i=Br(i.length,d.shape.length)),i=[i[0]],gs("argMax",i,d.shape.length);const[g,y]=ms(d.shape,i),T=zr(ze(g),"int32"),k=ze(y),D=e.data.get(d.dataId).values;for(let M=0;M<T.length;++M){const R=M*k;let $=D[R],V=0;for(let G=0;G<k;++G){const K=D[R+G];K>$&&($=K,V=G)}T[M]=V}return m.forEach(M=>e.disposeIntermediateTensorInfo(M)),e.makeTensorInfo(g,"int32",T)}},$V={kernelName:pn,backendName:"cpu",kernelFunc:function RV(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;en(s,"argMin");let i=Mn(a,s.shape);const c=Or(i,s.shape.length);let d=s;const m=[];null!=c&&(d=Ua({inputs:{x:s},backend:e,attrs:{perm:c}}),m.push(d),i=Br(i.length,d.shape.length)),i=[i[0]],gs("argMin",i,d.shape.length);const[g,y]=ms(d.shape,i),T=zr(ze(g),"int32"),k=ze(y),D=e.data.get(d.dataId).values;for(let M=0;M<T.length;++M){const R=M*k;let $=D[R],V=0;for(let G=0;G<k;++G){const K=D[R+G];K<$&&($=K,V=G)}T[M]=V}return m.forEach(M=>e.disposeIntermediateTensorInfo(M)),e.makeTensorInfo(g,"int32",T)}},OV=dr(Gl,n=>Math.asin(n)),FV={kernelName:Gl,backendName:"cpu",kernelFunc:OV},LV=dr(ql,n=>Math.asinh(n)),BV={kernelName:ql,backendName:"cpu",kernelFunc:LV},PV=dr(Uo,n=>Math.atan(n)),zV={kernelName:Uo,backendName:"cpu",kernelFunc:PV},VV=ws((n,t)=>Math.atan2(n,t)),UV=Us(Vr,VV),WV={kernelName:Vr,backendName:"cpu",kernelFunc:UV},GV=dr(wt,n=>Math.atanh(n)),qV={kernelName:wt,backendName:"cpu",kernelFunc:GV};function gR(n,t,e,r,s,a){const i=s.strideHeight,c=s.strideWidth,d=s.dilationHeight,m=s.dilationWidth,g=s.effectiveFilterHeight,y=s.effectiveFilterWidth,C=s.padInfo.top,T=s.padInfo.left,k="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,D=En(s.outShape,e),M=D.values,R=s.outShape[1]*s.outShape[2]*s.outShape[3],$=s.outShape[2]*s.outShape[3],V=s.outShape[3];for(let G=0;G<s.batchSize;++G){const K=G*R,ae=G*r[0];for(let le=0;le<s.inChannels;++le)for(let he=0;he<s.outHeight;++he){const Ae=he*i-C,ke=Math.max(0,Ae),Ue=Math.min(s.inHeight,g+Ae),Je=K+he*$;for(let st=0;st<s.outWidth;++st){const at=st*c-T,ot=Math.max(0,at),ct=Math.min(s.inWidth,y+at);let pt=k,ut=0,gt=0;for(let kt=ke;kt<Ue;kt+=d){const Ot=ae+kt*r[1];for(let Dt=ot;Dt<ct;Dt+=m){const Pt=n[Ot+Dt*r[2]+le];"max"===a&&Pt>pt?pt=Pt:"avg"===a&&(ut+=Pt,gt++)}if(isNaN(pt))break}M[Je+st*V+le]="avg"===a?ut/gt:pt}}}return D}function v3(n,t,e,r,s=!1,a=!1){const i=En(r.outShape,"int32"),c=r.strideHeight,d=r.strideWidth,m=r.dilationHeight,g=r.dilationWidth,y=r.effectiveFilterHeight,C=r.effectiveFilterWidth,T=r.padInfo.top,k=r.padInfo.left,D=En(t,e,n);for(let M=0;M<r.batchSize;++M)for(let R=0;R<r.inChannels;++R)for(let $=0;$<r.outHeight;++$){const V=$*c-T;let G=V;for(;G<0;)G+=m;const K=Math.min(r.inHeight,y+V);for(let ae=0;ae<r.outWidth;++ae){const le=ae*d-k;let he=le;for(;he<0;)he+=g;const Ae=Math.min(r.inWidth,C+le);let ke=Number.NEGATIVE_INFINITY,Ue=-1;for(let Je=G;Je<K;Je+=m){const st=Je-V;for(let at=he;at<Ae;at+=g){const ot=at-le,ct=D.get(M,Je,at,R);ct>ke&&(ke=ct,Ue=s?a?((M*r.inHeight+Je)*r.inWidth+at)*r.inChannels+R:(Je*r.inWidth+at)*r.inChannels+R:st*C+ot)}}i.set(Ue,M,$,ae,R)}}return i}function y3(n,t,e,r,s,a){const i=s.strideDepth,c=s.strideHeight,d=s.strideWidth,m=s.dilationDepth,g=s.dilationHeight,y=s.dilationWidth,C=s.effectiveFilterDepth,T=s.effectiveFilterHeight,k=s.effectiveFilterWidth,D=s.padInfo.front,M=s.padInfo.top,R=s.padInfo.left,$="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,V=En(s.outShape,e),G=V.values,K=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],ae=s.outShape[2]*s.outShape[3]*s.outShape[4],le=s.outShape[3]*s.outShape[4],he=s.outShape[4];for(let Ae=0;Ae<s.batchSize;++Ae){const ke=Ae*K,Ue=Ae*r[0];for(let Je=0;Je<s.inChannels;++Je)for(let st=0;st<s.outDepth;++st){const at=st*i-D;let ot=at;for(;ot<0;)ot+=m;const ct=Math.min(s.inDepth,C+at),pt=ke+st*ae;for(let ut=0;ut<s.outHeight;++ut){const gt=ut*c-M;let At=gt;for(;At<0;)At+=g;const kt=Math.min(s.inHeight,T+gt),Ot=pt+ut*le;for(let Dt=0;Dt<s.outWidth;++Dt){const Gt=Dt*d-R;let Pt=Gt;for(;Pt<0;)Pt+=y;const jt=Math.min(s.inWidth,k+Gt),dn=Ot+Dt*he;let Sn=$,yn=0,zn=0;for(let pr=ot;pr<ct;pr+=m){const Tr=Ue+pr*r[1];for(let as=At;as<kt;as+=g){const Ar=Tr+as*r[2];for(let br=Pt;br<jt;br+=y){const Pr=n[Ar+br*r[3]+Je];if("max"===a&&Pr>Sn?Sn=Pr:"avg"===a&&(yn+=Pr,zn++),isNaN(Sn))break}if(isNaN(Sn))break}if(isNaN(Sn))break}G[dn+Je]="avg"===a?yn/Math.max(zn,1):Sn}}}}return V}const ZV={kernelName:Ss,backendName:"cpu",kernelFunc:function KV(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;en(s,"avgPool");const{filterSize:a,strides:i,pad:c,dimRoundingMode:d}=r;q(ds(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const g=ma(s.shape,a,i,1,c,d);let y;if(1===g.filterWidth&&1===g.filterHeight&&_t(g.inShape,g.outShape))y=Su({inputs:{x:s},backend:e});else{const C=e.data.get(s.dataId).values,T=tn(s.shape),k=gR(C,0,s.dtype,T,g,"avg");y=e.makeTensorInfo(g.outShape,s.dtype,k.values)}return y}},XV={kernelName:Go,backendName:"cpu",kernelFunc:function jV(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:c,dimRoundingMode:d,dataFormat:m}=r;en(s,"avgPool3d");const g=Ri(s.shape,a,i,1,c,d,m),C=y3(e.data.get(s.dataId).values,0,s.dtype,tn(s.shape),g,"avg");return e.makeTensorInfo(C.shape,"float32",C.values)}},JV={kernelName:$d,backendName:"cpu",kernelFunc:function YV(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,{filterSize:i,strides:c,pad:d,dimRoundingMode:m}=r;en([s,a],"avgPool3DGrad");const g=Ri(a.shape,i,c,1,d,m),y=g.strideDepth,C=g.strideHeight,T=g.strideWidth,k=g.filterDepth,D=g.filterHeight,M=g.filterWidth,R=g.dilationDepth,$=g.dilationHeight,V=g.dilationWidth,G=g.effectiveFilterDepth,K=g.effectiveFilterHeight,ae=g.effectiveFilterWidth,le=G-1-g.padInfo.front,he=ae-1-g.padInfo.left,Ae=K-1-g.padInfo.top,ke=En(a.shape,"float32"),Ue=1/(k*D*M),Je=e.bufferSync(s);for(let st=0;st<g.batchSize;++st)for(let at=0;at<g.inChannels;++at)for(let ot=0;ot<g.inDepth;++ot)for(let ct=0;ct<g.inHeight;++ct)for(let pt=0;pt<g.inWidth;++pt){const ut=ot-le,gt=ct-Ae,At=pt-he;let kt=0;for(let Ot=0;Ot<G;Ot+=R){const Dt=(ut+Ot)/y;if(!(Dt<0||Dt>=g.outDepth||Math.floor(Dt)!==Dt))for(let Gt=0;Gt<K;Gt+=$){const Pt=(gt+Gt)/C;if(!(Pt<0||Pt>=g.outHeight||Math.floor(Pt)!==Pt))for(let jt=0;jt<ae;jt+=V){const dn=(At+jt)/T;dn<0||dn>=g.outWidth||Math.floor(dn)!==dn||(kt+=Je.get(st,Dt,Pt,dn,at))}}}ke.set(kt*Ue,st,ot,ct,pt,at)}return e.makeTensorInfo(ke.shape,ke.dtype,ke.values)}},eU={kernelName:Wo,backendName:"cpu",kernelFunc:function QV(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a;en([s,a],"avgPoolGrad");const{filterSize:c,strides:d,pad:m}=r,g=ma(i.shape,c,d,1,m),y=g.strideHeight,C=g.strideWidth,T=g.filterHeight,k=g.filterWidth,D=g.dilationHeight,M=g.dilationWidth,R=g.effectiveFilterHeight,$=g.effectiveFilterWidth,V=$-1-g.padInfo.left,G=R-1-g.padInfo.top,K=En(i.shape,"float32"),ae=1/(T*k),le=e.data.get(s.dataId).values,he=En(s.shape,"float32",le);for(let Ae=0;Ae<g.batchSize;++Ae)for(let ke=0;ke<g.inChannels;++ke)for(let Ue=0;Ue<g.inHeight;++Ue)for(let Je=0;Je<g.inWidth;++Je){const st=Ue-G,at=Je-V;let ot=0;for(let ct=0;ct<R;ct+=D){const pt=(st+ct)/y;if(!(pt<0||pt>=g.outHeight||Math.floor(pt)!==pt))for(let ut=0;ut<$;ut+=M){const gt=(at+ut)/C;gt<0||gt>=g.outWidth||Math.floor(gt)!==gt||(ot+=he.get(Ae,pt,gt,ke))}}K.set(ot*ae,Ae,Ue,Je,ke)}return e.makeTensorInfo(K.shape,K.dtype,K.values)}},nU={kernelName:If,backendName:"cpu",kernelFunc:function tU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,scale:a,offset:i,mean:c,variance:d}=t;q(c.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),q(null==i||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),q(null==a||c.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),en([s,c,d,a,i],"batchNorm");let{varianceEpsilon:m}=r;null==m&&(m=.001);const g=e.data.get(s.dataId).values,y=e.data.get(c.dataId).values,C=e.data.get(d.dataId).values,T=a?e.data.get(a.dataId).values:new Float32Array([1]),k=i?e.data.get(i.dataId).values:new Float32Array([0]),D=new Float32Array(g.length),M=k.length,R=T.length,$=C.length,V=y.length;let G=0,K=0,ae=0,le=0;for(let he=0;he<g.length;++he)D[he]=k[G++]+(g[he]-y[K++])*T[ae++]/Math.sqrt(C[le++]+m),G>=M&&(G=0),K>=V&&(K=0),ae>=R&&(ae=0),le>=$&&(le=0);return e.makeTensorInfo(s.shape,s.dtype,D)}},sU={kernelName:sn,backendName:"cpu",kernelFunc:function rU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,crops:i}=r;en([s],"batchToSpaceND");const c=a.reduce((R,$)=>R*$),d=qc(s.shape,a,c),m=Zh(d.length,a.length),g=jh(s.shape,a,c),y=zm(i,a.length),C=r0(g,i,a.length),T=_r({inputs:{x:s},backend:e,attrs:{shape:d}}),k=Ua({inputs:{x:T},backend:e,attrs:{perm:m}}),D=_r({inputs:{x:k},backend:e,attrs:{shape:g}}),M=vd({inputs:{x:D},backend:e,attrs:{begin:y,size:C}});return e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(k),e.disposeIntermediateTensorInfo(D),M}},iU={kernelName:ka,backendName:"cpu",kernelFunc:function aU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i}=r,m=fR(e.data.get(s.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,m)}},uU={kernelName:Ru,backendName:"cpu",kernelFunc:function oU(n){const{inputs:t,backend:e}=n,{s0:r,s1:s}=t,a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,c=An(Array.from(a),Array.from(i));return e.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},lU=dr(Ma,(n,t)=>n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n),cU={kernelName:Ma,backendName:"cpu",kernelFunc:lU},fU={kernelName:Hl,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,r=new Float32Array(ze(t.shape)),s=e.data.get(t.dataId),i=s.complexTensorInfos.imag,c=e.data.get(s.complexTensorInfos.real.dataId).values,d=e.data.get(i.dataId).values;for(let m=0;m<c.length;m++)r[m]=Math.hypot(c[m],d[m]);return e.makeOutput(r,t.shape,"float32")}};function Mg(n){const{inputs:t,backend:e}=n,{input:r}=t,s=e.data.get(r.dataId).complexTensorInfos.imag,a=e.data.get(s.dataId).values;return e.makeTensorInfo(s.shape,s.dtype,a)}const hU={kernelName:Xd,backendName:"cpu",kernelFunc:Mg};function Dg(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r,a=Mn(s,t[0].shape)[0];e0(t.map(D=>D.shape),a);let c=yi(t.map(D=>D.shape),a);if(0===ze(c))return e.makeTensorInfo(c,t[0].dtype,[]);const d=t.filter(D=>ze(D.shape)>0);if(1===d.length)return Su({inputs:{x:d[0]},backend:e});if("complex64"===d[0].dtype){const D=d.map(G=>md({inputs:{input:G},backend:e})),M=d.map(G=>Mg({inputs:{input:G},backend:e})),R=Dg({inputs:D,backend:e,attrs:{axis:a}}),$=Dg({inputs:M,backend:e,attrs:{axis:a}}),V=ii({inputs:{real:R,imag:$},backend:e});return D.forEach(G=>e.disposeIntermediateTensorInfo(G)),M.forEach(G=>e.disposeIntermediateTensorInfo(G)),e.disposeIntermediateTensorInfo(R),e.disposeIntermediateTensorInfo($),V}const m=d.map(D=>{const M=ze(D.shape.slice(a));return _r({inputs:{x:D},backend:e,attrs:{shape:[-1,M]}})}),g=m.map(D=>({vals:e.data.get(D.dataId).values,shape:D.shape}));c=yi(m.map(D=>D.shape),1);const C=yF(g,c,t[0].dtype,1===m[0].shape[0]),T=yi(d.map(D=>D.shape),a),k=e.makeTensorInfo(T,t[0].dtype,C);return m.forEach(D=>e.disposeIntermediateTensorInfo(D)),k}const dU={kernelName:Kl,backendName:"cpu",kernelFunc:Dg};function b3(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:c,dataFormat:d,dilations:m,dimRoundingMode:g}=r;en([s,a],"conv2d");const y=No(d),C=Rr(s.shape,a.shape,i,m,c,g,!1,y),T=C.filterHeight,k=C.filterWidth,D=C.dilationHeight,M=C.dilationWidth,R=C.padInfo.left,$=C.padInfo.top,V="channelsLast"===C.dataFormat,G=new Jr(C.outShape,s.dtype),K=tn(s.shape),ae=tn(a.shape),le=K[0],he=V?K[1]:K[2],Ae=V?K[2]:1,ke=V?1:K[1],Ue=G.strides[0],Je=V?G.strides[1]:G.strides[2],st=V?G.strides[2]:1,at=V?1:G.strides[1],ot=e.data.get(s.dataId).values,ct=e.data.get(a.dataId).values,pt=G.values;for(let ut=0;ut<C.batchSize;++ut){const gt=ut*le,At=ut*Ue;for(let kt=0;kt<C.outHeight;++kt){const Ot=At+kt*Je,Dt=kt*C.strideHeight-$;for(let Gt=0;Gt<T;++Gt){const Pt=Dt+Gt*D;if(Pt<0||Pt>=C.inHeight)continue;const jt=Gt*ae[0],dn=gt+Pt*he;for(let Sn=0;Sn<C.outWidth;++Sn){const yn=Ot+Sn*st,zn=Sn*C.strideWidth-R;for(let Un=0;Un<k;++Un){const pr=zn+Un*M;if(pr<0||pr>=C.inWidth)continue;const as=dn+pr*Ae;let Ar=jt+Un*ae[1];for(let br=0;br<C.inChannels;++br){const Kr=ot[as+br*ke];for(let Pr=0;Pr<C.outChannels;++Pr)pt[yn+Pr*at]+=Kr*ct[Ar+Pr];Ar+=C.outChannels}}}}}}return e.makeTensorInfo(G.shape,G.dtype,pt)}const pU={kernelName:Ou,backendName:"cpu",kernelFunc:b3},gU={kernelName:fi,backendName:"cpu",kernelFunc:function mU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:c,dataFormat:d,dimRoundingMode:m,filterShape:g}=r;en([s,a],"conv2dBackpropFilter");const y=No(d),C=Rr(s.shape,g,i,1,c,m,!1,y),{strideHeight:T,strideWidth:k,filterHeight:D,filterWidth:M}=C,R="channelsLast"===C.dataFormat,$=new Jr(C.filterShape,"float32"),V=C.padInfo.left,G=C.padInfo.top,K=e.data.get(s.dataId).values,ae=e.data.get(a.dataId).values,le=new Jr(s.shape,s.dtype,K),he=new Jr(a.shape,a.dtype,ae);for(let Ae=0;Ae<D;++Ae){const ke=Math.max(0,Math.ceil((G-Ae)/T)),Ue=Math.min(C.outHeight,(C.inHeight+G-Ae)/T);for(let Je=0;Je<M;++Je){const st=Math.max(0,Math.ceil((V-Je)/k)),at=Math.min(C.outWidth,(C.inWidth+V-Je)/k);for(let ot=0;ot<C.inChannels;++ot)for(let ct=0;ct<C.outChannels;++ct){let pt=0;for(let ut=0;ut<C.batchSize;++ut)for(let gt=ke;gt<Ue;++gt){const At=Ae+gt*T-G;for(let kt=st;kt<at;++kt){const Ot=Je+kt*k-V;pt+=R?le.get(ut,At,Ot,ot)*he.get(ut,gt,kt,ct):le.get(ut,ot,At,Ot)*he.get(ut,ct,gt,kt)}}$.set(pt,Ae,Je,ot,ct)}}}return e.makeTensorInfo($.shape,$.dtype,$.values)}},yU={kernelName:Zl,backendName:"cpu",kernelFunc:function vU(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{inputShape:i,strides:c,pad:d,dataFormat:m,dimRoundingMode:g}=r;en([s,a],"conv2dBackpropInput");const y=tn(a.shape),C=tn(s.shape);let T=No(m);const k=Rr(i,a.shape,c,1,d,g,!1,T),D=new Jr(k.inShape,"float32"),M=D.values,R=e.data.get(s.dataId).values,$=e.data.get(a.dataId).values,[V,G,K]=y,{batchSize:ae,filterHeight:le,filterWidth:he,inChannels:Ae,inHeight:ke,inWidth:Ue,outChannels:Je,outHeight:st,outWidth:at,strideHeight:ot,strideWidth:ct}=k;T=k.dataFormat;const pt=le-1-k.padInfo.top,ut=he-1-k.padInfo.left,gt="channelsLast"===T,At=D.strides[0],kt=gt?D.strides[1]:D.strides[2],Ot=gt?D.strides[2]:1,Dt=gt?1:D.strides[1],Gt=C[0],Pt=gt?C[1]:C[2],jt=gt?C[2]:1,dn=gt?1:C[1];for(let Sn=0;Sn<ae;++Sn)for(let yn=0;yn<Ae;++yn)for(let zn=0;zn<ke;++zn){const Un=zn-pt,pr=Math.max(0,Math.ceil(Un/ot)),Tr=Math.min(st,(le+Un)/ot);for(let as=0;as<Ue;++as){const Ar=as-ut,br=Math.max(0,Math.ceil(Ar/ct)),Kr=Math.min(at,(he+Ar)/ct);let Pr=0;for(let Qs=pr;Qs<Tr;++Qs){const uf=Qs*ot-Un;for(let Si=br;Si<Kr;++Si){const Bo=Gt*Sn+Pt*Qs+jt*Si,Fl=V*(le-1-uf)+G*(he-1-(Si*ct-Ar))+K*yn;for(let lf=0;lf<Je;++lf)Pr+=R[Bo+dn*lf]*$[Fl+lf]}}M[At*Sn+kt*zn+Ot*as+Dt*yn]=Pr}}return e.makeTensorInfo(D.shape,D.dtype,D.values)}},xU={kernelName:Fu,backendName:"cpu",kernelFunc:function bU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:c,dilations:d}=r;en([s,a],"conv3d");const m=wo(s.shape,a.shape,i,d,c),{filterDepth:g,filterHeight:y,filterWidth:C,dilationDepth:T,dilationHeight:k,dilationWidth:D,padInfo:M}=m,R=M.front,$=M.left,V=M.top,G=new Jr(m.outShape,s.dtype),K=e.data.get(s.dataId).values,ae=e.data.get(a.dataId).values,le=G.values,he=tn(s.shape),Ae=tn(a.shape);for(let ke=0;ke<m.batchSize;++ke){const Ue=ke*he[0],Je=ke*G.strides[0];for(let st=0;st<m.outDepth;++st){const at=Je+st*G.strides[1],ot=st*m.strideDepth-R;for(let ct=0;ct<g;++ct){const pt=ot+ct*T;if(pt<0||pt>=m.inDepth)continue;const ut=ct*Ae[0],gt=Ue+pt*he[1];for(let At=0;At<m.outHeight;++At){const kt=at+At*G.strides[2],Ot=At*m.strideHeight-V;for(let Dt=0;Dt<y;++Dt){const Gt=Ot+Dt*k;if(Gt<0||Gt>=m.inHeight)continue;const Pt=ut+Dt*Ae[1],jt=gt+Gt*he[2];for(let dn=0;dn<m.outWidth;++dn){const Sn=kt+dn*m.outChannels,yn=dn*m.strideWidth-$;for(let zn=0;zn<C;++zn){const Un=yn+zn*D;if(Un<0||Un>=m.inWidth)continue;const Tr=jt+Un*m.inChannels;let as=Pt+zn*Ae[2];for(let Ar=0;Ar<m.inChannels;++Ar){const br=K[Tr+Ar];for(let Kr=0;Kr<m.outChannels;++Kr)le[Sn+Kr]+=br*ae[as+Kr];as+=m.outChannels}}}}}}}}return e.makeTensorInfo(G.shape,G.dtype,G.values)}},NU={kernelName:Od,backendName:"cpu",kernelFunc:function wU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:c,filterShape:d}=r;en([s,a],"conv3dBackpropFilterV2");const m=tn(s.shape),g=tn(a.shape),y=wo(s.shape,d,i,1,c),C=y.strideDepth,T=y.strideHeight,k=y.strideWidth,D=y.filterDepth,M=y.filterHeight,R=y.filterWidth,$=new Jr(y.filterShape,"float32"),V=$.values,[G,K,ae,le]=$.strides,he=e.data.get(a.dataId).values,[Ae,ke,Ue,Je]=g,st=e.data.get(s.dataId).values,[at,ot,ct,pt]=m,ut=y.padInfo.front,gt=y.padInfo.left,At=y.padInfo.top;for(let kt=0;kt<D;++kt){const Ot=Math.max(0,Math.ceil((ut-kt)/C)),Dt=Math.min(y.outDepth,(y.inDepth+ut-kt)/C),Gt=kt*G;for(let Pt=0;Pt<M;++Pt){const jt=Math.max(0,Math.ceil((At-Pt)/T)),dn=Math.min(y.outHeight,(y.inHeight+At-Pt)/T),Sn=Pt*K+Gt;for(let yn=0;yn<R;++yn){const zn=Math.max(0,Math.ceil((gt-yn)/k)),Un=Math.min(y.outWidth,(y.inWidth+gt-yn)/k),pr=yn*ae+Sn;for(let Tr=0;Tr<y.inChannels;++Tr){const as=Tr*le+pr;for(let Ar=0;Ar<y.outChannels;++Ar){let br=0;for(let Kr=0;Kr<y.batchSize;++Kr){const Pr=Kr*at,Ol=Kr*Ae;for(let Qs=Ot;Qs<Dt;++Qs){const Si=(kt+Qs*C-ut)*ot+Pr,Id=Qs*ke+Ol;for(let Bo=jt;Bo<dn;++Bo){const lf=(Pt+Bo*T-At)*ct+Si,cf=Bo*Ue+Id;for(let ff=zn;ff<Un;++ff)br+=st[(yn+ff*k-gt)*pt+lf+Tr]*he[ff*Je+cf+Ar]}}}V[as+Ar]=br}}}}}return e.makeTensorInfo($.shape,$.dtype,$.values)}},CU={kernelName:Fd,backendName:"cpu",kernelFunc:function SU(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{pad:i,strides:c,inputShape:d}=r;en([s],"conv3dBackpropInputV2");const m=tn(s.shape),g=tn(a.shape),y=wo(d,a.shape,c,1,i),C=new Jr(y.inShape,"float32"),T=C.values,[k,D,M,R]=C.strides,$=e.data.get(s.dataId).values,[V,G,K,ae]=m,le=e.data.get(a.dataId).values,[he,Ae,ke,Ue]=g,{batchSize:Je,filterDepth:st,filterHeight:at,filterWidth:ot,inChannels:ct,inDepth:pt,inHeight:ut,inWidth:gt,outChannels:At,outDepth:kt,outHeight:Ot,outWidth:Dt,strideDepth:Gt,strideHeight:Pt,strideWidth:jt}=y,dn=st-1-y.padInfo.front,Sn=at-1-y.padInfo.top,yn=ot-1-y.padInfo.left;for(let zn=0;zn<Je;++zn)for(let Un=0;Un<ct;++Un)for(let pr=0;pr<pt;++pr){const Tr=pr-dn,as=Math.max(0,Math.ceil(Tr/Gt)),Ar=Math.min(kt,(st+Tr)/Gt);for(let br=0;br<ut;++br){const Kr=br-Sn,Pr=Math.max(0,Math.ceil(Kr/Pt)),Ol=Math.min(Ot,(at+Kr)/Pt);for(let Qs=0;Qs<gt;++Qs){const uf=Qs-yn,Si=Math.max(0,Math.ceil(uf/jt)),Id=Math.min(Dt,(ot+uf)/jt);let Bo=0;for(let Fl=as;Fl<Ar;++Fl){const lf=Fl*Gt-Tr;for(let cf=Pr;cf<Ol;++cf){const ff=cf*Pt-Kr;for(let Kb=Si;Kb<Id;++Kb){const qR=V*zn+G*Fl+K*cf+ae*Kb,BY=he*(st-1-lf)+Ae*(at-1-ff)+ke*(ot-1-(Kb*jt-uf))+Ue*Un;for(let PI=0;PI<At;++PI)Bo+=$[qR+PI]*le[BY+PI]}}}T[k*zn+D*pr+M*br+R*Qs+Un]=Bo}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}},IU=dr(hi,n=>Math.cos(n)),_U={kernelName:hi,backendName:"cpu",kernelFunc:IU},TU=dr(oo,n=>Math.cosh(n)),AU={kernelName:oo,backendName:"cpu",kernelFunc:TU},kU={kernelName:bf,backendName:"cpu",kernelFunc:function EU(n){const{inputs:t,backend:e,attrs:r}=n,{image:s,boxes:a,boxInd:i}=t,{cropSize:c,method:d,extrapolationValue:m}=r,[g,y,C,T]=s.shape,k=a.shape[0],[D,M]=c,R=En([k,D,M,T],"float32"),$=e.data.get(a.dataId).values,V=e.data.get(i.dataId).values,G=e.data.get(s.dataId).values,K=tn(s.shape),ae=tn(R.shape);for(let le=0;le<k;le++){const he=4*le,Ae=$[he],ke=$[he+1],Ue=$[he+2],Je=$[he+3],st=V[le];if(st>=g)continue;const at=D>1?(Ue-Ae)*(y-1)/(D-1):0,ot=M>1?(Je-ke)*(C-1)/(M-1):0;for(let ct=0;ct<D;ct++){const pt=D>1?Ae*(y-1)+ct*at:.5*(Ae+Ue)*(y-1);if(pt<0||pt>y-1)for(let ut=0;ut<M;ut++)for(let gt=0;gt<T;gt++)R.values[gt+ut*ae[2]+ct*ae[1]+le*ae[0]]=m;else if("bilinear"===d){const ut=Math.floor(pt),gt=Math.ceil(pt),At=pt-ut;for(let kt=0;kt<M;kt++){const Ot=M>1?ke*(C-1)+kt*ot:.5*(ke+Je)*(C-1);if(Ot<0||Ot>C-1){for(let jt=0;jt<T;jt++)R.values[jt+kt*ae[2]+ct*ae[1]+le*ae[0]]=m;continue}const Dt=Math.floor(Ot),Gt=Math.ceil(Ot),Pt=Ot-Dt;for(let jt=0;jt<T;jt++){let dn=jt+Dt*K[2]+ut*K[1]+st*K[0];const Sn=G[dn];dn=jt+Gt*K[2]+ut*K[1]+st*K[0];const yn=G[dn];dn=jt+Dt*K[2]+gt*K[1]+st*K[0];const zn=G[dn];dn=jt+Gt*K[2]+gt*K[1]+st*K[0];const Un=G[dn],pr=Sn+(yn-Sn)*Pt;dn=jt+kt*ae[2]+ct*ae[1]+le*ae[0],R.values[dn]=pr+(zn+(Un-zn)*Pt-pr)*At}}}else for(let ut=0;ut<M;++ut){const gt=M>1?ke*(C-1)+ut*ot:.5*(ke+Je)*(C-1);if(gt<0||gt>C-1){for(let Ot=0;Ot<T;Ot++)R.values[Ot+ut*ae[2]+ct*ae[1]+le*ae[0]]=m;continue}const At=Math.round(gt),kt=Math.round(pt);for(let Ot=0;Ot<T;Ot++)R.values[Ot+ut*ae[2]+ct*ae[1]+le*ae[0]]=G[Ot+At*K[2]+kt*K[1]+st*K[0]]}}}return e.makeTensorInfo(R.shape,R.dtype,R.values)}},DU={kernelName:yf,backendName:"cpu",kernelFunc:function MU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:c}=r;en(s,"cumprod");const d=Or([a],s.shape.length);let m=s;null!=d&&(m=Ua({inputs:{x:s},backend:e,attrs:{perm:d}}));const g=Br(1,s.shape.length)[0];if(g!==m.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${m.shape.length-1} but got axis=${g}`);const y=ra(m.dtype,"int32"),C=Vo(ze(m.shape),y),T=e.data.get(m.dataId).values,k=m.shape[m.shape.length-1],D=c?(R,$)=>R+k-$-1:(R,$)=>R+$;for(let R=0;R<T.length;R+=k)for(let $=0;$<k;$++){const V=D(R,$);if(0===$)C[V]=i?1:T[V];else{const G=D(R,$-1);C[V]=i?T[G]*C[G]:T[V]*C[G]}}const M=e.makeTensorInfo(m.shape,y,C);if(null!=d){const $=Ua({inputs:{x:M},backend:e,attrs:{perm:fu(d)}});return e.disposeIntermediateTensorInfo(M),e.disposeIntermediateTensorInfo(m),$}return M}},$U={kernelName:Lu,backendName:"cpu",kernelFunc:function RU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:c}=r;en(s,"cumsum");const d=Or([a],s.shape.length);let m=s;null!=d&&(m=Ua({inputs:{x:s},backend:e,attrs:{perm:d}}));const g=Br(1,s.shape.length)[0];if(g!==m.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${m.shape.length-1} but got axis=${g}`);const y=ra(m.dtype,"int32"),C=zr(ze(m.shape),y),T=e.data.get(m.dataId).values,k=m.shape[m.shape.length-1],D=c?(R,$)=>R+k-$-1:(R,$)=>R+$;for(let R=0;R<T.length;R+=k)for(let $=0;$<k;$++){const V=D(R,$);if(0===$)C[V]=i?0:T[V];else{const G=D(R,$-1);C[V]=i?T[G]+C[G]:T[V]+C[G]}}const M=e.makeTensorInfo(m.shape,y,C);if(null!=d){const $=Ua({inputs:{x:M},backend:e,attrs:{perm:fu(d)}});return e.disposeIntermediateTensorInfo(M),e.disposeIntermediateTensorInfo(m),$}return M}},FU={kernelName:Ld,backendName:"cpu",kernelFunc:function OU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i,binaryOutput:c}=r;if(1===s.shape.length){const g=fR(e.data.get(s.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,g)}if(2===s.shape.length){const g=gF(e.bufferSync(s),e.bufferSync(a),i,c);return e.makeTensorInfo(g.shape,a.dtype,g.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},BU={kernelName:Bd,backendName:"cpu",kernelFunc:function LU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockSize:a,dataFormat:i}=r;q("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const c=s.shape[0],d=s.shape[1],m=s.shape[2],g=s.shape[3],y=d*a,C=m*a,T=g/(a*a),k=e.data.get(s.dataId).values,D=new Float32Array(c*y*C*T);let M=0;for(let R=0;R<c;++R)for(let $=0;$<y;++$){const V=Math.floor($/a),G=$%a;for(let K=0;K<C;++K){const ae=Math.floor(K/a),he=(G*a+K%a)*T;for(let Ae=0;Ae<T;++Ae)D[M++]=k[Ae+he+g*(ae+m*(V+d*R))]}}return e.makeTensorInfo([c,y,C,T],s.dtype,D)}};function x3(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:c,dilations:d,dimRoundingMode:m}=r;en([s,a],"depthwiseConv2DNative");const g=tn(s.shape),y=tn(a.shape);let C=d;null==C&&(C=[1,1]),q(ds(i,C),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${C}'`);const T=Rr(s.shape,a.shape,i,C,c,m,!0),{filterHeight:k,filterWidth:D,dilationHeight:M,dilationWidth:R,padInfo:$}=T,V=$.left,G=$.top,K=T.outChannels/T.inChannels,ae=new Jr(T.outShape,s.dtype),le=e.data.get(s.dataId).values,he=e.data.get(a.dataId).values,Ae=ae.values;for(let ke=0;ke<T.batchSize;++ke){const Ue=ke*g[0],Je=ke*ae.strides[0];for(let st=0;st<T.outHeight;++st){const at=Je+st*ae.strides[1],ot=st*T.strideHeight-G;for(let ct=0;ct<k;++ct){const pt=ot+ct*M;if(pt<0||pt>=T.inHeight)continue;const ut=ct*y[0],gt=Ue+pt*g[1];for(let At=0;At<T.outWidth;++At){const kt=at+At*ae.strides[2],Ot=At*T.strideWidth-V;for(let Dt=0;Dt<D;++Dt){const Gt=Ot+Dt*R;if(Gt<0||Gt>=T.inWidth)continue;const jt=gt+Gt*T.inChannels;let dn=kt,Sn=ut+Dt*y[1];for(let yn=0;yn<T.inChannels;++yn){const zn=le[jt+yn];for(let Un=0;Un<K;++Un)Ae[dn+Un]+=zn*he[Sn+Un];dn+=K,Sn+=K}}}}}}return e.makeTensorInfo(ae.shape,ae.dtype,ae.values)}const PU={kernelName:xf,backendName:"cpu",kernelFunc:x3},VU={kernelName:Pd,backendName:"cpu",kernelFunc:function zU(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,dilations:c,pad:d,dimRoundingMode:m,filterShape:g}=r;en([s,a],"depthwiseConv2dNativeBackpropFilter");const y=Rr(s.shape,g,i,c,d,m,!0),{strideHeight:C,strideWidth:T,filterHeight:k,filterWidth:D}=y,M=new Jr(y.filterShape,"float32"),R=y.padInfo.left,$=y.padInfo.top,V=y.outChannels/y.inChannels,G=e.data.get(s.dataId).values,K=new Jr(s.shape,s.dtype,G),ae=e.data.get(a.dataId).values,le=new Jr(a.shape,a.dtype,ae);for(let he=0;he<k;++he){const Ae=Math.max(0,Math.ceil(($-he)/C)),ke=Math.min(y.outHeight,(y.inHeight+$-he)/C);for(let Ue=0;Ue<D;++Ue){const Je=Math.max(0,Math.ceil((R-Ue)/T)),st=Math.min(y.outWidth,(y.inWidth+R-Ue)/T);for(let at=0;at<y.outChannels;++at){const ot=Math.trunc(at/V),ct=at%V;let pt=0;for(let ut=0;ut<y.batchSize;++ut)for(let gt=Ae;gt<ke;++gt){const At=he+gt*C-$;for(let kt=Je;kt<st;++kt)pt+=K.get(ut,At,Ue+kt*T-R,ot)*le.get(ut,gt,kt,at)}M.set(pt,he,Ue,ot,ct)}}}return e.makeTensorInfo(M.shape,M.dtype,M.values)}},WU={kernelName:zd,backendName:"cpu",kernelFunc:function UU(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{strides:i,dilations:c,pad:d,dimRoundingMode:m,inputShape:g}=r;en([s,a],"depthwiseConv2DNativeBackpropInput");const y=tn(s.shape),C=tn(a.shape),T=Rr(g,a.shape,i,c,d,m,!0),k=new Jr(T.inShape,"float32"),D=k.values,[M,R,$]=k.strides,V=e.data.get(s.dataId).values,[G,K,ae]=y,le=e.data.get(a.dataId).values,[he,Ae,ke]=C,{batchSize:Ue,filterHeight:Je,filterWidth:st,inChannels:at,inHeight:ot,inWidth:ct,outChannels:pt,outHeight:ut,outWidth:gt,strideHeight:At,strideWidth:kt}=T,Ot=Je-1-T.padInfo.top,Dt=st-1-T.padInfo.left,Gt=pt/at;for(let Pt=0;Pt<Ue;++Pt)for(let jt=0;jt<at;++jt)for(let dn=0;dn<ot;++dn){const Sn=dn-Ot,yn=Math.max(0,Math.ceil(Sn/At)),zn=Math.min(ut,(Je+Sn)/At);for(let Un=0;Un<ct;++Un){const pr=Un-Dt,Tr=Math.max(0,Math.ceil(pr/kt)),as=Math.min(gt,(st+pr)/kt);let Ar=0;for(let br=yn;br<zn;++br){const Kr=br*At-Sn;for(let Pr=Tr;Pr<as;++Pr){const Qs=G*Pt+K*br+ae*Pr,uf=he*(Je-1-Kr)+Ae*(st-1-(Pr*kt-pr))+ke*jt;for(let Si=0;Si<Gt;++Si)Ar+=V[Qs+(jt*Gt+Si)]*le[uf+Si]}}D[M*Pt+R*dn+$*Un+jt]=Ar}}return e.makeTensorInfo(k.shape,k.dtype,k.values)}},qU={kernelName:Vd,backendName:"cpu",kernelFunc:function GU(n){const{inputs:t,backend:e}=n,{x:r}=t,s=ze(r.shape),a=e.data.get(r.dataId).values,i=En([s,s],r.dtype),c=i.values;for(let m=0;m<a.length;m++)c[m*s+m]=a[m];const d=[...r.shape,...r.shape];return e.makeTensorInfo(d,i.dtype,i.values)}},HU={kernelName:wf,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,filter:s}=n,{strides:a,pad:i,dilations:c}=e,d=t,m=d.data.get(r.dataId).values,g=r.shape.length,y=d.data.get(s.dataId).values,C=s.shape.length,{batchSize:T,inHeight:k,inWidth:D,inChannels:M,outHeight:R,outWidth:$,padInfo:V,strideHeight:G,strideWidth:K,filterHeight:ae,filterWidth:le,dilationHeight:he,dilationWidth:Ae,outShape:ke}=Ch(r.shape,s.shape,a,i,"NHWC",c),Ue=ze(ke),Je=ke.length,st=Wn(r.dtype,Ue);for(let ot=0;ot<T;++ot)for(let ct=0;ct<R;++ct){const pt=ct*G-V.top;for(let ut=0;ut<$;++ut){const gt=ut*K-V.left;for(let At=0;At<M;++At){let kt=Number.MIN_SAFE_INTEGER;for(let Dt=0;Dt<ae;++Dt){const Gt=pt+Dt*he;if(Gt>=0&&Gt<k)for(let Pt=0;Pt<le;++Pt){const jt=gt+Pt*Ae;if(jt>=0&&jt<D){const dn=pa([ot,Gt,jt,At],g,tn(r.shape)),Sn=pa([Dt,Pt,At],C,tn(s.shape)),yn=m[dn]+y[Sn];yn>kt&&(kt=yn)}}}st[pa([ot,ct,ut,At],Je,tn(ke))]=kt}}}return{dataId:d.write(is(st,r.dtype),ke,r.dtype),shape:ke,dtype:r.dtype}}},KU={kernelName:Wd,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,filter:s,dy:a}=n,{strides:i,pad:c,dilations:d}=e,m=t,g=Xr(r.shape,m.data.get(r.dataId).values),y=Xr(s.shape,m.data.get(s.dataId).values),{batchSize:C,inHeight:T,inWidth:k,inChannels:D,outHeight:M,outWidth:R,padInfo:$,strideHeight:V,strideWidth:G,filterHeight:K,filterWidth:ae,dilationHeight:le,dilationWidth:he,outShape:Ae}=Ch(r.shape,s.shape,i,c,"NHWC",d);q(a.rank===Ae.length,()=>`Error in ${Wd}, dy must have the same rank as output ${Ae.length}, but got ${a.rank}`);const ke=Xr(Ae,m.data.get(a.dataId).values),Ue=Ed(s.shape,s.dtype);for(let st=0;st<C;++st)for(let at=0;at<M;++at){const ot=at*V-$.top;for(let ct=0;ct<R;++ct){const pt=ct*G-$.left;for(let ut=0;ut<D;++ut){let gt=Number.MIN_SAFE_INTEGER,At=0,kt=0;for(let Ot=0;Ot<K;++Ot){const Dt=ot+Ot*le;if(Dt>=0&&Dt<T)for(let Gt=0;Gt<ae;++Gt){const Pt=pt+Gt*he;if(Pt>=0&&Pt<k){const jt=g[st][Dt][Pt][ut]+y[Ot][Gt][ut];jt>gt&&(gt=jt,At=Ot,kt=Gt)}}}Ue[At][kt][ut]+=ke[st][at][ct][ut]}}}return{dataId:m.write(is(Ue,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},ZU={kernelName:Ud,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,filter:s,dy:a}=n,{strides:i,pad:c,dilations:d}=e,m=t,g=Xr(r.shape,m.data.get(r.dataId).values),y=Xr(s.shape,m.data.get(s.dataId).values),{batchSize:C,inHeight:T,inWidth:k,inChannels:D,outHeight:M,outWidth:R,padInfo:$,strideHeight:V,strideWidth:G,filterHeight:K,filterWidth:ae,dilationHeight:le,dilationWidth:he,outShape:Ae}=Ch(r.shape,s.shape,i,c,"NHWC",d);q(a.rank===Ae.length,()=>`Error in ${Ud}, dy must have the same rank as output ${Ae.length}, but got ${a.rank}`);const ke=Xr(Ae,m.data.get(a.dataId).values),Ue=Ed(r.shape,r.dtype);for(let st=0;st<C;++st)for(let at=0;at<M;++at){const ot=at*V-$.top;for(let ct=0;ct<R;++ct){const pt=ct*G-$.left;for(let ut=0;ut<D;++ut){let gt=Number.MIN_SAFE_INTEGER,At=ot<0?0:ot,kt=pt<0?0:pt;for(let Ot=0;Ot<K;++Ot){const Dt=ot+Ot*le;if(Dt>=0&&Dt<T)for(let Gt=0;Gt<ae;++Gt){const Pt=pt+Gt*he;if(Pt>=0&&Pt<k){const jt=g[st][Dt][Pt][ut]+y[Ot][Gt][ut];jt>gt&&(gt=jt,At=Dt,kt=Pt)}}}Ue[st][At][kt][ut]+=ke[st][at][ct][ut]}}}return{dataId:m.write(is(Ue,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Rb(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;let c;en(s,"sum"),c="bool"===s.dtype?tf({inputs:{x:s},backend:e,attrs:{dtype:"int32"}}):Su({inputs:{x:s},backend:e});const d=c.shape.length,m=Mn(a,c.shape),g=Or(m,d);let y=m,C=c;null!=g&&(C=Ua({inputs:{x:c},backend:e,attrs:{perm:g}}),y=Br(y.length,d)),gs("sum",y,C.shape.length);const[T,k]=ms(C.shape,y);let M=pI(e,T,ra(C.dtype,"int32"));const R=ze(k),$=e.data.get(M.dataId).values,V=e.data.get(C.dataId).values;for(let G=0;G<$.length;++G){const K=G*R;let ae=0;for(let le=0;le<R;++le)ae+=V[K+le];$[G]=ae}if(i){const K=M;M=_r({inputs:{x:M},backend:e,attrs:{shape:Wr(M.shape,m)}}),e.disposeIntermediateTensorInfo(K)}return e.disposeIntermediateTensorInfo(c),null!=g&&e.disposeIntermediateTensorInfo(C),M}const jU={kernelName:jf,backendName:"cpu",kernelFunc:Rb},YU={kernelName:Gd,backendName:"cpu",kernelFunc:function XU(n){const{inputs:t,backend:e,attrs:r}=n,{equation:s}=r,a=t,{allDims:i,summedDims:c,idDims:d}=Wm(s,a.length);h0(i.length,d,a);const{path:m,steps:g}=Gm(c,d),y=g.length;let C=null,T=i.length;const k=[];for(let D=0;D<y;++D){for(const M of g[D]){const{permutationIndices:R,expandDims:$}=f0(T,d[M]);let V;d0(R)?V=a[M]:(V=Ua({inputs:{x:a[M]},backend:e,attrs:{perm:R}}),k.push(V));const G=V.shape.slice();for(let K=0;K<$.length;++K)G.splice($[K],0,1);_t(V.shape,G)||(V=_r({inputs:{x:V},backend:e,attrs:{shape:G}}),k.push(V)),null===C?C=V:(C=mI({inputs:{a:V,b:C},backend:e}),k.push(C))}D<y-1&&(m[D]>=0&&(C=Rb({inputs:{x:C},backend:e,attrs:{axis:m[D]-(i.length-T),keepDims:!1}}),k.push(C)),T--)}for(const D of k)D!==C&&e.disposeIntermediateTensorInfo(D);return C}},QU={kernelName:qd,backendName:"cpu",kernelFunc:function JU(n){const{inputs:t,backend:e}=n,{dy:r,y:s}=t;en([r,s],"eluGrad");const a=new Float32Array(ze(s.shape)),i=e.data.get(s.dataId).values,c=e.data.get(r.dataId).values;for(let d=0;d<i.length;++d){const m=i[d];a[d]=m>=0?c[d]:c[d]*(m+1)}return e.makeTensorInfo(s.shape,"float32",a)}},e5=s0,t5=a0,n5=Xh,r5=i0,s5=o0,a5=u0,i5=dr(Yl,n=>{const t=Math.sign(n),e=Math.abs(n),r=1/(1+e5*e);return t*(1-((((a5*r+s5)*r+r5)*r+n5)*r+t5)*r*Math.exp(-e*e))}),o5={kernelName:Yl,backendName:"cpu",kernelFunc:i5};function yI(n){const{inputs:t,backend:e,attrs:r}=n,{input:s}=t,{dim:a}=r,i=s.shape.length,c=s.shape.slice();let d=a;return a<0&&(q(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),d=i+a+1),c.splice(d,0,1),_r({inputs:{x:s},backend:e,attrs:{shape:c}})}const u5={kernelName:Sf,backendName:"cpu",kernelFunc:yI},l5=ws((n,t)=>n/t),vR=Us(jl,l5),yR={kernelName:jl,backendName:"cpu",kernelFunc:vR};function w3(n,t,e){const r=n.shape,s=r[0],a=r[1],i=e.data.get(n.dataId),c=i.complexTensorInfos.real,d=i.complexTensorInfos.imag,m=[s,a],g=ze(m),y=jr("float32",g),C=jr("float32",g);for(let M=0;M<s;M++){const R=vd({inputs:{x:c},backend:e,attrs:{begin:[M,0],size:[1,a]}}),$=vd({inputs:{x:d},backend:e,attrs:{begin:[M,0],size:[1,a]}}),V=ii({inputs:{real:R,imag:$},backend:e}),{real:G,imag:K}=c5(V,t,e),ae=Eo(G,K);for(let le=0;le<a;le++){const he=l0(ae,le);y[M*a+le]=he.real,C[M*a+le]=he.imag}e.disposeIntermediateTensorInfo(R),e.disposeIntermediateTensorInfo($),e.disposeIntermediateTensorInfo(V)}const T=e.makeTensorInfo(m,"float32",y),k=e.makeTensorInfo(m,"float32",C),D=ii({inputs:{real:T,imag:k},backend:e});return e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(k),D}function c5(n,t,e){const r=ze(n.shape),s=e.data.get(n.dataId),a=e.data.get(s.complexTensorInfos.real.dataId).values,i=e.data.get(s.complexTensorInfos.imag.dataId).values;if(function f5(n){return 0==(n&n-1)}(r)){const c=bR(a,i,r,t,e),d=[n.shape[0],n.shape[1]];if(t){const m=e.makeTensorInfo(d,"float32",c.real),g=e.makeTensorInfo(d,"float32",c.imag),y=e.makeTensorInfo([],"float32",Qo(r,"float32")),C=Su({inputs:{x:y},backend:e}),T=yR.kernelFunc({inputs:{a:m,b:y},backend:e}),k=yR.kernelFunc({inputs:{a:g,b:C},backend:e}),D=e.data.get(T.dataId).values,M=e.data.get(k.dataId).values;return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(k),{real:D,imag:M}}return c}{const d=function h5(n,t,e){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let c=0;c<t;c++){const d=$N(s*c,t,e),m=l0(n,c);a+=m.real*d.real-m.imag*d.imag,i+=m.real*d.imag+m.imag*d.real}e&&(a/=t,i/=t),DN(r,a,i,s)}return r}(Eo(a,i),r,t);return EN(d)}}function bR(n,t,e,r,s){if(1===e)return{real:n,imag:t};const a=Eo(n,t),i=e/2,c=kN(a),d=c.real,m=c.imag,g=[d.length],y=s.makeTensorInfo(g,"float32",d),C=s.makeTensorInfo(g,"float32",m),T=ii({inputs:{real:y,imag:C},backend:s}),k=MN(a),D=k.real,M=k.imag,R=[D.length],$=s.makeTensorInfo(R,"float32",D),V=s.makeTensorInfo(R,"float32",M),G=ii({inputs:{real:$,imag:V},backend:s}),K=bR(d,m,i,r,s),ae=K.real,le=K.imag,he=[ae.length],Ae=s.makeTensorInfo(he,"float32",ae),ke=s.makeTensorInfo(he,"float32",le),Ue=ii({inputs:{real:Ae,imag:ke},backend:s}),Je=bR(D,M,i,r,s),st=Je.real,at=Je.imag,ot=[st.length],ct=s.makeTensorInfo(ot,"float32",st),pt=s.makeTensorInfo(ot,"float32",at),ut=ii({inputs:{real:ct,imag:pt},backend:s}),gt=RN(e,r),At=[gt.real.length],kt=s.makeTensorInfo(At,"float32",gt.real),Ot=s.makeTensorInfo(At,"float32",gt.imag),Dt=ii({inputs:{real:kt,imag:Ot},backend:s}),Gt=mI({inputs:{a:Dt,b:ut},backend:s}),Pt=kg({inputs:{a:Ue,b:Gt},backend:s}),jt=mR({inputs:{a:Ue,b:Gt},backend:s}),dn=md({inputs:{input:Pt},backend:s}),Sn=md({inputs:{input:jt},backend:s}),yn=Mg({inputs:{input:Pt},backend:s}),zn=Mg({inputs:{input:jt},backend:s}),Un=Dg({inputs:[dn,Sn],backend:s,attrs:{axis:0}}),pr=Dg({inputs:[yn,zn],backend:s,attrs:{axis:0}}),Tr=s.data.get(Un.dataId).values,as=s.data.get(pr.dataId).values;return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(Ae),s.disposeIntermediateTensorInfo(ke),s.disposeIntermediateTensorInfo(Ue),s.disposeIntermediateTensorInfo(ct),s.disposeIntermediateTensorInfo(pt),s.disposeIntermediateTensorInfo(ut),s.disposeIntermediateTensorInfo(kt),s.disposeIntermediateTensorInfo(Ot),s.disposeIntermediateTensorInfo(Dt),s.disposeIntermediateTensorInfo(Gt),s.disposeIntermediateTensorInfo(Pt),s.disposeIntermediateTensorInfo(jt),s.disposeIntermediateTensorInfo(dn),s.disposeIntermediateTensorInfo(yn),s.disposeIntermediateTensorInfo(Sn),s.disposeIntermediateTensorInfo(zn),s.disposeIntermediateTensorInfo(Un),s.disposeIntermediateTensorInfo(pr),{real:Tr,imag:as}}const p5={kernelName:Hd,backendName:"cpu",kernelFunc:function d5(n){const{inputs:t,backend:e}=n,{input:r}=t,s=ze(r.shape),a=r.shape[r.shape.length-1],c=_r({inputs:{x:r},backend:e,attrs:{shape:[s/a,a]}}),d=w3(c,!1,e),m=_r({inputs:{x:d},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),m}};function xR(n){const{backend:t,attrs:e}=n,{shape:r,value:s,dtype:a}=e,i=a||ao(s),c=Wn(i,ze(r));return function g5(n,t,e){n.fill(t)}(c,s),t.makeTensorInfo(r,i,c)}const m5={kernelName:Kd,backendName:"cpu",kernelFunc:xR},v5={kernelName:Cf,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{image:r}=n,s=e,a=jr(r.dtype,ze(r.shape)),[i,c,d,m]=r.shape,g=s.data.get(r.dataId).values;for(let C=0;C<i;C++){const T=C*d*c*m;for(let k=0;k<c;k++){const D=k*(d*m);for(let M=0;M<d;M++){const R=M*m;for(let $=0;$<m;$++){const V=Math.round(d-M-1),G=T+D+R+$;let K=g[G];V>=0&&V<d&&(K=g[T+D+V*m+$]),a[G]=K}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},b5={kernelName:nh,backendName:"cpu",kernelFunc:function y5(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:c}=t,{strides:d,pad:m,dataFormat:g,dilations:y,dimRoundingMode:C,activation:T,leakyreluAlpha:k}=r;let D=b3({inputs:{x:s,filter:a},backend:e,attrs:{strides:d,pad:m,dataFormat:g,dilations:y,dimRoundingMode:C}});if(i){const M=D;if("NCHW"===g&&1===i.shape.length&&1!==i.shape[0]){const R=_r({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});D=kg({inputs:{a:D,b:R},backend:e}),e.disposeIntermediateTensorInfo(R)}else D=kg({inputs:{a:D,b:i},backend:e});e.disposeIntermediateTensorInfo(M)}if(T){const M=D;if("NCHW"===g&&"prelu"===T&&1===c.shape.length&&1!==c.shape[0]){const R=_r({inputs:{x:c},backend:e,attrs:{shape:[c.shape[0],1,1]}});D=vI(e,D,T,R,k),e.disposeIntermediateTensorInfo(R)}else D=vI(e,D,T,c,k);e.disposeIntermediateTensorInfo(M)}return D}},w5={kernelName:rh,backendName:"cpu",kernelFunc:function x5(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:c}=t,{strides:d,pad:m,dataFormat:g,dilations:y,dimRoundingMode:C,activation:T,leakyreluAlpha:k}=r;let D=x3({inputs:{x:s,filter:a},backend:e,attrs:{strides:d,pad:m,dataFormat:g,dilations:y,dimRoundingMode:C}});if(i){const M=D;D=kg({inputs:{a:D,b:i},backend:e}),e.disposeIntermediateTensorInfo(M)}if(T){const M=D;D=vI(e,D,T,c,k),e.disposeIntermediateTensorInfo(M)}return D}},S5={kernelName:Zd,backendName:"cpu",kernelFunc:function N5(n){const{inputs:t,backend:e}=n,{params:r,indices:s}=t,a=ze(r.shape),i=s.shape,c=i[i.length-1],[d,m,g,y]=Hp(r,s);if(0===m)return e.makeTensorInfo(d,r.dtype,[]);const k=_F(e.data.get(s.dataId).values,e.bufferSync(r),r.dtype,m,c,g,y,r.shape,a);return e.makeTensorInfo(d,r.dtype,k.values)}},I5={kernelName:_f,backendName:"cpu",kernelFunc:function C5(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,indices:a}=t,{axis:i,batchDims:c}=r;en([s,a],"gatherV2");const d=Mn(i,s.shape)[0],m=e.data.get(a.dataId).values,g=s.shape[d];for(let G=0;G<m.length;++G){const K=m[G];q(K<=g-1&&K>=0,()=>`GatherV2: the index value ${K} is not in [0, ${g-1}]`)}let y=c;null==c&&(y=0);const C=ze(a.shape),T=Hm(s,a,d,y),k=_r({inputs:{x:s},backend:e,attrs:{shape:[T.batchSize,T.outerSize,T.dimSize,T.sliceSize]}}),D=_r({inputs:{x:a},backend:e,attrs:{shape:[T.batchSize,C/T.batchSize]}}),M=[T.batchSize,T.outerSize,C/T.batchSize,T.sliceSize],R=e.bufferSync(D),V=TF(e.bufferSync(k),R,M);return e.disposeIntermediateTensorInfo(k),e.disposeIntermediateTensorInfo(D),e.makeTensorInfo(T.outputShape,V.dtype,V.values)}},T5={kernelName:jd,backendName:"cpu",kernelFunc:function _5(n){const{inputs:t,backend:e}=n,{input:r}=t,s=ze(r.shape),a=r.shape[r.shape.length-1],c=_r({inputs:{x:r},backend:e,attrs:{shape:[s/a,a]}}),d=w3(c,!0,e),m=_r({inputs:{x:d},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),m}},A5=dr(rc,n=>Number.isFinite(n)?1:0,"bool"),E5={kernelName:rc,backendName:"cpu",kernelFunc:A5},k5=dr(sc,n=>Math.abs(n)===1/0?1:0,"bool"),M5={kernelName:sc,backendName:"cpu",kernelFunc:k5},D5=dr(ac,n=>Number.isNaN(n)?1:0,"bool"),R5={kernelName:ac,backendName:"cpu",kernelFunc:D5},O5={kernelName:Yd,backendName:"cpu",kernelFunc:function $5(n){const{backend:t,attrs:e}=n,{start:r,stop:s,num:a}=e,i=DF(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},F5=dr(oc,n=>Math.log1p(n)),L5={kernelName:oc,backendName:"cpu",kernelFunc:F5},B5=ws((n,t)=>n&&t),P5=Us(Mf,B5,null,"bool"),z5={kernelName:Mf,backendName:"cpu",kernelFunc:P5},V5=dr(uo,n=>n?0:1,"bool"),U5={kernelName:uo,backendName:"cpu",kernelFunc:V5},W5=ws((n,t)=>n||t),G5=Us(qo,W5,null,"bool"),q5={kernelName:qo,backendName:"cpu",kernelFunc:G5},K5={kernelName:lo,backendName:"cpu",kernelFunc:function H5(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{depthRadius:a,bias:i,alpha:c,beta:d}=r;en(s,"LRN");const m=s.shape[3],g=m-1,y=e.data.get(s.dataId).values,C=ze(s.shape),T=new Float32Array(C);function k(D){const M=D%m;let R=D-M+Math.max(0,M-a);const $=D-M+Math.min(M+a,g);let V=0;for(;R<=$;R++){const G=y[R];V+=G*G}return V}for(let D=0;D<C;D++){const M=k(D),R=y[D]*Math.pow(i+c*M,-d);T[D]=R}return e.makeTensorInfo(s.shape,s.dtype,T)}},j5={kernelName:Pu,backendName:"cpu",kernelFunc:function Z5(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,y:a,dy:i}=t,{depthRadius:c,bias:d,alpha:m,beta:g}=r;en(i,"LRNGrad");const y=ze(i.shape),C=i.shape[3],T=e.data.get(i.dataId).values,k=e.data.get(s.dataId).values,D=e.data.get(a.dataId).values,M=new Float32Array(y),R=y;for(let $=0;$<R;$++){const V=$%C,G=$-V+Math.max(0,V-c),K=$-V+Math.min(C,V+c+1);let ae=0;for(let le=G;le<K;le++)ae+=Math.pow(k[le],2);ae=m*ae+d;for(let le=G;le<K;le++){let he=-2*m*g*k[le]*D[$]/ae;$===le&&(he+=Math.pow(ae,-g)),he*=T[$],M[le]+=he}}return e.makeTensorInfo(i.shape,s.dtype,M)}};function N3(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reductionIndices:a,keepDims:i}=r,c=e;let d=s.shape;const m=d.length,g=Mn(a,d);let y=g;const C=Or(y,m);let T=c.data.get(s.dataId).values;if(null!=C){const G=new Array(m);for(let K=0;K<G.length;K++)G[K]=d[C[K]];T=dR(T,d,s.dtype,C,G),y=Br(y.length,m),d=G}en(s,"max"),gs("max",y,m);const[k,D]=ms(d,y),R=$F(T,ze(D),k,s.dtype),$=c.write(R,k,s.dtype);let V=k;return i&&(V=Wr(k,g)),{dataId:$,shape:V,dtype:s.dtype}}const X5={kernelName:nr,backendName:"cpu",kernelFunc:N3},J5={kernelName:Ko,backendName:"cpu",kernelFunc:function Y5(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;en(s,"maxPool");const{filterSize:a,strides:i,pad:c,dimRoundingMode:d}=r;q(ds(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const g=ma(s.shape,a,i,1,c,d);let y;if(1===g.filterWidth&&1===g.filterHeight&&_t(g.inShape,g.outShape))y=Su({inputs:{x:s},backend:e});else{const C=e.data.get(s.dataId).values,T=tn(s.shape),k=gR(C,0,s.dtype,T,g,"max");y=e.makeTensorInfo(g.outShape,s.dtype,k.values)}return y}},eW={kernelName:di,backendName:"cpu",kernelFunc:function Q5(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:c,dimRoundingMode:d,dataFormat:m}=r;en(s,"maxPool3d");const g=Ri(s.shape,a,i,1,c,d,m),C=y3(e.data.get(s.dataId).values,0,s.dtype,tn(s.shape),g,"max");return e.makeTensorInfo(C.shape,"float32",C.values)}},nW={kernelName:uc,backendName:"cpu",kernelFunc:function tW(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,{filterSize:i,strides:c,pad:d,dimRoundingMode:m}=r;en([s,a],"maxPool3DGrad");const g=Ri(a.shape,i,c,1,d,m),C=function HV(n,t){const e=En(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,d=t.dilationWidth,m=t.effectiveFilterDepth,g=t.effectiveFilterHeight,y=t.effectiveFilterWidth,C=t.padInfo.front,T=t.padInfo.top,k=t.padInfo.left;for(let D=0;D<t.batchSize;++D)for(let M=0;M<t.inChannels;++M)for(let R=0;R<t.outDepth;++R){const $=R*r-C;let V=$;for(;V<0;)V+=i;const G=Math.min(t.inDepth,m+$);for(let K=0;K<t.outHeight;++K){const ae=K*s-T;let le=ae;for(;le<0;)le+=c;const he=Math.min(t.inHeight,g+ae);for(let Ae=0;Ae<t.outWidth;++Ae){const ke=Ae*a-k;let Ue=ke;for(;Ue<0;)Ue+=d;const Je=Math.min(t.inWidth,y+ke);let st=Number.NEGATIVE_INFINITY,at=-1;for(let ot=V;ot<G;ot+=i){const ct=ot-$;for(let pt=le;pt<he;pt+=c){const ut=pt-ae;for(let gt=Ue;gt<Je;gt+=d){const At=gt-ke,kt=n.get(D,ot,pt,gt,M);kt>=st&&(st=kt,at=ct*g*y+ut*g+At)}}}e.set(at,D,R,K,Ae,M)}}}return e}(e.bufferSync(a),g),T=g.strideDepth,k=g.strideHeight,D=g.strideWidth,M=g.dilationDepth,R=g.dilationHeight,$=g.dilationWidth,V=g.effectiveFilterDepth,G=g.effectiveFilterHeight,K=g.effectiveFilterWidth,ae=V-1-g.padInfo.front,le=K-1-g.padInfo.left,he=G-1-g.padInfo.top,Ae=En(a.shape,"float32"),ke=e.bufferSync(s);for(let Ue=0;Ue<g.batchSize;++Ue)for(let Je=0;Je<g.inChannels;++Je)for(let st=0;st<g.inDepth;++st)for(let at=0;at<g.inHeight;++at)for(let ot=0;ot<g.inWidth;++ot){const ct=st-ae,pt=at-he,ut=ot-le;let gt=0;for(let At=0;At<V;At+=M){const kt=(ct+At)/T;if(!(kt<0||kt>=g.outDepth||Math.floor(kt)!==kt))for(let Ot=0;Ot<G;Ot+=R){const Dt=(pt+Ot)/k;if(!(Dt<0||Dt>=g.outHeight||Math.floor(Dt)!==Dt))for(let Gt=0;Gt<K;Gt+=$){const Pt=(ut+Gt)/D;if(Pt<0||Pt>=g.outWidth||Math.floor(Pt)!==Pt)continue;const Sn=V*G*K-1-C.get(Ue,kt,Dt,Pt,Je)===At*G*K+Ot*K+Gt?1:0;0!==Sn&&(gt+=ke.get(Ue,kt,Dt,Pt,Je)*Sn)}}}Ae.set(gt,Ue,st,at,ot,Je)}return e.makeTensorInfo(Ae.shape,Ae.dtype,Ae.values)}},sW={kernelName:zu,backendName:"cpu",kernelFunc:function rW(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a,output:i}=t,c=a;en([a,i],"maxPoolGrad");const{filterSize:d,strides:m,pad:g,dimRoundingMode:y}=r,C=ma(c.shape,d,m,1,g,y),T=e.data.get(c.dataId).values,k=En(C.outShape,c.dtype,v3(T,c.shape,c.dtype,C).values),D=C.strideHeight,M=C.strideWidth,R=C.dilationHeight,$=C.dilationWidth,V=C.effectiveFilterHeight,G=C.effectiveFilterWidth,K=G-1-C.padInfo.left,ae=V-1-C.padInfo.top,le=En(c.shape,"float32"),he=e.data.get(s.dataId).values,Ae=En(s.shape,"float32",he);for(let ke=0;ke<C.batchSize;++ke)for(let Ue=0;Ue<C.inChannels;++Ue)for(let Je=0;Je<C.inHeight;++Je)for(let st=0;st<C.inWidth;++st){const at=Je-ae,ot=st-K;let ct=0;for(let pt=0;pt<V;pt+=R){const ut=(at+pt)/D;if(!(ut<0||ut>=C.outHeight||Math.floor(ut)!==ut))for(let gt=0;gt<G;gt+=$){const At=(ot+gt)/M;if(At<0||At>=C.outWidth||Math.floor(At)!==At)continue;const Dt=V*G-1-k.get(ke,ut,At,Ue)===pt*G+gt?1:0;0!==Dt&&(ct+=Ae.get(ke,ut,At,Ue)*Dt)}}le.set(ct,ke,Je,st,Ue)}return e.makeTensorInfo(le.shape,le.dtype,le.values)}},iW={kernelName:Zo,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:r}=n,{filterSize:s,strides:a,pad:i,includeBatchInIndex:c}=t,d=e;en(r,"MaxPoolWithArgmax");const m=d.data.get(r.dataId).values,g=ma(r.shape,s,a,[1,1],i),[y,C]=function aW(n,t,e,r,s){const i=gR(n,0,e,tn(t),s,"max"),c=v3(n,t,e,s,!0,r);return[i.values,c.values]}(m,r.shape,r.dtype,c,g),T=d.write(y,g.outShape,r.dtype),k=d.write(C,g.outShape,r.dtype);return[{dataId:T,shape:g.outShape,dtype:r.dtype},{dataId:k,shape:g.outShape,dtype:"int32"}]}},uW={kernelName:Df,backendName:"cpu",kernelFunc:function oW(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,c=Mn(a,s.shape),g=ze(ms(s.shape,c)[1]),y=[],C=e.makeTensorInfo([],"float32",new Float32Array([g]));y.push(C);const T=tf({inputs:{x:s},backend:e,attrs:{dtype:"float32"}});y.push(T);const k=vR({inputs:{a:T,b:C},backend:e});y.push(k);const D=Rb({inputs:{x:k},backend:e,attrs:{axis:a,keepDims:i}});return y.forEach(M=>e.disposeIntermediateTensorInfo(M)),D}},cW={kernelName:lc,backendName:"cpu",kernelFunc:function lW(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;en(s,"min");const c=Mn(a,s.shape);let d=c;const m=Or(d,s.shape.length);let g=s;null!=m&&(g=Ua({inputs:{x:s},backend:e,attrs:{perm:m}}),d=Br(d.length,s.shape.length)),gs("min",d,g.shape.length);const[y,C]=ms(g.shape,d),T=ze(C),k=zr(ze(y),g.dtype),D=e.data.get(g.dataId).values;for(let R=0;R<k.length;++R){const $=R*T;let V=D[$];for(let G=0;G<T;++G){const K=D[$+G];(Number.isNaN(K)||K<V)&&(V=K)}k[R]=V}null!=m&&e.disposeIntermediateTensorInfo(g);const M=e.makeTensorInfo(y,g.dtype,k);if(i){const $=_r({inputs:{x:M},backend:e,attrs:{shape:Wr(y,c)}});return e.disposeIntermediateTensorInfo(M),$}return M}},hW={kernelName:Rf,backendName:"cpu",kernelFunc:function fW(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,mode:i}=r;en(s,"mirrorPad");const c=a.map((V,G)=>V[0]+s.shape[G]+V[1]),d=a.map(V=>V[0]),m=a.map((V,G)=>V[0]+s.shape[G]),g="reflect"===i?0:1,y=e.data.get(s.dataId).values,C=s.shape.length,T=tn(s.shape),k=ze(c),D=c.length,M=tn(c),R=jr(s.dtype,k);for(let V=0;V<k;V++){let G=yt(V,D,M);for(let ae=0;ae<D;ae++)G[ae]<d[ae]?G[ae]=2*d[ae]-G[ae]-g:G[ae]>=m[ae]&&(G[ae]=2*(m[ae]-1)-G[ae]+g);G=G.map((ae,le)=>ae-d[le]);const K=pa(G,C,T);R[V]=y[K]}return{dataId:e.write(R,c,s.dtype),shape:c,dtype:s.dtype}}},dW=ws((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),pW=Us(cc,dW),mW={kernelName:cc,backendName:"cpu",kernelFunc:pW};function S3(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{dim:a}=r,i=s.shape.length;let c=a;if(-1===c&&(c=i-1),c!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${c}`);const d=Mn([c],s.shape),m=N3({inputs:{x:s},backend:e,attrs:{reductionIndices:d,keepDims:!1}}),g=Wr(m.shape,d),y=_r({inputs:{x:m},backend:e,attrs:{shape:g}}),C=mR({inputs:{a:s,b:y},backend:e}),T=NF({inputs:{x:C},backend:e}),k=Rb({inputs:{x:T},backend:e,attrs:{axis:d,keepDims:!1}}),D=_r({inputs:{x:k},backend:e,attrs:{shape:g}}),M=vR({inputs:{a:T,b:D},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(k),e.disposeIntermediateTensorInfo(D),M}const gW={kernelName:Jf,backendName:"cpu",kernelFunc:S3},yW={kernelName:Jd,backendName:"cpu",kernelFunc:function vW(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{numSamples:a,seed:i,normalized:c}=r;en(s,"multinomial");const d=c?s:S3({inputs:{logits:s},backend:e,attrs:{dim:-1}}),m=d.shape[0],g=d.shape[1],y=e.data.get(d.dataId).values,C=[m,a],T=zr(ze(C),"int32");for(let k=0;k<m;++k){const D=k*g,M=new Float32Array(g-1);M[0]=y[D];for(let V=1;V<M.length;++V)M[V]=M[V-1]+y[D+V];const R=zc.alea(i.toString()),$=k*a;for(let V=0;V<a;++V){const G=R();T[$+V]=M.length;for(let K=0;K<M.length;K++)if(G<M[K]){T[$+V]=K;break}}}return c||e.disposeIntermediateTensorInfo(d),e.makeTensorInfo(C,"int32",T)}},bW=Gc,wW={kernelName:Qd,backendName:"cpu",kernelFunc:function xW(n){const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:d}=r;en(s,"NonMaxSuppression");const m=e.data.get(s.dataId).values,g=e.data.get(a.dataId).values,{selectedIndices:y}=bW(m,g,i,c,d);return e.makeTensorInfo([y.length],"int32",new Int32Array(y))}},NW=Fm,CW={kernelName:ep,backendName:"cpu",kernelFunc:function SW(n){const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:m}=r;en(s,"NonMaxSuppressionPadded");const g=e.data.get(s.dataId).values,y=e.data.get(a.dataId).values,{selectedIndices:C,validOutputs:T}=NW(g,y,i,c,d,m);return[e.makeTensorInfo([C.length],"int32",new Int32Array(C)),e.makeTensorInfo([],"int32",new Int32Array([T]))]}},IW=Lm,TW={kernelName:tp,backendName:"cpu",kernelFunc:function _W(n){const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:d,softNmsSigma:m}=r;en(s,"NonMaxSuppressionWithScore");const g=e.data.get(s.dataId).values,y=e.data.get(a.dataId).values,C=i,T=c,k=d,D=m,{selectedIndices:M,selectedScores:R}=IW(g,y,C,T,k,D);return[e.makeTensorInfo([M.length],"int32",new Int32Array(M)),e.makeTensorInfo([R.length],"float32",new Float32Array(R))]}},EW={kernelName:Lf,backendName:"cpu",kernelFunc:function AW(n){const{inputs:t,backend:e,attrs:r}=n,{indices:s}=t,{dtype:a,depth:i,onValue:c,offValue:d}=r;en(s,"oneHot");const m=ze(s.shape),g=new Float32Array(m*i);g.fill(d);const y=e.data.get(s.dataId).values;for(let C=0;C<m;++C)y[C]>=0&&y[C]<i&&(g[C*i+y[C]]=c);return e.makeTensorInfo([...s.shape,i],a,g)}};function bI(n){const{inputs:t,backend:e}=n,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const s=md({inputs:{input:r},backend:e}),a=bI({inputs:{x:s},backend:e}),i=Mg({inputs:{input:r},backend:e}),c=bI({inputs:{x:i},backend:e}),d=ii({inputs:{real:a,imag:c},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),d}return xR({backend:e,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const kW={kernelName:eh,backendName:"cpu",kernelFunc:bI},MW={kernelName:Ff,backendName:"cpu",kernelFunc:function C3(n){const{inputs:t,backend:e}=n,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const s=md({inputs:{input:r},backend:e}),a=C3({inputs:{x:s},backend:e}),i=Mg({inputs:{input:r},backend:e}),c=bI({inputs:{x:i},backend:e}),d=ii({inputs:{real:a,imag:c},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),d}return xR({backend:e,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function I3(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r;if(1===t.length)return yI({inputs:{input:t[0]},backend:e,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(g=>{Ft(a,g.shape,"All tensors passed to stack must have matching shapes"),q(i===g.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],m=Dg({inputs:t.map(g=>{const y=yI({inputs:{input:g},backend:e,attrs:{dim:s}});return c.push(y),y}),backend:e,attrs:{axis:s}});return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}const DW={kernelName:Bf,backendName:"cpu",kernelFunc:I3},_3={kernelName:Pf,backendName:"cpu",kernelFunc:function RW(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,constantValue:i}=r;en(s,"pad");const c=a.map(($,V)=>$[0]+s.shape[V]+$[1]),d=a.map($=>$[0]),m=e.data.get(s.dataId).values,g=ze(s.shape),y=s.shape.length,C=tn(s.shape),T=ze(c),k=c.length,D=tn(c),M=jr(s.dtype,T);0!==i&&M.fill(i);for(let $=0;$<g;$++)M[pa(yt($,y,C).map((ae,le)=>ae+d[le]),k,D)]=m[$];return{dataId:e.write(M,c,s.dtype),shape:c,dtype:s.dtype}}},$W=ws((n,t)=>Math.pow(n,t)),OW=Us(hc,$W),FW={kernelName:hc,backendName:"cpu",kernelFunc:OW},BW={kernelName:np,backendName:"cpu",kernelFunc:function LW(n){const{inputs:t,backend:e,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,d=s.map(R=>e.data.get(R.dataId).values),m=s.map(R=>R.shape),g=e.data.get(a.dataId).values,y=e.data.get(i.dataId).values,[C,T,k]=VF(d,m,g,a.shape,a.dtype,y,i.shape),D=C.map(R=>e.makeTensorInfo([R.length],"int32",R)),M=e.makeTensorInfo(k,a.dtype,T);return D.concat([M])}},zW={kernelName:rp,backendName:"cpu",kernelFunc:function PW(n){const{inputs:t,backend:e}=n,{starts:r,limits:s,deltas:a}=t,i=e.data.get(r.dataId).values,c=e.data.get(s.dataId).values,d=e.data.get(a.dataId).values,[m,g]=WF(i,r.shape,r.dtype,c,s.shape,d,a.shape);return[e.makeTensorInfo([m.length],"int32",m),e.makeTensorInfo([g.length],r.dtype,g)]}},UW={kernelName:sp,backendName:"cpu",kernelFunc:function VW(n){const{inputs:t,backend:e,attrs:r}=n,{shape:s,values:a,defaultValue:i,rowPartitionTensors:c}=t,{rowPartitionTypes:d}=r,m=e.data.get(s.dataId).values,g=e.data.get(a.dataId).values,y=e.data.get(i.dataId).values,C=c.map(M=>e.data.get(M.dataId).values),T=c.map(M=>M.shape),[k,D]=HF(m,s.shape,g,a.shape,a.dtype,y,i.shape,C,T,d);return e.makeTensorInfo(k,a.dtype,D)}},GW={kernelName:ap,backendName:"cpu",kernelFunc:function WW(n){const{backend:t,attrs:e}=n,{start:r,stop:s,dtype:a,step:i}=e,c=KF(r,s,i,a);return t.makeTensorInfo([c.length],a,c)}},qW=dr(mr,n=>1/n),HW={kernelName:mr,backendName:"cpu",kernelFunc:qW},ZW={kernelName:jo,backendName:"cpu",kernelFunc:function KW(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:c}=r;en(s,"resizeBilinear");const d=tn(s.shape),[m,g]=c,[y,C,T,k]=s.shape,D=e.data.get(s.dataId).values,M=new Float32Array(ze([y,m,g,k])),R=[a&&m>1?C-1:C,a&&g>1?T-1:T],$=[a&&m>1?m-1:m,a&&g>1?g-1:g];let V=0;const G=R[0]/$[0],K=R[1]/$[1];for(let ae=0;ae<y;ae++)for(let le=0;le<m;le++){let he;he=i?G*(le+.5)-.5:G*le;const Ae=Math.max(0,Math.floor(he)),ke=he-Ae,Ue=Math.min(C-1,Math.ceil(he)),Je=ae*d[0]+Ae*d[1],st=ae*d[0]+Ue*d[1];for(let at=0;at<g;at++){let ot;ot=i?K*(at+.5)-.5:K*at;const ct=Math.max(0,Math.floor(ot)),pt=ot-ct,ut=Math.min(T-1,Math.ceil(ot)),gt=Je+ct*d[2],At=st+ct*d[2],kt=Je+ut*d[2],Ot=st+ut*d[2];for(let Dt=0;Dt<k;Dt++){const Gt=D[gt+Dt],Pt=D[At+Dt],Sn=Gt+(D[kt+Dt]-Gt)*pt;M[V++]=Sn+(Pt+(D[Ot+Dt]-Pt)*pt-Sn)*ke}}}return e.makeTensorInfo([y,m,g,k],"float32",M)}},XW={kernelName:Xg,backendName:"cpu",kernelFunc:function jW(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r;en([a,s],"resizeBilinearGrad");const c=tn(s.shape),[d,m,g,y]=s.shape,[,C,T]=a.shape,k=new Float32Array(d*m*g*y),D=[i&&C>1?m-1:m,i&&T>1?g-1:g],M=[i&&C>1?C-1:C,i&&T>1?T-1:T],R=D[0]/M[0],$=D[1]/M[1],V=e.data.get(a.dataId).values;let G=0;for(let K=0;K<d;K++){const ae=K*c[0];for(let le=0;le<C;le++){const he=le*R,Ae=Math.floor(he),ke=Math.min(Math.ceil(he),m-1),Ue=ae+Ae*c[1],Je=ae+ke*c[1],st=he-Ae,at=1-st;for(let ot=0;ot<T;ot++){const ct=ot*$,pt=Math.floor(ct),ut=Math.min(Math.ceil(ct),g-1),gt=ct-pt,At=1-gt,kt=Ue+pt*c[2],Ot=Ue+ut*c[2],Dt=Je+pt*c[2],Gt=Je+ut*c[2],Pt=at*At,jt=at*gt,dn=st*At,Sn=st*gt;for(let yn=0;yn<y;yn++){const zn=V[G++];k[kt+yn]+=zn*Pt,k[Ot+yn]+=zn*jt,k[Dt+yn]+=zn*dn,k[Gt+yn]+=zn*Sn}}}}return e.makeTensorInfo([d,g,m,y],"float32",k)}},JW={kernelName:Uu,backendName:"cpu",kernelFunc:function YW(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:c}=r;en(s,"resizeNearestNeighbor");const d=tn(s.shape),[m,g]=c,[y,C,T,k]=s.shape,D=e.data.get(s.dataId).values,M=new Float32Array(y*m*g*k),R=[a&&m>1?C-1:C,a&&g>1?T-1:T],$=[a&&m>1?m-1:m,a&&g>1?g-1:g],V=R[0]/$[0],G=R[1]/$[1];let K=0;for(let ae=0;ae<y;ae++){const le=ae*d[0];for(let he=0;he<m;he++){const Ae=i?V*(he+.5):V*he;let ke=Math.min(C-1,a?Math.round(Ae):Math.floor(Ae));i&&(ke=Math.max(0,ke));const Ue=le+ke*d[1];for(let Je=0;Je<g;Je++){const st=i?G*(Je+.5):G*Je;let at=Math.min(T-1,a?Math.round(st):Math.floor(st));i&&(at=Math.max(0,at));const ot=Ue+at*d[2];for(let ct=0;ct<k;ct++)M[K++]=D[ot+ct]}}}return e.makeTensorInfo([y,m,g,k],s.dtype,M)}},eG={kernelName:ip,backendName:"cpu",kernelFunc:function QW(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r;en([a,s],"resizeNearestNeighborGrad");const c=tn(s.shape),d=tn(a.shape),[m,g,y,C]=s.shape,[,T,k]=a.shape,D=new Float32Array(m*g*y*C),M=e.data.get(a.dataId).values,R=[i&&T>1?g-1:g,i&&k>1?y-1:y],$=[i&&T>1?T-1:T,i&&k>1?k-1:k],V=R[0]/$[0],G=R[1]/$[1],K=1/V,ae=1/G,le=2*Math.ceil(K)+2,he=2*Math.ceil(ae)+2;for(let Ae=0;Ae<m;Ae++){const ke=Ae*c[0];for(let Ue=0;Ue<g;Ue++){const Je=ke+Ue*c[1],st=Math.floor(Ue*K),at=Math.floor(st-le/2);for(let ot=0;ot<y;ot++){const ct=Je+ot*c[2],pt=Math.floor(ot*ae),ut=Math.floor(pt-he/2);for(let gt=0;gt<C;gt++){let At=0;for(let kt=0;kt<le;kt++){const Ot=kt+at;if(Ot<0||Ot>=T)continue;const Dt=ke+Ot*d[1],Gt=Ot*V;if(Ue===Math.min(g-1,i?Math.round(Gt):Math.floor(Gt)))for(let jt=0;jt<he;jt++){const dn=jt+ut;if(dn<0||dn>=k)continue;const Sn=Dt+dn*d[2],yn=dn*G;ot===Math.min(y-1,i?Math.round(yn):Math.floor(yn))&&(At+=M[Sn+gt])}}D[ct+gt]=At}}}}return e.makeTensorInfo(s.shape,s.dtype,D)}},nG={kernelName:op,backendName:"cpu",kernelFunc:function tG(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dims:a}=r;en(s,"reverse");const i=s.shape.length,c=Mn(a,s.shape);if(0===i)return Su({inputs:{x:s},backend:e});const d=new Jr(s.shape,s.dtype),m=e.bufferSync(s);for(let g=0;g<d.size;g++){const y=d.indexToLoc(g),C=y.slice();c.forEach(T=>C[T]=s.shape[T]-1-C[T]),d.set(m.get(...C),...y)}return e.makeTensorInfo(d.shape,d.dtype,d.values)}},rG={kernelName:mp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:r}=n,{radians:s,fillValue:a,center:i}=t,c=e,d=jr(r.dtype,ze(r.shape)),[m,g,y,C]=r.shape,[T,k]=n0(i,g,y),M=Math.sin(s),R=Math.cos(s),$=c.data.get(r.dataId).values;for(let G=0;G<m;G++){const K=G*y*g*C;for(let ae=0;ae<g;ae++){const le=ae*(y*C);for(let he=0;he<y;he++){const Ae=he*C;for(let ke=0;ke<C;ke++){const Ue=[m,ae,he,ke],Je=Ue[2],st=Ue[1];let at=(Je-T)*R-(st-k)*M,ot=(Je-T)*M+(st-k)*R;at=Math.round(at+T),ot=Math.round(ot+k);let ct=a;"number"!=typeof a&&(ct=3===ke?255:a[ke]),at>=0&&at<y&&ot>=0&&ot<g&&(ct=$[K+ot*(y*C)+at*C+ke]),d[K+le+Ae+ke]=ct}}}}return{dataId:c.write(d,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},sG=dr(Wf,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2==0?t:t+1}),aG={kernelName:Wf,backendName:"cpu",kernelFunc:sG},oG={kernelName:Qn,backendName:"cpu",kernelFunc:function iG(n){const{inputs:t,backend:e,attrs:r}=n,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:c,numUpdates:d,sliceSize:m,strides:g,outputSize:y}=ou(0,s,i),D=gd(e.bufferSync(s),e.bufferSync(a),i,y,m,d,c,g,0,!0);return e.makeTensorInfo(i,D.dtype,D.values)}};function uG(n,t){let e=0,r=n.length,s=0;for(;e<r;)s=Math.floor((e+r)/2),n[s]<t?e=s+1:r=s;return r}function lG(n,t){let e=0,r=n.length,s=0;for(;e<r;)s=Math.floor((e+r)/2),n[s]<=t?e=s+1:r=s;return r}const hG={kernelName:Gf,backendName:"cpu",kernelFunc:function fG(n){const{inputs:t,backend:e,attrs:r}=n,{sortedSequence:s,values:a}=t,{side:i}=r,m=function cG(n,t,e,r,s,a){const i=Wn("int32",e*s);for(let c=0;c<e;++c){const d=n.slice(c*r,(c+1)*r),m=c*s;for(let g=0;g<s;++g)i[m+g]="left"===a?uG(d,t[g+m]):lG(d,t[g+m])}return i}(e.data.get(s.dataId).values,e.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return e.makeTensorInfo(a.shape,"int32",m)}},pG={kernelName:mc,backendName:"cpu",kernelFunc:function dG(n){const{inputs:t,backend:e}=n,{condition:r,t:s,e:a}=t;en([r,s,a],"select");const i=r.shape.length,c=e.data.get(r.dataId).values,d=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,g=ra(s.dtype,a.dtype),y=zr(ze(s.shape),g);let C=0;const T=0===i||i>1||1===s.shape.length?1:ze(s.shape.slice(1));for(let k=0;k<c.length;k++)for(let D=0;D<T;D++)y[C++]=1===c[k]?d[k]:m[k];return e.makeTensorInfo(s.shape,g,y)}},mG=Vm,gG=Um,vG=dr(qf,n=>n>=0?gG*n:mG*(Math.exp(n)-1)),yG={kernelName:qf,backendName:"cpu",kernelFunc:vG},bG=dr(pe,n=>n<0?-1:n>0?1:0),xG={kernelName:pe,backendName:"cpu",kernelFunc:bG},wG=dr(Kf,n=>Math.sin(n)),NG={kernelName:Kf,backendName:"cpu",kernelFunc:wG},SG=dr(Gu,n=>Math.sinh(n)),CG={kernelName:Gu,backendName:"cpu",kernelFunc:SG},T3=Math.log(1.1920928955078125e-7)+2,IG=dr(Zf,n=>{const t=n>-T3,e=n<T3,r=Math.exp(n);let s;return s=e?r:t?n:Math.log(1+r),s}),_G={kernelName:Zf,backendName:"cpu",kernelFunc:IG},AG={kernelName:Xf,backendName:"cpu",kernelFunc:function TG(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,paddings:i}=r;en([s],"spaceToBatchND");const c=ze(a),d=[[0,0]];d.push(...i);for(let ae=1+a.length;ae<s.shape.length;++ae)d.push([0,0]);const m=_3.kernelFunc({inputs:{x:s},backend:e,attrs:{paddings:d,constantValue:0}}),g=qc(m.shape,a,c,!1),y=Zh(g.length,a.length,!1),C=jh(m.shape,a,c,!1),D=_r({inputs:{x:m},backend:e,attrs:{shape:g}}),$=Ua({inputs:{x:D},backend:e,attrs:{perm:y}}),K=_r({inputs:{x:$},backend:e,attrs:{shape:C}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo($),K}},kG={kernelName:up,backendName:"cpu",kernelFunc:function EG(n){const{inputs:t,backend:e}=n,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const c=e.data.get(r.dataId).values,d=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,g=e.data.get(i.dataId).values[0],[y,C,T,k,D]=YF(c,r.shape,r.dtype,d,s.dtype,m,g);return[e.makeTensorInfo(C,r.dtype,y),e.makeTensorInfo([C[0]],s.dtype,T),e.makeTensorInfo([k.length],"bool",new Uint8Array(k.map(M=>Number(M)))),e.makeTensorInfo([D.length],r.dtype,new Int32Array(D))]}},DG={kernelName:lp,backendName:"cpu",kernelFunc:function MG(n){const{inputs:t,backend:e}=n,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(e.data.get(s.dataId).values),c=e.data.get(r.dataId).values,d=Array.from(e.data.get(a.dataId).values),[m,g,y]=JF(c,r.shape,r.dtype,i,d);return[e.makeTensorInfo(g,r.dtype,m),e.makeTensorInfo([y.length],a.dtype,new Int32Array(y))]}},$G={kernelName:Ds,backendName:"cpu",kernelFunc:function RG(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(r.dataId).values,c=e.data.get(s.dataId).values,d=e.data.get(a.dataId).values,[m,g]=pR(i,r.shape,r.dtype,c,d,!0);return e.makeTensorInfo(g,r.dtype,m)}},FG={kernelName:Qt,backendName:"cpu",kernelFunc:function OG(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(r.dataId).values,c=e.data.get(s.dataId).values,d=e.data.get(a.dataId).values,[m,g]=pR(i,r.shape,r.dtype,c,d);return e.makeTensorInfo(g,r.dtype,m)}},BG={kernelName:pi,backendName:"cpu",kernelFunc:function LG(n){const{inputs:t,backend:e,attrs:r}=n,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:c}=r,{sliceRank:d,numUpdates:m,sliceSize:g,strides:y,outputSize:C}=ou(0,s,c),T=!1,k=e.bufferSync(s);let D;switch(a.dtype){case"bool":D=gd(k,e.bufferSync(a),c,C,g,m,d,y,Boolean(e.data.get(i.dataId).values[0]),T);break;case"float32":case"int32":D=gd(k,e.bufferSync(a),c,C,g,m,d,y,e.data.get(i.dataId).values[0],T);break;case"string":D=gd(k,e.bufferSync(a),c,C,g,m,d,y,fo(e.data.get(i.dataId).values[0]),T);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return e.makeTensorInfo(c,D.dtype,D.values)}},zG={kernelName:Yf,backendName:"cpu",kernelFunc:function PG(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,c=Mn(i,s.shape)[0],d=p0(s,a,c),m=new Array(s.shape.length).fill(0),g=s.shape.slice();return d.map(y=>{const C=[...g];C[c]=y;const T=vd({inputs:{x:s},backend:e,attrs:{begin:m,size:C}});return m[c]+=y,T})}},VG={kernelName:cp,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,r=t;en(e,"square");const s=r.data.get(e.dataId).values,a=new Float32Array(s.length);for(let c=0;c<s.length;++c){const d=s[c];a[c]=d*d}return{dataId:r.write(a,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},UG=dr(wc,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),WG={kernelName:wc,backendName:"cpu",kernelFunc:UG},qG={kernelName:fp,backendName:"cpu",kernelFunc:function GG(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,end:i,strides:c,beginMask:d,endMask:m,ellipsisMask:g,newAxisMask:y,shrinkAxisMask:C}=r;en(s,"stridedSlice");const{finalShapeSparse:T,finalShape:k,isIdentity:D,sliceDim0:M,isSimpleSlice:R,begin:$,end:V,strides:G}=zv(s.shape,a,i,c,d,m,g,y,C);let K;if(D)K=_r({inputs:{x:s},backend:e,attrs:{shape:k}});else if(M||R){q(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const ae=Ka($,V,G),le=vd({inputs:{x:s},backend:e,attrs:{begin:$,size:ae}});K=_r({inputs:{x:le},backend:e,attrs:{shape:k}}),e.disposeIntermediateTensorInfo(le)}else{const le=t3(T,e.bufferSync(s),G,$);K=e.makeTensorInfo(k,le.dtype,le.values)}return K}},KG={kernelName:hp,backendName:"cpu",kernelFunc:function HG(n){const{inputs:t,backend:e,attrs:r}=n,{separator:s,nGramWidths:a,leftPad:i,rightPad:c,padWidth:d,preserveShortSequences:m}=r,{data:g,dataSplits:y}=t,C=e.data.get(g.dataId).values,T=e.data.get(y.dataId).values,[k,D]=n3(C,T,s,a,i,c,d,m);return[e.makeTensorInfo([k.length],"string",k),e.makeTensorInfo(y.shape,"int32",D)]}},jG={kernelName:bc,backendName:"cpu",kernelFunc:function ZG(n){const{inputs:t,backend:e,attrs:r}=n,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const c=e.data.get(a.dataId).values,d=e.data.get(i.dataId).values[0],[m,g,y]=r3(c,d,s),C=g.length;return[e.makeTensorInfo([C,2],"int32",m),e.makeTensorInfo([C],"string",g),e.makeTensorInfo([2],"int32",new Int32Array(y))]}},YG={kernelName:Ii,backendName:"cpu",kernelFunc:function XG(n){const{inputs:t,backend:e,attrs:r}=n,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const c=s3(e.data.get(a.dataId).values,s);return e.makeTensorInfo(a.shape,"int32",c)}},JG=dr(xc,n=>Math.tan(n)),QG={kernelName:xc,backendName:"cpu",kernelFunc:JG},e6=dr(qu,n=>Math.tanh(n));function A3(n,t,e){switch(e){case"reflect":return function c6(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const r=2*t;e<r&&(e=r*Math.trunc(-e/r)+e),e=e<-t?e+r:-e-1}else if(e>t-1)if(t<=1)e=0;else{const r=2*t;e-=r*Math.trunc(e/r),e>=t&&(e=r-e-1)}return Wa(0,e,t-1)}(n,t);case"wrap":return function f6(n,t){let e=n;return e<0?t<=1?e=0:e+=t*(Math.trunc(-e/(t-1))+1):e>t-1&&(t<=1?e=0:e-=t*Math.trunc(e/(t-1))),Wa(0,e,t-1)}(n,t);case"nearest":return function d6(n,t){return Wa(0,n,t-1)}(n,t);default:return function h6(n,t){return n}(n)}}function $b(n,t,e,r,s,a,i,c,d,m,g){return 0<=c&&c<t&&0<=d&&d<e?n[i*r+c*s+d*a+m]:g}function p6(n,t,e,r,s,a,i,c,d,m,g){return $b(n,t,e,r,s,a,i,Math.round(c),Math.round(d),m,g)}function m6(n,t,e,r,s,a,i,c,d,m,g){const y=Math.floor(c),C=Math.floor(d),T=y+1,k=C+1;return(T-c)*((k-d)*$b(n,t,e,r,s,a,i,y,C,m,g)+(d-C)*$b(n,t,e,r,s,a,i,y,k,m,g))+(c-y)*((k-d)*$b(n,t,e,r,s,a,i,T,C,m,g)+(d-C)*$b(n,t,e,r,s,a,i,T,k,m,g))}const N6=[xV,r4,NV,CV,l4,_V,AV,kV,DV,$V,FV,BV,zV,WV,qV,ZV,XV,JV,eU,yV,nU,sU,iU,uU,o4,f4,cU,s4,fU,dU,pU,gU,yU,xU,NU,CU,_U,AU,kU,DU,$U,FU,BU,PU,VU,WU,qU,HU,KU,ZU,YU,fV,QU,h4,o5,d4,u5,m4,p5,m5,v5,v4,b4,b5,w5,S5,I5,w4,S4,a4,T5,hU,E5,M5,R5,hV,I4,T4,O5,E4,L5,z5,U5,q5,K5,j5,X5,M4,J5,eW,nW,sW,iW,uW,cW,R4,hW,mW,yW,O4,L4,wW,CW,TW,P4,EW,MW,DW,_3,FW,pV,U4,BW,zW,UW,GW,i4,yR,HW,mV,gV,vV,ZW,XW,JW,eG,nG,rG,aG,X4,oG,hG,pG,yG,J4,xG,NG,CG,Q4,gW,_G,AG,kG,DG,$G,FG,BG,zG,nV,VG,sV,iV,WG,qG,KG,jG,YG,cV,jU,QG,{kernelName:qu,backendName:"cpu",kernelFunc:e6},{kernelName:Yg,backendName:"cpu",kernelFunc:function n6(n){const{inputs:t,backend:e}=n,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:c,sliceSize:d,strides:m,outputSize:g}=ou(0,s,r.shape),C=e.bufferSync(s),T=e.bufferSync(a),k=e.bufferSync(r),D=gd(C,T,r.shape,g,d,c,i,m,k,!1);return e.makeTensorInfo(r.shape,D.dtype,D.values)}},{kernelName:Hu,backendName:"cpu",kernelFunc:function s6(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reps:a}=r;en(s,"tile");const i=i3(e.bufferSync(s),a);return e.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:dp,backendName:"cpu",kernelFunc:function i6(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{k:a,sorted:i}=r;en(s,"topk");const c=e.data.get(s.dataId).values,[d,m]=u3(c,s.shape,s.dtype,a,i);return[e.makeTensorInfo(d.shape,d.dtype,d.values),e.makeTensorInfo(m.shape,m.dtype,m.values)]}},{kernelName:Ku,backendName:"cpu",kernelFunc:function u6(n){const{inputs:t,attrs:e,backend:r}=n,{image:s,transforms:a}=t,{interpolation:i,fillMode:c,fillValue:d,outputShape:m}=e,[g,y,C,T]=s.shape,[k,D]=null!=m?m:[y,C],M=[g,k,D,T],R=tn(s.shape),$=R[0],V=R[1],G=R[2],K=tn(M),ae=K[0],le=K[1],he=K[2],Ae=jr(s.dtype,ze(M));Ae.fill(d);const ke=r.data.get(s.dataId).values,Ue=r.data.get(a.dataId).values;for(let st=0;st<g;++st){const at=1===a.shape[0]?Ue:Ue.subarray(8*st,8*st+8);for(let ot=0;ot<k;++ot)for(let ct=0;ct<D;++ct)for(let pt=0;pt<T;++pt){let ut;const gt=at[6]*ct+at[7]*ot+1;if(0===gt)continue;const kt=(at[3]*ct+at[4]*ot+at[5])/gt,Ot=A3((at[0]*ct+at[1]*ot+at[2])/gt,C,c),Dt=A3(kt,y,c);switch(i){case"nearest":ut=p6(ke,y,C,$,V,G,st,Dt,Ot,pt,d);break;case"bilinear":ut=m6(ke,y,C,$,V,G,st,Dt,Ot,pt,d);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}Ae[st*ae+ot*le+ct*he+pt]=ut}return r.makeTensorInfo(M,s.dtype,Ae)}return{dataId:r.write(Ae,M,s.dtype),shape:s.shape,dtype:s.dtype}}},z4,{kernelName:pp,backendName:"cpu",kernelFunc:function g6(n){const{inputs:t,attrs:e,backend:r}=n,{axis:s}=e,{x:a}=t;en(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:c,outputShape:d,indices:m}=l3(i,s,a.shape,a.dtype);return[r.makeTensorInfo(d,a.dtype,c),r.makeTensorInfo([m.length],"int32",m)]}},{kernelName:Qf,backendName:"cpu",kernelFunc:function y6(n){const{inputs:t,backend:e,attrs:r}=n,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,c=s.shape[a],d=new Array(i-1);let m=0;for(let T=0;T<i;T++)T!==a&&(d[m++]=s.shape[T]);const g=new Array(i).fill(0),y=s.shape.slice();y[a]=1;const C=new Array(c);for(let T=0;T<C.length;T++){g[a]=T;const k=vd({inputs:{x:s},backend:e,attrs:{begin:g,size:y}});C[T]=_r({inputs:{x:k},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(k)}return C}},{kernelName:Rs,backendName:"cpu",kernelFunc:function x6(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,segmentIds:a}=t,{numSegments:i}=r;en(s,"unsortedSegmentSum");const m=[],g=[],y=s.shape.length-a.shape.length;let C=a;for(let k=0;k<y;++k){const D=yI({inputs:{input:C},backend:e,attrs:{dim:k+1}});C=D,g.push(D)}for(let k=0;k<i;++k){const D=Qo(k,"int32"),M=e.makeTensorInfo([],"int32",D),R=xF({inputs:{a:M,b:C},backend:e}),$=tf({inputs:{x:R},backend:e,attrs:{dtype:"float32"}}),V=mI({inputs:{a:$,b:s},backend:e}),G=Rb({inputs:{x:V},backend:e,attrs:{axis:0,keepDims:!1}});m.push(G),g.push(M),g.push(R),g.push($),g.push(V),g.push(G)}const T=I3({inputs:m,backend:e,attrs:{axis:0}});return g.forEach(k=>e.disposeIntermediateTensorInfo(k)),T}},kW];for(const n of N6)gp(n);const rf={},xI={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function E3(n,t){rf[n]=t}function Lo(n,t){if(!(n in rf)||null!=t){const r=function C6(n,t){if(1!==n&&2!==n)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=null==t?function S6(n){if(!He().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===n)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(n):t;return e.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete rf[n]},!1),He().getBool("SOFTWARE_WEBGL_ENABLED")&&(xI.failIfMajorPerformanceCaveat=!1),1===n?e.getContext("webgl",xI)||e.getContext("experimental-webgl",xI):e.getContext("webgl2",xI)}(n,t);if(null===r)return console.log("Could not get context for WebGL version",n),null;rf[n]=r}const e=rf[n];return null==e||e.isContextLost()?(delete rf[n],Lo(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),rf[n])}var Rg=(()=>{return(n=Rg||(Rg={}))[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH",Rg;var n})(),oi=(()=>{return(n=oi||(oi={}))[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD",oi;var n})(),Ws=(()=>{return(n=Ws||(Ws={}))[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",Ws;var n})();function Ob(n,t){return[t,n]}function wI(n){const t=ze(n);return Ns(Math.ceil(t/4))}function $g(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function wR(n,t){const e=n;let r,s,a,i,c,d,m,g,y,C;return 2===He().getNumber("WEBGL_VERSION")?(r=e.R32F,s=e.R16F,a=e.RGBA16F,i=e.RGBA32F,c=e.RED,m=4,g=1,y=e.HALF_FLOAT,C=e.FLOAT,d=e.RGBA8):(r=n.RGBA,s=n.RGBA,a=n.RGBA,i=e.RGBA,c=n.RGBA,m=4,g=4,y=null!=t?t.HALF_FLOAT_OES:null,C=n.FLOAT,d=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:d,downloadUnpackNumChannels:m,defaultNumChannels:g,textureTypeHalfFloat:y,textureTypeFloat:C}}function Vt(n,t){const e=t();return He().getBool("DEBUG")&&function T6(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+M3(n,t))}(n),e}function k3(n){return!!(He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||5.96e-8<Math.abs(n)&&Math.abs(n)<65504)}function M3(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Fb(n,t){return $l(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function D3(n,t){const e=$l(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Vt(n,()=>n.shaderSource(e,t)),Vt(n,()=>n.compileShader(e)),!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function R3(n,t){const e=$l(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Vt(n,()=>n.shaderSource(e,t)),Vt(n,()=>n.compileShader(e)),He().get("ENGINE_COMPILE_ONLY"))return e;if(!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw NR(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const k6=/ERROR: [0-9]+:([0-9]+):/g;function NR(n,t){const e=k6.exec(t);if(null==e)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(n);const r=+e[1],s=n.split("\n"),a=s.length.toString().length+2,i=s.map((y,C)=>Aa((C+1).toString(),a)+y);let c=0;for(let y=0;y<i.length;y++)c=Math.max(i[y].length,c);const d=i.slice(0,r-1),m=i.slice(r-1,r),g=i.slice(r);console.log(d.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Aa(m[0],c)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(g.join("\n"))}function $3(n){return $l(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function O3(n,t){if(Vt(n,()=>n.linkProgram(t)),!He().get("ENGINE_COMPILE_ONLY")&&!1===n.getProgramParameter(t,n.LINK_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function NI(n,t){if(Vt(n,()=>n.validateProgram(t)),!1===n.getProgramParameter(t,n.VALIDATE_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function F3(n,t){const e=$l(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Vt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Vt(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function L3(n,t){const e=$l(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Vt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),Vt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function M6(){return 2===He().getNumber("WEBGL_VERSION")?1:4}function B3(n){return $l(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function P3(n,t){const e=He().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0)throw new Error(`Requested texture size [${n}x${t}] is invalid.`);if(n>e||t>e)throw new Error(`Requested texture size [${n}x${t}] greater than WebGL maximum on this browser / GPU [${e}x${e}].`)}function z3(n){return $l(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function SR(n,t,e,r,s,a,i){const c=n.getAttribLocation(t,e);return-1!==c&&(Vt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),Vt(n,()=>n.vertexAttribPointer(c,s,n.FLOAT,!1,a,i)),Vt(n,()=>n.enableVertexAttribArray(c)),!0)}function V3(n,t,e){H3(n,e),Vt(n,()=>n.activeTexture(n.TEXTURE0+e)),Vt(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function D6(n,t){H3(n,t),Vt(n,()=>n.activeTexture(n.TEXTURE0+t)),Vt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function U3(n,t,e){return $l(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function W3(n,t,e){return n.getUniformLocation(t,e)}function G3(n,t,e,r){Vt(n,()=>V3(n,t,r)),Vt(n,()=>n.uniform1i(e,r))}function R6(n){Vt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,null)),Vt(n,()=>n.viewport(0,0,n.canvas.width,n.canvas.height)),Vt(n,()=>n.scissor(0,0,n.canvas.width,n.canvas.height))}function SI(n,t,e){Vt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Vt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function CR(n,t){Vt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Vt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Lb(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+q3(n,t))}function q3(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function $l(n,t,e){const r=Vt(n,()=>t());if(null==r)throw new Error(e);return r}function H3(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+n.TEXTURE0;if(r<n.TEXTURE0||r>e)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${e}].`)}function yd(n,t=2){return ze(n.slice(0,n.length-t))}function bd(n){if(0===n.length)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Bb(n){let t=[1,1,1];return 0===n.length||1===n.length&&1===n[0]||(t=[yd(n),...bd(n)]),t}function K3(n,t=!1){let e=He().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=He().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&He().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=e/2),t&&(e*=2,r*=2,1===(n=n.map((c,d)=>d>=n.length-2?Au(n[d]):n[d])).length&&(n=[2,n[0]])),2!==n.length&&(n=Ea(n).newShape);let s=ze(n),a=null;n.length<=1&&s<=e?a=[1,s]:2===n.length&&n[0]<=e&&n[1]<=e?a=n:3===n.length&&n[0]*n[1]<=e&&n[2]<=e?a=[n[0]*n[1],n[2]]:3===n.length&&n[0]<=e&&n[1]*n[2]<=e?a=[n[0],n[1]*n[2]]:4===n.length&&n[0]*n[1]*n[2]<=e&&n[3]<=e?a=[n[0]*n[1]*n[2],n[3]]:4===n.length&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(a=[n[0],n[1]*n[2]*n[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const c=yd(n);let d=2,m=2;n.length&&([d,m]=bd(n)),s=c*(d/2)*(m/2),a=Ns(s).map(g=>2*g)}else a=Ns(s);return a}function CI(n){return n%2==0}function Pb(n,t){if(_t(n=n.slice(-2),t=t.slice(-2))||!n.length||!t.length||0===n[0]||0===n[1]||0===t[0]||0===t[1])return!0;if(n.length!==t.length){const e=n[n.length-1],r=t[t.length-1];if(e===r||CI(e)&&CI(r)&&(1===n[0]||1===t[0]))return!0}return n[1]===t[1]&&CI(n[0])&&CI(t[0])}let II,_I;function Z3(n){if(null==II){const t=Lo(n);II=t.getParameter(t.MAX_TEXTURE_SIZE)}return II}function $6(){II=null}function O6(){_I=null}function j3(n){if(null==_I){const t=Lo(n);_I=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_I)}function X3(n){if(0===n)return 0;let t;const e=Lo(n);return t=wi(e,"EXT_disjoint_timer_query_webgl2")&&2===n?2:wi(e,"EXT_disjoint_timer_query")?1:0,t}function wi(n,t){return null!=n.getExtension(t)}function IR(n){try{if(null!=Lo(n))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Y3(n){if(0===n)return!1;const t=Lo(n);if(1===n){if(!wi(t,"OES_texture_float"))return!1}else if(!wi(t,"EXT_color_buffer_float"))return!1;return _R(t)}function J3(n){if(0===n)return!1;const t=Lo(n);if(1!==n){if(wi(t,"EXT_color_buffer_float"))return _R(t);const r="EXT_color_buffer_half_float";if(wi(t,r)){const s=t.getExtension(r);return function F6(n,t){const e=wR(n,t),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const c=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(i),c}(t,s)}return!1}return!(!wi(t,"OES_texture_float")||!wi(t,"WEBGL_color_buffer_float"))&&_R(t)}function _R(n){const t=wR(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(a),i}function Q3(n){return 2===n&&null!=Lo(n).fenceSync}function Og(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&q("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const an=He();function Ia(){let n,t,e,r,s,a,i,c,d,m;return 2===He().getNumber("WEBGL_VERSION")?(n="#version 300 es",t="in",e="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",c=He().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",d="",m="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(n="",t="attribute",e="varying",r="varying",s="texture2D",a="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",d="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",m="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:n,attribute:t,varyingVs:e,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:d,defineRound:m}}function xd(n,t,e="index"){const r=tn(t);return r.map((s,a)=>`int ${n[a]} = ${e} / ${s}; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${s}`:`index -= ${n[a]} * ${s}`};`).join("")}function TI(n,t,e="index"){const r=tn(t);return r.map((s,a)=>`int ${n[a]} = ${e} / outShapeStrides[${a}]; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * outShapeStrides[${a}]`:`index -= ${n[a]} * outShapeStrides[${a}]`};`).join("")}function TR(n){const t=tn(n).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}an.registerFlag("HAS_WEBGL",()=>an.getNumber("WEBGL_VERSION")>0),an.registerFlag("WEBGL_VERSION",()=>IR(2)?2:IR(1)?1:0),an.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),an.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===an.get("WEBGL_VERSION")),an.registerFlag("WEBGL_CPU_FORWARD",()=>!0),an.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),an.registerFlag("WEBGL_PACK",()=>an.getBool("HAS_WEBGL")),an.registerFlag("WEBGL_PACK_NORMALIZATION",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_CLIP",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_PACK_REDUCE",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_LAZILY_UNPACK",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_CONV_IM2COL",()=>an.getBool("WEBGL_PACK")),an.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Z3(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>j3(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=an.getNumber("WEBGL_VERSION");return 0===n?0:X3(n)}),an.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>an.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!sv()),an.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Y3(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!an.getBool("WEBGL_FORCE_F16_TEXTURES")&&an.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),an.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>J3(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Q3(an.getNumber("WEBGL_VERSION"))),an.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>an.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),an.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),an.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>sv()?1:-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),an.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),an.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),an.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),an.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),an.registerFlag("WEBGL_EXP_CONV",()=>!1),an.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>an.getBool("IS_TEST")),an.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),an.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),an.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),an.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const eL="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:tL}=re;function P6(n,t,e){const r=[];if(n.forEach(T=>{const k=ze(T.shapeInfo.logicalShape);if(T.shapeInfo.isUniform?r.push(`uniform float ${T.name}${k>1?`[${k}]`:""};`):(r.push(`uniform sampler2D ${T.name};`),r.push(`uniform int offset${T.name};`)),e.enableShapeUniforms){const{uniformShape:D}=ER(e.packedInputs,T.shapeInfo.logicalShape,T.shapeInfo.texShape);switch(D.length){case 1:r.push(`uniform int ${T.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${T.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${T.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${T.name}Shape;`)}r.push(`uniform ivec2 ${T.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(T=>{r.push(`uniform ${T.type} ${T.name}${T.arrayIndex?`[${T.arrayIndex}]`:""};`)});const s=r.join("\n"),a=n.map(T=>function z6(n,t,e=!1,r){let s="";return s+=e?nL(n,r):Fg(n,r),n.shapeInfo.logicalShape.length<=t.logicalShape.length&&(s+=e?function b9(n,t){const e=n.name,r=e.charAt(0).toUpperCase()+e.slice(1),s="get"+r+"AtOutCoords",a=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=tL(n.shapeInfo.logicalShape,t.logicalShape),d=yr(i),m=i-a;let g;const y=["x","y","z","w","u","v"];g=0===a?"":i<2&&c.length>=1?"coords = 0;":c.map($=>`coords.${y[$+m]} = 0;`).join("\n");let C="";C=i<2&&a>0?"coords":n.shapeInfo.logicalShape.map(($,V)=>`coords.${y[V+m]}`).join(", ");let T="return outputValue;";const D=1===ze(n.shapeInfo.logicalShape),R=1===ze(t.logicalShape);if(1!==a||D||R){if(D&&!R)T=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const $=a-2,V=a-1;c.indexOf($)>-1&&c.indexOf(V)>-1?T="return vec4(outputValue.x);":c.indexOf($)>-1?T="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(V)>-1&&(T="return vec4(outputValue.xx, outputValue.zz);")}}else T="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${d} coords = getOutputCoords();\n      ${g}\n      vec4 outputValue = get${r}(${C});\n      ${T}\n    }\n  `}(n,t):function x9(n,t){const e=n.name,r=e.charAt(0).toUpperCase()+e.slice(1),s="get"+r+"AtOutCoords",c=n.shapeInfo.logicalShape.length,d=t.logicalShape.length;if(!n.shapeInfo.isUniform&&c===d&&null==n.shapeInfo.flatOffset&&_t(n.shapeInfo.texShape,t.texShape))return`\n      float ${s}() {\n        return sampleTexture(${e}, resultUV);\n      }\n    `;const m=yr(d),g=tL(n.shapeInfo.logicalShape,t.logicalShape),y=d-c;let C;const T=["x","y","z","w","u","v"];C=0===c?"":d<2&&g.length>=1?"coords = 0;":g.map(D=>`coords.${T[D+y]} = 0;`).join("\n");let k="";return k=d<2&&c>0?"coords":n.shapeInfo.logicalShape.map((D,M)=>`coords.${T[M+y]}`).join(", "),`\n    float ${s}() {\n      ${m} coords = getOutputCoords();\n      ${C}\n      return get${r}(${k});\n    }\n  `}(n,t)),s}(T,t,e.packedInputs,e.enableShapeUniforms)).join("\n"),i=t.texShape,c=Ia(),d=function W6(n){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${n.texture2D}(textureSampler, uv).r;\n    }\n  `}(c);let m,g,y=function H6(n){return`${n.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${n.varyingFs} vec2 resultUV;\n    ${n.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${n.defineSpecialNaN}\n    ${n.defineSpecialInf}\n    ${n.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${K6}\n    ${Z6}\n    ${j6}\n  `}(c);return t.isPacked?(m=function V6(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function Y6(n,t,e){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,e);case 2:return function a9(n,t,e){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(_t(n,t))return e?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(n[1]/2);return e?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function Q6(n,t,e){if(e)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(n[2]/2),a=s*Math.ceil(n[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(n,t,e);default:return function t9(n,t,e){if(e)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(n[n.length-1]/2),a=s*Math.ceil(n[n.length-2]/2);let i=a,c="",d="b, r, c";for(let m=2;m<n.length-1;m++)i*=n[n.length-m-1],c=`\n      int b${m} = index / ${i};\n      index -= b${m} * ${i};\n    `+c,d=`b${m}, `+d;return`\n    ivec${n.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${c}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${n.length}(${d});\n    }\n  `}(n,t,e)}}(t.logicalShape,i,e.enableShapeUniforms),g=function q6(n){return`\n    void setOutput(vec4 val) {\n      ${n.output} = val;\n    }\n  `}(c)):(m=function U6(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function J6(n,t,e){return 1===t[0]?e?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?e?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,e);case 2:return function i9(n,t,e){return _t(n,t)?e?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===n[1]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===n[0]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:e?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${n[1]};\n      int c = index - r * ${n[1]};\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function e9(n,t,e){if(e)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${TI(["r","c","d"],n)}\n    return ivec3(r, c, d);\n  }\n`;const r=xd(["r","c","d"],n);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(n,t,e);case 4:return function n9(n,t,e){if(e)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${TI(["r","c","d","d2"],n)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=xd(["r","c","d","d2"],n);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(n,t,e);case 5:return function r9(n,t){const e=xd(["r","c","d","d2","d3"],n);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(n,t);case 6:return function s9(n,t){const e=xd(["r","c","d","d2","d3","d4"],n);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,e.enableShapeUniforms),g=function G6(n){return`\n    void setOutput(float val) {\n      ${n.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),e.packedInputs&&(y+=X6),[y,d,g,s,m,a,e.userCode].join("\n")}function Fg(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function u9(n,t){const e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${e};}`;const[s,a]=n.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=wd(e);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `;const[c,d]=n.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${c}, ${d}, ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 1:return function c9(n,t){const e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Lg(n)}\n      }\n    `;const s=n.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const c=wd(e);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${c}) + 0.5) / float(${e}TexShape[0]));\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${c}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${c}) + 0.5) / float(${e}TexShape[1]), 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${c}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${c});\n      return sampleTexture(${e}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${c});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 2:return function h9(n,t){const e=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n.shapeInfo.texShape;if(null!=a&&_t(e,a))return t?`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${a[0]}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const{newShape:i,keptDims:c}=Ea(e);if(i.length<e.length){const T=["row","col"];return`\n      ${Fg(Bg(n,i),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${Pg(T,c)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Lg(n)}\n      }\n    `;const m=a[0],g=a[1],y=wd(r);return 1===g?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${y}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${y}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${m}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===m?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${y}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${y}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${g}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${y};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${y};\n    vec2 uv = uvFromFlat(${m}, ${g}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(n,t);case 3:return function p9(n,t){const e=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e[1]*e[2],i=e[2],{newShape:c,keptDims:d}=Ea(e);if(c.length<e.length){const M=["row","col","depth"];return`\n        ${Fg(Bg(n,c),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${Pg(M,d)});\n        }\n      `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${Lg(n)}\n      }\n    `;const g=n.shapeInfo.texShape,y=g[0],C=g[1],T=n.shapeInfo.flatOffset;if(C===a&&null==T)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${C}.0, ${y}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(C===i&&null==T)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${C}.0, ${y}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const k=wd(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${k};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${k};\n        vec2 uv = uvFromFlat(${y}, ${C}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(n,t);case 4:return function g9(n,t){const e=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e[3],i=e[2]*a,c=e[1]*i,{newShape:d,keptDims:m}=Ea(e);if(d.length<e.length){const V=["row","col","depth","depth2"];return`\n      ${Fg(Bg(n,d),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${Pg(V,m)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${c}, ${i}, ${a}, 1)));\n        ${Lg(n)}\n      }\n    `;const g=n.shapeInfo.flatOffset,y=n.shapeInfo.texShape,C=y[0],T=y[1],k=`int stride2 = ${r}Shape[3];`,D=`int stride1 = ${r}Shape[2] * stride2;`,M=`int stride0 = ${r}Shape[1] * stride1;`;if(T===c&&null==g)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${k}\n        ${D}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${T}.0, ${C}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(T===a&&null==g)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${T}.0, ${C}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const R=wd(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${k}\n      ${D}\n      ${M}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${R});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${C}, ${T}, index + ${R});\n      return sampleTexture(${r}, uv);\n    }\n  `}(n,t);case 5:return function v9(n){const t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,c=t[1]*i,{newShape:d,keptDims:m}=Ea(t);if(d.length<t.length){const M=["row","col","depth","depth2","depth3"];return`\n      ${Fg(Bg(n,d))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Pg(M,m)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${Lg(n)}\n      }\n    `;const g=n.shapeInfo.flatOffset,y=n.shapeInfo.texShape,C=y[0],T=y[1];if(T===c&&null==g)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${T}.0, ${C}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(T===s&&null==g)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${T}.0, ${C}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${wd(e)};\n      vec2 uv = uvFromFlat(${C}, ${T}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);case 6:return function y9(n){const t=n.shapeInfo.logicalShape,e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:s,keptDims:a}=Ea(t);if(s.length<t.length){const R=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Fg(Bg(n,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Pg(R,a)});\n      }\n    `}const i=t[5],c=t[4]*i,d=t[3]*c,m=t[2]*d,g=t[1]*m;if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${g}, ${m}, ${d}, ${c})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Lg(n)}\n      }\n    `;const y=n.shapeInfo.flatOffset,C=n.shapeInfo.texShape,T=C[0],k=C[1];if(k===g&&null==y)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${m}, ${d}, ${c}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${k}.0, ${T}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(k===i&&null==y)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${k}.0, ${T}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${g} + col * ${m} + depth * ${d} +\n          depth2 * ${c} + depth3 * ${i} + depth4 + ${wd(e)};\n      vec2 uv = uvFromFlat(${T}, ${k}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function nL(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return function o9(n){const t=n.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${Ia().texture2D}(${t}, halfCR);\n    }\n  `}(n);case 1:return function l9(n,t){const e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),s=n.shapeInfo.texShape,a=Ia();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(n,t);case 2:return function f9(n,t){const e=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n.shapeInfo.texShape,i=a[0],c=a[1],d=Ia();if(null!=a&&_t(e,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${d.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${i}.0);\n\n        return ${d.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${d.texture2D}(${r}, uv);\n    }\n  `;const m=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${m[0]}, ${m[1]}, row, col);\n      return ${d.texture2D}(${r}, uv);\n    }\n  `}(n,t);case 3:return function d9(n,t){const e=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const T=[1,2],D=["b","row","col"];return`\n        ${nL(Bg(n,e.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${Pg(D,T)});\n        }\n      `}const c=Ia();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${c.texture2D}(${r}, uv);\n    }\n  `;const d=i[0],m=i[1],g=Math.ceil(e[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${d}, ${m}, ${g*Math.ceil(e[1]/2)}, ${g}, b, row, col);\n      return ${c.texture2D}(${r}, uv);\n    }\n  `}(n,t);default:return function m9(n,t){const e=n.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Ia();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${e}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${e}, uv);\n    }\n  `;const a=n.shapeInfo.logicalShape,i=a.length,c=n.shapeInfo.texShape,d=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],m=d[0],g=d[1],y=Math.ceil(a[i-1]/2);let C=y*Math.ceil(a[i-2]/2),T="int b, int row, int col",k=`b * ${C} + (row / 2) * ${y} + (col / 2)`;for(let D=2;D<i-1;D++)T=`int b${D}, `+T,C*=a[i-D-1],k=`b${D} * ${C} + `+k;return`\n    vec4 ${r}(${T}) {\n      int index = ${k};\n      int texR = index / ${g};\n      int texC = index - texR * ${g};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${g}, ${m});\n      return ${s.texture2D}(${e}, uv);\n    }\n  `}(n,t)}}const K6="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Z6="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",j6="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",X6="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function wd(n){return`offset${n}`}function Lg(n){const t=n.name,e=ze(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`\n    for (int i = 0; i < ${e}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function yr(n){if(n<=1)return"int";if(2===n)return"ivec2";if(3===n)return"ivec3";if(4===n)return"ivec4";if(5===n)return"ivec5";if(6===n)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function ER(n,t,e){const{newShape:r,keptDims:s}=Ea(t),a=t.length,i=n&&3===a&&1===t[0],c=i?t.slice(1):r,d=!n&&a>1&&!_t(t,e)&&r.length<a||i;return{useSqueezeShape:d,uniformShape:d?c:t,keptDims:s}}function Bg(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Pg(n,t){return t.map(e=>n[e]).join(", ")}function sL(n,t,e){const r=[],s=[];let a,i,c,d=null,m=null;m=n.getUniformLocation(e,"NAN",!1),1===He().getNumber("WEBGL_VERSION")&&(d=n.getUniformLocation(e,"INFINITY",!1));const g=!1;for(const y of t.variableNames){const C={name:y,uniform:n.getUniformLocation(e,y,g),offset:n.getUniformLocation(e,`offset${y}`,g)};t.enableShapeUniforms&&(C.shape=n.getUniformLocation(e,`${y}Shape`,g),C.texShape=n.getUniformLocation(e,`${y}TexShape`,g)),r.push(C)}if(t.enableShapeUniforms&&(a=n.getUniformLocation(e,"outShape",g),c=n.getUniformLocation(e,"outShapeStrides",g),i=n.getUniformLocation(e,"outTexShape",g)),t.customUniforms)for(const y of t.customUniforms)s.push(n.getUniformLocation(e,y.name,g));return{variablesLocations:r,customUniformLocations:s,infLoc:d,nanLoc:m,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:i}}function aL(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,r)=>{const s=e.logicalShape,a=t[r],i=a.shape;if(!_t(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const c=e.texShape,d=a.isUniform?null:a.texData.texShape;if(!_t(c,d))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${c} and ${d} must match`)})}function ha(n){return He().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}class C9{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Rg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Ia();this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?TI(["r","c","d"],t):xd(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class I9{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Rg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Ia();this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?TI(["r","c","d"],t):xd(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class _9{constructor(t){this.variableNames=["A"],this.outTexUsage=oi.DOWNLOAD;const e=Ia();this.outputShape=t,this.userCode=`\n      ${eL}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class T9{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=oi.DOWNLOAD;const e=Ia();this.outputShape=t,this.userCode=`\n      ${eL}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}const A9={R:0,G:1,B:2,A:3};class iL{constructor(t,e=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Ia();this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length);let a="result";e&&(a="floor(result * 255. + 0.5)");let i="";for(let c=0;c<r.length;c++)i+=`\n          if(offset == ${c}) {\n            result = values[${A9[r[c]]}];\n          }`;this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":TR(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${r.length});\n\n        flatIndex = idiv(flatIndex, ${r.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${i}\n        }\n        ${s.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class E9{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Ia();this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length);let s="",a="result";e&&(a="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let c=0;c<=1;c++){const d=2*i+c;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${c} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${c};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${r.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${d}] = values[0];\n            } else if (offset == 1) {\n              result[${d}] = values[1];\n            } else if (offset == 2) {\n              result[${d}] = values[2];\n            } else {\n              result[${d}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":TR(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${r.output} = ${a};\n        }\n    `}}function oL(n){const t=Ia();return D3(n,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function uL(n){return F3(n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function lL(n){return L3(n,new Uint16Array([0,1,2,2,1,3]))}function zb(n,t,e,r,s,a){P3(t,e);const i=B3(n),c=n.TEXTURE_2D;return Vt(n,()=>n.bindTexture(c,i)),Vt(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Vt(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Vt(n,()=>n.texParameteri(c,n.TEXTURE_MIN_FILTER,n.NEAREST)),Vt(n,()=>n.texParameteri(c,n.TEXTURE_MAG_FILTER,n.NEAREST)),1===He().getNumber("WEBGL_VERSION")?Vt(n,()=>n.texImage2D(c,0,r,t,e,0,s,a,null)):Vt(n,()=>n.texStorage2D(c,1,r,t,e)),Vt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function kR(n){return n.internalFormatFloat}function cL(n,t,e,r){const[s,a]=Ob(t,e);return zb(n,s,a,kR(r),r.textureFormatFloat,n.FLOAT)}function MR(n){return n.internalFormatHalfFloat}function fL(n,t,e,r){const[s,a]=Ob(t,e);return zb(n,s,a,MR(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function DR(n){return n.downloadTextureFormat}function hL(n,t,e,r){const[s,a]=Ob(t,e);return zb(n,s,a,DR(r),n.RGBA,n.UNSIGNED_BYTE)}function RR(n){return n.internalFormatPackedFloat}function dL(n,t,e,r){const[s,a]=$g(t,e);return zb(n,s,a,RR(r),n.RGBA,n.FLOAT)}function $R(n){return n.internalFormatPackedHalfFloat}function pL(n,t,e,r){const[s,a]=$g(t,e);return zb(n,s,a,$R(r),n.RGBA,r.textureTypeHalfFloat)}function mL(n,t,e){return Vt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),SR(n,t,"clipSpacePos",e,3,20,0)&&SR(n,t,"uv",e,2,20,12)}function gL(n,t,e,r,s,a){let i,c,d;Vt(n,()=>n.bindTexture(n.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(e*r*4),c=n.UNSIGNED_BYTE,d=n.RGBA):(i=new Float32Array(e*r*4),c=n.FLOAT,d=a.internalFormatPackedFloat),i.set(s),2===He().getNumber("WEBGL_VERSION")?Vt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,r,n.RGBA,c,i)):Vt(n,()=>n.texImage2D(n.TEXTURE_2D,0,d,e,r,0,n.RGBA,c,i)),Vt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function vL(n,t,e){Vt(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?2===He().getNumber("WEBGL_VERSION")?Vt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):Vt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):2===He().getNumber("WEBGL_VERSION")?Vt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):Vt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),Vt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function yL(n,t,e,r){const s=n.createBuffer();Vt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const c=16*t*e;return Vt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,c,n.STREAM_READ)),Vt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),Vt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function bL(n,t,e){const r=n,s=new Float32Array(e);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function xL(n,t,e,r){const[s,a]=Ob(t,e),c=new Uint8Array(function I6(n,t){return n*t}(t*e,4));return Vt(n,()=>n.readPixels(0,0,s,a,r.downloadTextureFormat,n.UNSIGNED_BYTE,c)),new Float32Array(c.buffer)}function wL(n,t,e,r,s,a,i,c){const d=n,m=new Float32Array(function _6(n,t){const[e,r]=$g(n,t);return e*r*4}(a,i));return d.bindBuffer(d.PIXEL_PACK_BUFFER,t),d.getBufferSubData(d.PIXEL_PACK_BUFFER,0,m),d.bindBuffer(d.PIXEL_PACK_BUFFER,null),m}function NL(n,t,e){const r=new Float32Array(t*e*4);return Vt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,r)),r}class EI{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=He().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,E3(e,t)):this.gl=Lo(e),t=this.gl,2===He().getNumber("WEBGL_VERSION")){const a=t;this.createVertexArray=()=>Vt(a,()=>a.createVertexArray()),this.bindVertexArray=i=>Vt(a,()=>a.bindVertexArray(i)),this.deleteVertexArray=i=>Vt(a,()=>a.deleteVertexArray(i)),this.getVertexArray=()=>Vt(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(null!=t){const a=t.getExtension("OES_vertex_array_object");if(null==a)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Vt(t,()=>a.createVertexArrayOES()),this.bindVertexArray=i=>Vt(t,()=>a.bindVertexArrayOES(i)),this.deleteVertexArray=i=>Vt(t,()=>a.deleteVertexArrayOES(i)),this.getVertexArray=()=>Vt(t,()=>t.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===He().getNumber("WEBGL_VERSION")){const i="OES_texture_half_float";if(this.textureFloatExtension=Fb(this.gl,"OES_texture_float"),wi(this.gl,i))this.textureHalfFloatExtension=Fb(this.gl,i);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),wi(this.gl,s))this.colorBufferHalfFloatExtension=Fb(this.gl,s);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",wi(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else{if(!wi(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=uL(this.gl),this.indexBuffer=lL(this.gl),this.framebuffer=z3(this.gl),this.textureConfig=wR(this.gl,this.textureHalfFloatExtension)}get debug(){return He().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Vt(t,()=>t.finish()),Vt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Vt(t,()=>t.deleteFramebuffer(this.framebuffer)),Vt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Vt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Vt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),cL(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),fL(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),hL(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),vL(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,r,s){this.throwIfDisposed(),gL(this.gl,t,e,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),pL(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),dL(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(CR(this.gl,this.framebuffer),this.outputTexture=null),Vt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,r){return this.downloadMatrixDriver(t,()=>xL(this.gl,e,r,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,r,s,a,i){return wL(this.gl,t,0,0,0,a,i)}downloadFloat32MatrixFromBuffer(t,e){return bL(this.gl,t,e)}createBufferFromTexture(t,e,r){this.bindTextureToFrameBuffer(t);const s=yL(this.gl,e,r);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,r;if(He().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,a=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),r=()=>{const i=s.clientWaitSync(a,0,0);return i===s.ALREADY_SIGNALED||i===s.CONDITION_SATISFIED},e=a}else He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(e,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:e,isFencePassed:r}}downloadMatrixFromPackedTexture(t,e,r){return this.downloadMatrixDriver(t,()=>NL(this.gl,e,r))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=oL(e));const r=$3(e);let s;return Vt(e,()=>e.attachShader(r,this.vertexShader)),Vt(e,()=>e.attachShader(r,t)),O3(e,r),s=Object.assign(r,{vao:this.createVertexArray()}),this.bindVertexArray(s.vao),Vt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(mL(e,s,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&NI(e,s),this.setProgram(s),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(Vt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&NI(this.gl,this.program)),Vt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,r=!0){return this.throwIfDisposed(),r?U3(this.gl,t,e):W3(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Vt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,r){this.throwIfDisposed(),this.throwIfNoProgram(),G3(this.gl,t,e,r)}setOutputMatrixTexture(t,e,r){this.setOutputMatrixTextureDriver(t,r,e)}setOutputPackedMatrixTexture(t,e,r){this.throwIfDisposed();const[s,a]=$g(e,r);this.setOutputMatrixTextureDriver(t,s,a)}setOutputMatrixWriteRegion(t,e,r,s){this.setOutputMatrixWriteRegionDriver(r,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&NI(this.gl,this.program),Lb(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Vt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Vt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Fb(this.gl,2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),a=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,a),a}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,r=this.getQueryTimerExtensionWebGL2();return void e.endQuery(r.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){var e=this;return(0,Fe.Z)(function*(){return yield zl(()=>e.disposed||e.isQueryAvailable(t,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),e.getQueryTime(t,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(t,e){if(0===e)return null;if(2===e){const r=this.gl;return r.getQueryParameter(t,r.QUERY_RESULT)/1e6}{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(t,r.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function k9(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:r}=this.itemsToPoll[e];r()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in He().platform&&(r=He().platform.setTimeoutCustom.bind(He().platform)),zl(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,r)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),SI(this.gl,t,this.framebuffer),this.debug&&Lb(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(SI(this.gl,this.outputTexture,this.framebuffer),this.debug&&Lb(this.gl)):CR(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const r=e();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(t,e,r){this.throwIfDisposed();const s=this.gl;SI(s,t,this.framebuffer),this.debug&&Lb(s),this.outputTexture=t,Vt(s,()=>s.viewport(0,0,e,r)),Vt(s,()=>s.scissor(0,0,e,r))}setOutputMatrixWriteRegionDriver(t,e,r,s){this.throwIfDisposed(),Vt(this.gl,()=>this.gl.scissor(t,e,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:M9,bincountImpl:SL,bincountReduceImpl:D9,castImpl:R9,ceilImpl:$9,concatImpl:O9,equalImpl:F9,expImpl:L9,expm1Impl:B9,floorImpl:P9,gatherNdImpl:z9,gatherV2Impl:V9,greaterImpl:U9,greaterEqualImpl:W9,lessImpl:G9,lessEqualImpl:q9,linSpaceImpl:H9,logImpl:K9,maxImpl:Z9,maximumImpl:j9,minimumImpl:X9,multiplyImpl:Y9,negImpl:J9,notEqualImpl:Q9,prodImpl:eq,raggedGatherImpl:tq,raggedRangeImpl:nq,raggedTensorToTensorImpl:rq,rangeImpl:sq,rsqrtImpl:aq,scatterImpl:iq,sigmoidImpl:oq,simpleAbsImpl:CL,sliceImpl:uq,sparseFillEmptyRowsImpl:lq,sparseReshapeImpl:cq,sparseSegmentReductionImpl:IL,sqrtImpl:fq,staticRegexReplaceImpl:hq,stridedSliceImpl:dq,stringNGramsImpl:pq,stringSplitImpl:mq,stringToHashBucketFastImpl:gq,subImpl:vq,tileImpl:yq,topKImpl:bq,transposeImpl:OR,uniqueImpl:xq}=Ll;function _L(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function _a(n,t){return 1===t?[n]:_L(n,t)}class Nq{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=ha(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=_a("rc",this.rank),r=yr(this.rank),s=this.getOutOfBoundsCondition(e),a=this.getSetup(e),i=this.getOutput(e);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let i=2;i<this.rank;i++)a=`${t[t.length-1-i]},`+a;e.push(a)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let r=this.rank-2;r<this.rank;r++)e+=`${t[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2);return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class TL{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length);let r="";for(let s=0;s<4;s++){let a="thisRC = rc;";s%2==1&&(a+="thisRC.z += 1;"),s>1&&(a+="thisRC.y += 1;"),r+=`\n        ${a}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}this.userCode=`\n      ${function Sq(n,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function B6(n,t,e="index"){const s=function L6(n,t){const e=n.length,r=n.map(a=>`${t}[${a}]`),s=new Array(e-1);s[e-2]=r[e-1];for(let a=e-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(n.map((a,i)=>i),t);return s.map((a,i)=>`int ${n[i]} = ${e} / ${s[i]}; ${i===s.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${s[i]}`:`index -= ${n[i]} * ${s[i]}`};`).join("")}(["r","c","d"],"inputShape"):xd(["r","c","d"],n)}\n      return ivec3(r, c, d);\n    }\n  `}(e,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":TR(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${r}\n\n        setOutput(result);\n      }\n    `}}class Cq{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,r){const s=EL(e,r),a=kL(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=AL(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const d=this.freeTextures[a].pop();return this.usedTextures[a].push(d),d}let c;return s===Ws.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===Ws.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===Ws.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===Ws.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===Ws.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(c),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),c}releaseTexture(t,e,r,s){if(null==this.freeTextures)return;const a=EL(r,s),i=kL(e,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);const c=AL(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),d=He().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==d&&this._numBytesAllocated>d?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=c):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const m=this.usedTextures[i],g=m&&m.indexOf(t);if(null==g||g<0)throw new Error("Cannot release a texture that was never provided by this texture manager");m[g]=m[m.length-1],m.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function AL(n,t,e,r,s){const a=function _q(n,t){switch(n){case Ws.PACKED_2X2_FLOAT32:return RR(t);case Ws.PACKED_2X2_FLOAT16:return $R(t);case Ws.UNPACKED_FLOAT32:return kR(t);case Ws.UNPACKED_FLOAT16:return MR(t);case Ws.PACKED_4X1_UNSIGNED_BYTE:return DR(t);default:throw new Error(`Unknown physical texture type ${n}`)}}(t,r);let i;if(s){const[d,m]=$g(n[0],n[1]);i=d*m}else{const[d,m]=Ob(n[0],n[1]);i=d*m}const c=function Iq(n,t){if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(e,a);return i*c}function EL(n,t){if(n===oi.UPLOAD)return Ws.PACKED_2X2_FLOAT32;if(n===oi.RENDER||null==n)return function Tq(n){return He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Ws.PACKED_2X2_FLOAT32:Ws.UNPACKED_FLOAT32:n?Ws.PACKED_2X2_FLOAT16:Ws.UNPACKED_FLOAT16}(t);if(n===oi.DOWNLOAD||n===oi.PIXELS)return Ws.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function kL(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class Iu{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const ML="return abs(x);",sf="return x;";class af{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Bq{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length);const e=t.length,r=_a("rc",e),s=yr(e),a=function wq(n,t){if(1===n)return"rc";let e="";for(let r=0;r<n;r++)e+=t[r],r<n-1&&(e+=",");return e}(e,r),i=r.slice(-2),c=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${c}));\n      }\n    `}}const Pq=qh,kI={},Wq=He().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");let DL=(()=>{class n extends Pl{nextDataId(){return n.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!He().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let r;if(null!=e){if(e instanceof EI)r=e;else{const s=Lo(He().getNumber("WEBGL_VERSION"),e);r=new EI(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Lo(He().getNumber("WEBGL_VERSION"));r=new EI(s),this.binaryCache=function Uq(n){return n in kI||(kI[n]={}),kI[n]}(He().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=r,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Cq(this.gpgpu),this.numMBBeforeWarning=function qq(){return null==He().global.screen?1024:He().global.screen.height*He().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new Bl(this,Ha())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,r,s,a,i,c){const d=this.makeTensorInfo(r,s),m=this.texData.get(d.dataId);m.isPacked=!1,m.texture={texture:e,texShape:[a,i]},m.texShape=[a,i];const g=Bb(r),y=new iL(g,!1,c),C=this.runWebGLProgram(y,[d],s,[[a,i]]);return C.shape=r,m.texture=null,this.disposeIntermediateTensorInfo(d),C.dataId}write(e,r,s){if((He().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||He().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===s&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:r,dtype:s,values:e,usage:oi.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,r,s,a,i){if(He().getBool("DEBUG")&&this.checkNumericalProblems(r),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:a,values:r,usage:oi.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const r=this.texData.get(e),{values:s,dtype:a,complexTensorInfos:i,slice:c,shape:d,isPacked:m}=r;if(null!=c){let T;T=m?new af(d,sf):new Iu(d,sf);const k=this.runWebGLProgram(T,[{dataId:e,shape:d,dtype:a}],a),D=this.readSync(k.dataId);return this.disposeIntermediateTensorInfo(k),D}if(null!=s)return this.convertAndCacheOnCPU(e);if("string"===a)return s;const g=null!=this.activeTimers;let y,C;return g&&(y=Cs()),C="complex64"===a?Eo(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(e),g&&(this.downloadWaitMs+=Cs()-y),this.convertAndCacheOnCPU(e,C)}read(e){var r=this;return(0,Fe.Z)(function*(){if(r.pendingRead.has(e)){const M=r.pendingRead.get(e);return new Promise(R=>M.push(R))}const s=r.texData.get(e),{values:a,shape:i,slice:c,dtype:d,complexTensorInfos:m,isPacked:g}=s;if(null!=c){let M;M=g?new af(i,sf):new Iu(i,sf);const R=r.runWebGLProgram(M,[{dataId:e,shape:i,dtype:d}],d),$=r.read(R.dataId);return r.disposeIntermediateTensorInfo(R),$}if(null!=a)return r.convertAndCacheOnCPU(e);if(He().getBool("DEBUG")&&!He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===He().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let C,T,y=null;if("complex64"!==d&&He().get("WEBGL_BUFFER_SUPPORTED")){C=r.decode(e);const M=r.texData.get(C.dataId);y=r.gpgpu.createBufferFromTexture(M.texture.texture,...wI(i))}if(r.pendingRead.set(e,[]),"complex64"!==d&&(yield r.gpgpu.createAndWaitForFence()),"complex64"===d){const M=yield Promise.all([r.read(m.real.dataId),r.read(m.imag.dataId)]);T=Eo(M[0],M[1])}else if(null==y)T=r.getValuesFromTexture(e);else{const M=ze(i);T=r.gpgpu.downloadFloat32MatrixFromBuffer(y,M)}if(null!=C&&r.disposeIntermediateTensorInfo(C),null!=y){const M=r.gpgpu.gl;Vt(M,()=>M.deleteBuffer(y))}const k=r.convertAndCacheOnCPU(e,T),D=r.pendingRead.get(e);return r.pendingRead.delete(e),D.forEach(M=>M(k)),r.pendingDisposal.has(e)&&(r.pendingDisposal.delete(e),r.disposeData(e)&&Ha().removeDataId(e,r),r.pendingDeletes--),k})()}readToGPU(e,r={}){const s=this.texData.get(e),{values:a,shape:i,slice:c,dtype:d,isPacked:m,texture:g}=s;if("complex64"===d)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=c){let k;k=m?new af(i,sf):new Iu(i,sf);const D=this.runWebGLProgram(k,[{dataId:e,shape:i,dtype:d}],d),M=this.readToGPU(D,r);return this.disposeIntermediateTensorInfo(D),M}if(null==g)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const y=this.decode(e,r.customTexShape),C=Ha().makeTensorFromTensorInfo(y),T=this.texData.get(y.dataId);return Object.assign({tensorRef:C},T.texture)}bufferSync(e){const r=this.readSync(e.dataId);if("string"===e.dtype)try{const s=r.map(a=>fo(a));return En(e.shape,e.dtype,s)}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return En(e.shape,e.dtype,r)}checkNumericalProblems(e){if(null!=e)for(let r=0;r<e.length;r++){const s=e[r];if(!k3(s))throw He().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:r,dtype:s,isPacked:a}=this.texData.get(e),i=ze(r);if(He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const T=this.decode(e),k=this.texData.get(T.dataId),D=this.gpgpu.downloadMatrixFromPackedTexture(k.texture.texture,...wI(r)).subarray(0,i);return this.disposeIntermediateTensorInfo(T),D}const c=He().getBool("WEBGL_PACK")&&!0===a,d=c?Bb(r):r,m=c?new T9(d):new _9(d),g=this.runWebGLProgram(m,[{shape:d,dtype:s,dataId:e}],"float32"),y=this.texData.get(g.dataId),C=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(y.texture.texture,y.texShape[0],y.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(g),C}timerAvailable(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){var r=this;const s=this.activeTimers,a=[];let i=!1;null==this.programTimersStack?(this.programTimersStack=a,i=!0):this.activeTimers.push(a),this.activeTimers=a,e();const c=Ti(this.activeTimers.map(g=>g.query)).filter(g=>null!=g),d=Ti(this.activeTimers.map(g=>g.name)).filter(g=>null!=g);this.activeTimers=s,i&&(this.programTimersStack=null);const m={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,Fe.Z)(function*(){if(He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const g=yield Promise.all(c);m.kernelMs=Pe(g),m.getExtraProfileInfo=()=>g.map((y,C)=>({name:d[C],ms:y})).map(y=>`${y.name}: ${y.ms}`).join(", ")}else m.kernelMs={error:"WebGL query timers are not supported in this environment."};return r.uploadWaitMs=0,r.downloadWaitMs=0,m})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Cs(),endMs:null}}endTimer(e){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Cs(),e)}getQueryTime(e){var r=this;return(0,Fe.Z)(function*(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?r.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs})()}disposeData(e,r=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(r?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!r&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return null!=s&&(this.disposeData(s.real.dataId,r),this.disposeData(s.imag.dataId,r)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:r,dtype:s,texShape:a,usage:i,isPacked:c,slice:d}=this.texData.get(e),m=d&&d.origDataId||e,g=this.dataRefCount.get(m);g>1?this.dataRefCount.set(m,g-1):(this.dataRefCount.delete(m),null!=r&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(r,a,i,c)));const y=this.texData.get(e);y.texture=null,y.texShape=null,y.isPacked=!1,y.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,r=Wq){return He().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>null==this.texData.get(s.dataId).texture&&ze(s.shape)<r)}getGPGPUContext(){return this.gpgpu}where(e){Ra("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const r=e.dataSync();return Pq(e.shape,r)}packedUnaryOp(e,r,s){const a=new af(e.shape,r),i=this.compileAndRun(a,[e],s);return Ha().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const a=CL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(He().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ML,e.dtype);const r=new Iu(e.shape,ML),s=this.compileAndRun(r,[e]);return Ha().makeTensorFromTensorInfo(s)}makeTensorInfo(e,r,s){let a;if("string"===r&&null!=s&&s.length>0&&Hs(s[0])){const i=s.map(c=>_i(c));a=this.write(i,e,r)}else a=this.write(s,e,r);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:r}}makeOutput(e,r,s){return Ha().makeTensorFromTensorInfo(this.makeTensorInfo(e,r,s),this)}unpackTensor(e){const r=new Bq(e.shape);return this.runWebGLProgram(r,[e],e.dtype)}packTensor(e){const r=new Nq(e.shape);return this.runWebGLProgram(r,[e],e.dtype,null,!0)}packedReshape(e,r){const s=[yd(e.shape),...bd(e.shape)],a={dtype:e.dtype,shape:s,dataId:e.dataId},i=[yd(r),...bd(r)],c=new TL(i,s),g=this.runWebGLProgram(c,[a],e.dtype,[s],!0);return{dataId:g.dataId,shape:r,dtype:g.dtype}}decode(e,r){const s=this.texData.get(e),{isPacked:a,shape:i,dtype:c}=s;null!=r&&q(ze(i)<=r[0]*r[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const d=Bb(i);let m;m=a?new I9(d):new C9(d);const y=[null!=r?r:wI(d)];return{dtype:c,shape:i,dataId:this.runWebGLProgram(m,[{shape:d,dtype:c,dataId:e}],c,y,!0,r).dataId}}runWebGLProgram(e,r,s,a,i=!1,c){const d=this.makeTensorInfo(e.outputShape,s),m=this.texData.get(d.dataId);if(e.packedOutput&&(m.isPacked=!0),e.outPackingScheme===Rg.DENSE){const $=null!=c?c:wI(e.outputShape);m.texShape=$.map(V=>2*V)}if(null!=e.outTexUsage&&(m.usage=e.outTexUsage),0===ze(d.shape))return m.values=jr(d.dtype,0),d;const g=[],y=r.map($=>{if("complex64"===$.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let V=this.texData.get($.dataId);if(null==V.texture){if(!e.packedInputs&&ze($.shape)<=He().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:$.shape,texData:null,isUniform:!0,uniformValues:V.values};e.packedInputs&&(V.isPacked=!0,V.shape=$.shape)}if(this.uploadToGPU($.dataId),!!V.isPacked!=!!e.packedInputs)$=V.isPacked?this.unpackTensor($):this.packTensor($),g.push($),V=this.texData.get($.dataId);else if(V.isPacked&&!Pb(V.shape,$.shape)){const G=$,K=$.shape;$.shape=V.shape,$=this.packedReshape($,K),g.push($),V=this.texData.get($.dataId),G.shape=K}return{shape:$.shape,texData:V,isUniform:!1}});this.uploadToGPU(d.dataId);const C={shape:d.shape,texData:m,isUniform:!1},T=function S9(n,t,e){let r="";t.concat(e).forEach(i=>{const c=null!=i.texData&&null!=i.texData.slice&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const d=i.texData.texShape,{useSqueezeShape:m,uniformShape:g,keptDims:y}=ER(n.packedInputs,i.shape,d);let C="",T="",k="";if(1===g.length&&n.packedInputs){const K=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)];C=`${K[0]>1}_${K[1]>1}`}else if(2!==g.length||n.packedInputs){if(g.length>2&&!n.packedInputs){const K=tn(g);k=`${K[0]===d[1]}_${K[K.length-1]===d[1]}`}}else T=`${g[0]>1}_${g[1]>1}`;const D=i.shape.length,M=2===g.length&&_t(i.shape,d),R=1===ze(i.shape),$=tl(i.shape,e.shape),V=!n.packedInputs&&D===e.shape.length&&_t(d,e.texData.texShape);r+=`${D}_${V}_${m?y:""}_${g.length}_${R}_${$}_${M}_${C}_${T}_${k}_${n.packedInputs||g.length>2?"":`${d[0]>1}_${d[1]>1}`}_${c}`}else r+=`${i.shape}_${i.isUniform?"uniform":i.texData.texShape}_${c}`});let a=n.constructor.name;return a+="_"+r+"_"+n.userCode+`${He().getNumber("WEBGL_VERSION")}`,a}(e,y,C),k=this.getAndSaveBinary(T,()=>function w9(n,t,e,r){const s=e.map((g,y)=>{const C={logicalShape:g.shape,texShape:g.isUniform?null:g.texData.texShape,isUniform:g.isUniform,isPacked:!g.isUniform&&g.texData.isPacked,flatOffset:null};return null!=g.texData&&null!=g.texData.slice&&g.texData.slice.flatOffset>0&&(C.flatOffset=g.texData.slice.flatOffset),{name:t.variableNames[y],shapeInfo:C}}),a=s.map(g=>g.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},c=P6(s,i,t),d=R3(n.gl,c),m=n.createProgram(d);return He().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:d,source:c,webGLProgram:m,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:d,source:c,webGLProgram:m,inShapeInfos:a,outShapeInfo:i},sL(n,t,m))}(this.gpgpu,e,y,C)),D=null!=this.activeTimers;let M;D&&(M=this.startTimer()),He().get("ENGINE_COMPILE_ONLY")||function N9(n,t,e,r,s){t.program.enableShapeUniforms||(aL(t.inShapeInfos,e),aL([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):n.setOutputMatrixTexture(a.texture,i[0],i[1]),n.setProgram(t.webGLProgram),1===He().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&n.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&n.gl.uniform1f(t.nanLoc,NaN);for(let d=0;d<e.length;++d){const m=e[d],{uniform:g,offset:y,shape:C,texShape:T}=t.variablesLocations[d];if(C){const{uniformShape:k}=ER(t.program.packedInputs,m.shape,m.texData.texShape);switch(k.length){case 1:n.gl.uniform1iv(C,new Int32Array(k));break;case 2:n.gl.uniform2iv(C,new Int32Array(k));break;case 3:n.gl.uniform3iv(C,new Int32Array(k));break;case 4:n.gl.uniform4iv(C,new Int32Array(k))}}if(T&&n.gl.uniform2i(T,m.texData.texShape[0],m.texData.texShape[1]),null!=g){if(m.isUniform){if(ze(m.shape)<2)n.gl.uniform1f(g,m.uniformValues[0]);else{let k=m.uniformValues;k instanceof Float32Array||(k=new Float32Array(k)),n.gl.uniform1fv(g,k)}continue}null!=m.texData.slice&&null!=y&&n.gl.uniform1i(y,m.texData.slice.flatOffset),n.setInputMatrixTexture(m.texData.texture.texture,g,d)}}const c=t.outShapeLocation;if(c)switch(r.shape.length){case 1:n.gl.uniform1iv(c,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(c,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(c,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(c,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const d=tn(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(d));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(d));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(d))}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let d=0;d<t.program.customUniforms.length;++d){const m=t.program.customUniforms[d],g=t.customUniformLocations[d],y=s[d];if("float"===m.type)n.gl.uniform1fv(g,y);else if("vec2"===m.type)n.gl.uniform2fv(g,y);else if("vec3"===m.type)n.gl.uniform3fv(g,y);else if("vec4"===m.type)n.gl.uniform4fv(g,y);else if("int"===m.type)n.gl.uniform1iv(g,y);else if("ivec2"===m.type)n.gl.uniform2iv(g,y);else if("ivec3"===m.type)n.gl.uniform3iv(g,y);else{if("ivec4"!==m.type)throw Error(`uniform type ${m.type} is not supported yet.`);n.gl.uniform4iv(g,y)}}n.executeProgram()}(this.gpgpu,k,y,C,a),g.forEach($=>this.disposeIntermediateTensorInfo($)),D&&(M=this.endTimer(M),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(M)}));const R=He().get("WEBGL_FLUSH_THRESHOLD");if(R>0){const $=Cs();$-this.lastGlFlushTime>R&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=$)}if(!He().getBool("WEBGL_LAZILY_UNPACK")&&m.isPacked&&!1===i){const $=this.unpackTensor(d);return this.disposeIntermediateTensorInfo(d),$}return d}compileAndRun(e,r,s,a,i=!1){return this.runWebGLProgram(e,r,s=s||r[0].dtype,a,i)}getAndSaveBinary(e,r){return e in this.binaryCache||(this.binaryCache[e]=r()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(He().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(r=>{this.gpgpu.deleteProgram(this.binaryCache[r].webGLProgram),delete this.binaryCache[r]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=qe(()=>{if(!He().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=He().getBool("DEBUG");He().set("DEBUG",!1);const r=this.abs(ln(1e-8)).dataSync()[0];if(He().set("DEBUG",e),r>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const r=this.texData.get(e),{shape:s,dtype:a,values:i,texture:c,usage:d,isPacked:m}=r;if(null!=c)return;const g=null!=this.activeTimers;let y;g&&(y=Cs());let C=r.texShape;if(null==C&&(C=K3(s,m),r.texShape=C),null!=i){const T=Bb(s);let k,D=C[1],M=C[0];const R=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(m||!R)&&([D,M]=$g(C[0],C[1])),k=m?new E9(T,R):new iL(T,R);const $=R?[M,D]:C,V=this.makeTensorInfo($,a),G=this.texData.get(V.dataId);G.usage=R?oi.PIXELS:oi.UPLOAD,G.texShape=$,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(V.dataId),D,M,i);const le=this.runWebGLProgram(k,[V],a,[[M,D]],!0),he=this.texData.get(le.dataId);r.texShape=he.texShape,r.isPacked=he.isPacked,r.usage=he.usage,He().get("ENGINE_COMPILE_ONLY")?this.disposeData(le.dataId):(r.texture=he.texture,r.values=null,this.texData.delete(le.dataId)),this.disposeIntermediateTensorInfo(V),g&&(this.uploadWaitMs+=Cs()-y)}else{const T=this.acquireTexture(C,d,a,m);r.texture=T}}convertAndCacheOnCPU(e,r){const s=this.texData.get(e),{dtype:a}=s;return null!=r&&(s.values=function Hq(n,t){if("float32"===t||"complex64"===t)return n;if("int32"===t||"bool"===t){const e="int32"===t?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<e.length;++r)e[r]=Math.round(n[r]);return e}throw new Error(`Unknown dtype ${t}`)}(r,a)),s.values}acquireTexture(e,r,s,a){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,r,a)}computeBytes(e,r){return e[0]*e[1]*ro(r)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){var e=this;return(0,Fe.Z)(function*(){const r=[];if(e.gpgpu.parallelCompilationExtension){for(const[,s]of Object.entries(e.binaryCache))r.push(e.checkCompletionAsync_(s));return Promise.all(r)}for(const[,s]of Object.entries(e.binaryCache)){const a=new Promise(i=>{try{e.checkCompletion_(s),i(!0)}catch(c){throw c}});r.push(a)}return Promise.all(r)})()}checkCompletionAsync_(e){var r=this;return(0,Fe.Z)(function*(){return r.gpgpu.gl.getProgramParameter(e.webGLProgram,r.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?r.checkCompletion_(e):(yield Qy(),r.checkCompletionAsync_(e))})()}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(NR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){const{variablesLocations:r,customUniformLocations:s,infLoc:a,nanLoc:i,outShapeLocation:c,outShapeStridesLocation:d,outTexShapeLocation:m}=sL(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=r,e.customUniformLocations=s,e.infLoc=a,e.nanLoc=i,e.outShapeLocation=c,e.outShapeStridesLocation=d,e.outTexShapeLocation=m}}createTensorFromGPUData(e,r,s){e.channels=e.channels||"RGBA";const{texture:a,height:i,width:c,channels:d}=e,m=Ha().backend;if(!m.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const g=m.writeTexture(a,r,s,i,c,d);return Ha().makeTensorFromDataId(g,r,s,m)}}return n.nextDataId=0,n})();const RL="4.4.0";function $L(){He().set("WEBGL_FORCE_F16_TEXTURES",!0)}av()&&wv("webgl",()=>new DL,2);const Kq={forceHalfFloat:$L};class zg{constructor(t,e,r){this.variableNames=["A","B"],this.outputShape=An(e,r),this.enableShapeUniforms=ha(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Nd="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Vb{constructor(t,e,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=An(e,r);const a=this.outputShape.length;this.enableShapeUniforms=ha(a);let i="";if(s)if(0===a||1===ze(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${yr(a)} coords = getOutputCoords();\n        `,1===a)i+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const d=_a("coords",a);i+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${d[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${d[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${d[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${d[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function ui(n){const{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Zq={kernelName:nc,backendName:"webgl",kernelFunc:ui};function of(n){const{inputs:t,backend:e}=n,{real:r,imag:s}=t,a=e.makeTensorInfo(r.shape,"complex64"),i=e.texData.get(a.dataId),c=ui({inputs:{x:r},backend:e}),d=ui({inputs:{x:s},backend:e});return i.complexTensorInfos={real:c,imag:d},a}const jq={kernelName:vf,backendName:"webgl",kernelFunc:of},OL="return (a < 0.) ? b * a : a;",FL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Yq={kernelName:Af,backendName:"webgl",kernelFunc:function Xq(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{alpha:a}=r,i=e.makeTensorInfo([],"float32",Qo(a,"float32")),c=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vb(FL,s.shape,i.shape):new zg(OL,s.shape,i.shape),d=e.runWebGLProgram(c,[s,i],"float32");return e.disposeIntermediateTensorInfo(i),d}},LL="return (a < 0.) ? b * a : a;",BL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Qq={kernelName:dc,backendName:"webgl",kernelFunc:function Jq(n){const{inputs:t,backend:e}=n,{x:r,alpha:s}=t,a=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vb(BL,r.shape,s.shape):new zg(LL,r.shape,s.shape);return e.runWebGLProgram(a,[r,s],"float32")}};function tr({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,c=a,d=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=e){const y=c.texData.get(i.dataId),C=e(y.values,d);return c.makeTensorInfo(i.shape,d,C)}let g;return g=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new af(i.shape,t):new Iu(i.shape,n),c.runWebGLProgram(g,[i],d)}}function Js({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:c})=>{const{a:d,b:m}=i,g=c;if(r&&"complex64"===d.dtype){const k=g.texData.get(d.dataId),D=g.texData.get(m.dataId),[M,R]=[[k.complexTensorInfos.real,D.complexTensorInfos.real],[k.complexTensorInfos.imag,D.complexTensorInfos.imag]].map(V=>{const[G,K]=V,ae={dataId:G.dataId,dtype:G.dtype,shape:d.shape},le={dataId:K.dataId,dtype:K.dtype,shape:m.shape},he=new zg(n,d.shape,m.shape);return g.runWebGLProgram(he,[ae,le],ra(G.dtype,K.dtype))}),$=of({inputs:{real:M,imag:R},backend:g});return g.disposeIntermediateTensorInfo(M),g.disposeIntermediateTensorInfo(R),$}const y=a||ra(d.dtype,m.dtype);if(("string"===d.dtype||"string"===m.dtype||g.shouldExecuteOnCPU([d,m]))&&null!=s){const k=g.texData.get(d.dataId).values,D=g.texData.get(m.dataId).values,M="string"===d.dtype?ko(k):k,R="string"===d.dtype?ko(D):D,[$,V]=s(d.shape,m.shape,M,R,y),G=g.makeTensorInfo(V,y);return g.texData.get(G.dataId).values=$,G}let T;return T=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Vb(t,d.shape,m.shape,e):new zg(n,d.shape,m.shape),g.runWebGLProgram(T,[d,m],y)}}function Ub(n,t=!1){if("linear"===n)return"return x;";if("relu"===n)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===n)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===n)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===n)return t?BL:LL;if("leakyrelu"===n)return t?FL:OL;if("sigmoid"===n)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class PL{constructor(t,e,r,s=!1,a=!1,i=!1,c=null,d=!1,m=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=ha(this.outputShape.length);const y=Math.ceil((s?t[1]:t[2])/2),C=s?"i * 2, rc.y":"rc.y, i * 2",T=a?"rc.z, i * 2":"i * 2, rc.z",k=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],D=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let M="",R="";c&&(M=d?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${c}\n        }`:m?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${c}\n        }`:`vec4 activation(vec4 x) {\n          ${c}\n        }`,R="result = activation(result);");const $=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),m&&this.variableNames.push("leakyreluAlpha");let V="rc.x",G="rc.x";t[0]<e[0]?V=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(G=`imod(rc.x, ${e[0]})`),this.userCode=`\n      ${M}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${y}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${V};\n        int batchB = ${G};\n        for (int i = 0; i < ${y}; i++) {\n          vec4 a = getMatrixA(batchA, ${C});\n          vec4 b = getMatrixB(batchB, ${T});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${k[0]} * ${D[0]});\n          result += (${k[1]} * ${D[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${$}\n\n        ${R}\n\n        setOutput(result);\n      }\n    `}}class VL{constructor(t,e,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=An(e,r),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const UL="return a * b;";function LR(n){const{inputs:t,backend:e}=n,{a:r,b:s}=t,a=ra(r.dtype,s.dtype);if("complex64"===r.dtype){const c=e.texData.get(r.dataId),d=e.texData.get(s.dataId),m=new VL("return areal * breal - aimag * bimag;",r.shape,s.shape),g=new VL("return areal * bimag + aimag * breal;",r.shape,s.shape),y=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:r.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:s.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:s.shape}],C=e.runWebGLProgram(m,y,"float32"),T=e.runWebGLProgram(g,y,"float32"),k=of({inputs:{real:C,imag:T},backend:e});return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(T),k}if(e.shouldExecuteOnCPU([r,s])){const c=e.texData.get(r.dataId),d=e.texData.get(s.dataId),[m,g]=Y9(r.shape,s.shape,c.values,d.values,a),y=e.makeTensorInfo(g,a);return e.texData.get(y.dataId).values=m,y}let i;return i=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vb(UL,r.shape,s.shape):new zg(UL,r.shape,s.shape),e.runWebGLProgram(i,[r,s],a)}const e8={kernelName:fc,backendName:"webgl",kernelFunc:LR};function zt(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{shape:a}=r,i=e,c=ze(s.shape),d=Eu(a,c),m=ze(d);q(c===m,()=>`The new shape (${d}) has ${m} elements and the old shape (${s.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`);const g=i.texData.get(s.dataId);return!g.isPacked||Pb(s.shape,d)||null!==g.texture&&Pb(g.shape,d)?(i.incRef(s.dataId),{dataId:s.dataId,shape:d,dtype:s.dtype}):function t8(n,t,e){const r=[yd(n.shape),...bd(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},a=[yd(t),...bd(t)],i=new TL(a,r),m=e.runWebGLProgram(i,[s],n.dtype,[r],!0);return{dataId:m.dataId,shape:t,dtype:m.dtype}}(s,d,i)}const n8={kernelName:Uf,backendName:"webgl",kernelFunc:zt};class WL{constructor(t,e){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:a,outSize:i}=t;this.outputShape=[s,i];const c=4*Math.floor(r/4),d=r%4;let m="sumValue += dot(values, ones);";if(null!=e){const y=1/e;m=`sumValue += dot(values * ${bn(y)?y.toPrecision(2):y}, ones);`}let g="";a%r>0&&(g=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${g}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${m}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===d}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${m}\n        } else if (${2===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${m}\n        } else if (${3===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${m}\n        }\n        setOutput(sumValue);\n      }\n    `}}class r8{constructor(t,e){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:a,outSize:i}=t;this.outputShape=[s,i];let c="0.0",d="";"prod"===e?c="1.0":"min"===e?(c="1.0 / 1e-20",d="min"):"max"===e&&(c="-1.0 / 1e-20",d="max");let m=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?m="sumValue":"prod"===e?m="prodValue":"all"===e?m="allValue":"any"===e&&(m="anyValue");const g=4*Math.floor(r/4),y=r%4;let C=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${d}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${d}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,T="vec4";"all"===e?(c="1.0",C="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",T="bvec4"):"any"===e&&(c="0.0",C="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",T="bvec4");let k="";a%r>0&&(k=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${c};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${k}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        vec4 minMaxValue = vec4(${c});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${g}; i += 4) {\n          int inIdx = inOffset + i;\n          ${T} values = ${T}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${C}\n        }\n\n        int inIdx = inOffset + ${g};\n        if (${1===y}) {\n          ${T} values = ${T}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${C}\n        } else if (${2===y}) {\n          ${T} values = ${T}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${C}\n        } else if (${3===y}) {\n          ${T} values = ${T}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${C}\n        }\n        setOutput(${m});\n      }\n    `}}function Sd(n,t,e,r){const s=function s8(n){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const e=t.length?t[t.length-1].outSize:n[1],r=Pm(e);t.push({inSize:e,windowSize:r,outSize:Math.ceil(e/r)})}return t}(n.shape);let a=n;for(let i=0;i<s.length;i++){const{inSize:c,windowSize:d,outSize:m}=s[i];let g,y;g="mean"===e?0===i?new WL({windowSize:d,inSize:c,batchSize:n.shape[0],outSize:m},c):new WL({windowSize:d,inSize:c,batchSize:n.shape[0],outSize:m}):new r8({windowSize:d,inSize:c,batchSize:n.shape[0],outSize:m},e),y=a,a=r.runWebGLProgram(g,[a],t),y.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(y)}return a}class a8{constructor(t,e){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[e[i]];this.outputShape=r,this.rank=r.length;const s=yr(this.rank),a=function i8(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<n.length;s++)r[n[s]]=e[s];return r.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class o8{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(t.length);for(let g=0;g<r.length;g++)r[g]=t[e[g]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=yr(this.rank),a=_L("rc",this.rank),i=new Array(this.rank);for(let g=0;g<e.length;g++)i[e[g]]=a[g];const c=`vec2(${i.slice(-2).join()})`,d=`++${a[this.rank-1]} < ${r[this.rank-1]}`,m=`getChannel(getA(${i.join()}), ${c})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${m};\n      if(${d}) {\n        result[1] = ${m};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {\n        result[2] = ${m};\n        if(${d}) {\n          result[3] = ${m};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function MI(n,t,e){const r=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o8(n.shape,t):new a8(n.shape,t);return e.runWebGLProgram(r,[n],n.dtype)}function DI(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;return function u8(n,t,e,r){const a=n.shape.length,i=Mn(t,n.shape);let c=i;const d=Or(c,a),m=null!=d;let g=n;m&&(g=MI(n,d,r),c=Br(c.length,a)),gs("sum",c,a);const[y,C]=ms(g.shape,c);let T=y;e&&(T=Wr(y,i));const k=ze(C),R=zt({inputs:{x:g},attrs:{shape:[ze(n.shape)/k,k]},backend:r}),V=Sd(R,Ip(n.dtype),"sum",r),G=zt({inputs:{x:V},attrs:{shape:T},backend:r});return r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(V),m&&r.disposeIntermediateTensorInfo(g),G}(s,a,i,e)}const l8={kernelName:jf,backendName:"webgl",kernelFunc:DI};function Ta(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{perm:a}=r,i=e,d=new Array(s.shape.length);for(let g=0;g<d.length;g++)d[g]=s.shape[a[g]];let m;if(i.shouldExecuteOnCPU([s])){const y=i.texData.get(s.dataId).values,C=OR(y,s.shape,s.dtype,a,d);m=i.makeTensorInfo(d,s.dtype),i.texData.get(m.dataId).values=C}else m=MI(s,a,i);return m}const c8={kernelName:qa,backendName:"webgl",kernelFunc:Ta};function RI({a:n,b:t,transposeA:e,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:d=null}){const m=n.shape.length,g=t.shape.length,y=e?n.shape[m-2]:n.shape[m-1],C=r?t.shape[g-1]:t.shape[g-2],T=e?n.shape[m-1]:n.shape[m-2],k=r?t.shape[g-2]:t.shape[g-1],D=n.shape.slice(0,-2),M=t.shape.slice(0,-2),R=ze(D),$=ze(M),G=An(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([T,k]);q(y===C,()=>`Error in matMul: inner shapes (${y}) and (${C}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${r} must match.`);const K=e?[R,y,T]:[R,T,y],ae=r?[$,k,C]:[$,C,k],le=zt({inputs:{x:n},backend:s,attrs:{shape:K}}),he=zt({inputs:{x:t},backend:s,attrs:{shape:ae}}),Ae=[le,he],ke=Math.max(R,$),Ue=e?le.shape[1]:le.shape[2],Je=null!=a,st=null!=i,at="leakyrelu"===d,ot=null!=d?Ub(d,!0):null;let pt;if((1===T||1===k)&&Ue>1e3&&!1===(Je||st||at||null!=ot)){let gt=le,At=he;e&&(gt=Ta({inputs:{x:le},backend:s,attrs:{perm:[0,2,1]}}),Ae.push(gt)),r&&(At=Ta({inputs:{x:he},backend:s,attrs:{perm:[0,2,1]}}),Ae.push(At));const Ot=1===k;let Dt=gt;1!==k&&(Dt=zt({inputs:{x:gt},backend:s,attrs:{shape:[ke,Ue,1]}}),Ae.push(Dt));const Gt=1===k?2:1;let Pt=At;Ot&&(Pt=zt({inputs:{x:At},backend:s,attrs:{shape:[ke,1,Ue]}}),Ae.push(Pt));const jt=LR({inputs:{a:Dt,b:Pt},backend:s});pt=DI({inputs:{x:jt},backend:s,attrs:{axis:Gt,keepDims:!0}}),Ae.push(jt)}else{const gt=ra(n.dtype,t.dtype),At=new PL(K,ae,[ke,T,k],e,r,Je,ot,st,at),kt=[le,he];if(null!=a&&kt.push(a),st&&kt.push(i),at){const Ot=s.makeTensorInfo([],"float32",Qo(c,"float32"));kt.push(Ot),Ae.push(Ot)}pt=s.runWebGLProgram(At,kt,gt)}const ut=zt({inputs:{x:pt},backend:s,attrs:{shape:G}});Ae.push(pt);for(const gt of Ae)s.disposeIntermediateTensorInfo(gt);return ut}const h8={kernelName:Nc,backendName:"webgl",kernelFunc:function f8(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a,bias:i,preluActivationWeights:c}=t,{transposeA:d,transposeB:m,activation:g,leakyreluAlpha:y}=r;return RI({a:s,b:a,transposeA:d,transposeB:m,backend:e,bias:i,preluActivationWeights:c,leakyreluAlpha:y,activation:g})}},qL="return abs(x);",p8={kernelName:Wl,backendName:"webgl",kernelFunc:function d8(n){const{inputs:t,backend:e}=n,{x:r}=t;if(e.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const a=e.texData.get(r.dataId),i=CL(a.values);return e.makeTensorInfo(r.shape,r.dtype,i)}let s;return s=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new af(r.shape,qL):new Iu(r.shape,qL),e.runWebGLProgram(s,[r],r.dtype)}},g8=tr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),v8={kernelName:Yr,backendName:"webgl",kernelFunc:g8},b8=tr({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),x8={kernelName:Mr,backendName:"webgl",kernelFunc:b8},HL="return a + b;",w8=Js({opSnippet:HL,packedOpSnippet:HL,supportsComplex:!0,cpuKernelImpl:M9}),N8={kernelName:Du,backendName:"webgl",kernelFunc:w8};class S8{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`float v${a} = get${a}AtOutCoords();`)});const s=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${r.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class C8{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`vec4 v${a} = get${a}AtOutCoords();`)});const s=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${r.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const I8={kernelName:pf,backendName:"webgl",kernelFunc:function $I(n){const{inputs:t,backend:e}=n,r=t;if(1===r.length)return ui({inputs:{x:r[0]},backend:e});if(r.length>He().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const d=Math.floor(r.length/2),m=$I({inputs:r.slice(0,d),backend:e}),g=$I({inputs:r.slice(d),backend:e});return $I({inputs:[m,g],backend:e})}const s=r.map(d=>d.dtype).reduce((d,m)=>ra(d,m)),a=r.map(d=>d.shape),c=He().getBool("WEBGL_PACK")?new C8(r[0].shape,a):new S8(r[0].shape,a);return e.runWebGLProgram(c,r,s)}},T8={kernelName:Rd,backendName:"webgl",kernelFunc:function _8(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,c=s.shape.length,d=Mn(a,s.shape);let m=d;const g=Or(m,c);let y=s;null!=g&&(y=Ta({inputs:{x:s},backend:e,attrs:{perm:g}}),m=Br(m.length,c)),gs("all",m,c);const[C,T]=ms(y.shape,m),D=zt({inputs:{x:y},backend:e,attrs:{shape:[-1,ze(T)]}}),M=Sd(D,D.dtype,"all",e);let R;return R=zt(i?{inputs:{x:M},backend:e,attrs:{shape:Wr(C,d)}}:{inputs:{x:M},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(M),null!=g&&e.disposeIntermediateTensorInfo(y),R}},E8={kernelName:mf,backendName:"webgl",kernelFunc:function A8(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,c=s.shape.length,d=Mn(a,s.shape);let m=d;const g=Or(m,c);let y=s;null!=g&&(y=Ta({inputs:{x:s},backend:e,attrs:{perm:g}}),m=Br(m.length,c)),gs("any",m,c);const[C,T]=ms(y.shape,m),D=zt({inputs:{x:y},backend:e,attrs:{shape:[-1,ze(T)]}}),M=Sd(D,D.dtype,"any",e);let R;return R=zt(i?{inputs:{x:M},backend:e,attrs:{shape:Wr(C,d)}}:{inputs:{x:M},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(M),null!=g&&e.disposeIntermediateTensorInfo(y),R}};class k8{constructor(t,e,r){this.variableNames=["A"];const{windowSize:s,batchSize:a,outSize:i}=t;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class M8{constructor(t,e,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,q(t.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const i=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const c=this.outputShape,d=c.length,m=yr(d),g=_a("coords",d);let y,C;if(1===i){C=d+1;const he=yr(C);y=`\n        ${he} sourceLocR = ${he}(${g.join()}, 0);\n        ++${g[d-1]};\n        ${he} sourceLocG = ${he}(${g.join()}, 0);\n        ++${g[d-2]};\n        ${he} sourceLocA = ${he}(${g.join()}, 0);\n        --${g[d-1]};\n        ${he} sourceLocB = ${he}(${g.join()}, 0);\n        --${g[d-2]};`}else C=d,y=`\n        ${m} sourceLocR = coords;\n        ++${g[d-1]};\n        ${m} sourceLocG = coords;\n        ++${g[d-2]};\n        ${m} sourceLocA = coords;\n        --${g[d-1]};\n        ${m} sourceLocB = coords;\n        --${g[d-2]};`;const T=["x","y","z","w","u","v"].slice(0,C),k="."+T[C-1],D=T.map(he=>"int "+he),M=_a("sourceLocR",C-1).concat("inIdx.r"),R=_a("sourceLocG",C-1).concat("inIdx.g"),$=_a("sourceLocB",C-1).concat("inIdx.b"),V=_a("sourceLocA",C-1).concat("inIdx.a"),G="max"===r?"greaterThan":"lessThan",K=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${M.join()}),\n                             getBestIndicesAChannel(${R.join()}),\n                             getBestIndicesAChannel(${$.join()}),\n                             getBestIndicesAChannel(${V.join()})));`,ae=`vec4(\n            getAChannel(${M.join()}),\n            hasNextCol ? getAChannel(${R.join()}) : 0.,\n            hasNextRow ? getAChannel(${$.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${V.join()}) : 0.)`,le=s?"":`\n      float getBestIndicesAChannel(${D.join()}) {\n        return getChannel(getBestIndicesA(${T.join()}),\n                                          vec2(${T.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${D.join()}) {\n        return getChannel(getA(${T.join()}),\n                               vec2(${T.slice(-2).join()}));\n      }\n      ${le}\n      void main() {\n        ${m} coords = getOutputCoords();\n        bool hasNextCol = ${g[d-1]} < ${c[d-1]-1};\n        bool hasNextRow = ${g[d-2]} < ${c[d-2]-1};\n        ${y}\n        ivec4 srcIdx = ivec4(sourceLocR${k}, sourceLocG${k},\n          sourceLocB${k}, sourceLocA${k}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${ae};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${K}\n          vec4 candidate = ${ae};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${G}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function KL(n,t,e,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Pm(a),c={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},d=new k8(c,e,null==r),m=[t];null!=r&&m.push(r);const g=n.runWebGLProgram(d,m,"int32");if(1===g.shape[1])return g;const y=KL(n,t,e,g);return n.disposeIntermediateTensorInfo(g),y}function ZL(n,t,e,r=null){const s=null!=r?r.shape:t.shape,i=Pm(s[s.length-1]),c=new M8(s,i,e,null==r),m=n.runWebGLProgram(c,null==r?[t]:[t,r],"int32");if(m.shape.length===t.shape.length){const g=ZL(n,t,e,m);return n.disposeIntermediateTensorInfo(m),g}return m}function jL(n,t,e,r){const s=[e];if(gs("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!He().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const a=[],i=n.texData.get(t.dataId);let d=t;null!==i&&i.isPacked&&(d=n.unpackTensor(t),a.push(d));const[m,g]=ms(d.shape,s),y=ze(g),C=zt({inputs:{x:d},backend:n,attrs:{shape:[-1,y]}});a.push(C);const T=KL(n,C,r);a.push(T);const k=zt({inputs:{x:T},backend:n,attrs:{shape:m}});return a.forEach(D=>n.disposeIntermediateTensorInfo(D)),k}return ZL(n,t,r)}const R8={kernelName:na,backendName:"webgl",kernelFunc:function D8(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;let i=Mn(a,s.shape);const c=Or(i,s.shape.length);let d=s;const m=[];null!=c&&(d=Ta({inputs:{x:s},backend:e,attrs:{perm:c}}),m.push(d),i=Br(i.length,d.shape.length)),gs("argMax",[i[0]],d.shape.length);const g=jL(e,d,i[0],"max");return m.forEach(y=>e.disposeIntermediateTensorInfo(y)),g}},O8={kernelName:pn,backendName:"webgl",kernelFunc:function $8(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;let i=Mn(a,s.shape);const c=Or(i,s.shape.length);let d=s;const m=[];null!=c&&(d=Ta({inputs:{x:s},backend:e,attrs:{perm:c}}),m.push(d),i=Br(i.length,d.shape.length)),gs("argMin",[i[0]],d.shape.length);const g=jL(e,d,i[0],"min");return m.forEach(y=>e.disposeIntermediateTensorInfo(y)),g}},L8=tr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),B8={kernelName:Gl,backendName:"webgl",kernelFunc:L8},z8=tr({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),V8={kernelName:ql,backendName:"webgl",kernelFunc:z8},W8=tr({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),G8={kernelName:Uo,backendName:"webgl",kernelFunc:W8},K8=Js({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),Z8={kernelName:Vr,backendName:"webgl",kernelFunc:K8},X8=tr({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Y8={kernelName:wt,backendName:"webgl",kernelFunc:X8};class Wb{constructor(t,e,r,s=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,c=t.strideHeight,d=t.strideWidth,m=t.dilationHeight,g=t.dilationWidth,y=t.effectiveFilterHeight,C=t.effectiveFilterWidth,T=t.padInfo.top,k=t.padInfo.left;this.outputShape=t.outShape;const D="avg"===e;let $="0.0";if(D||($="-1.0 / 1e-20"),r)return void(this.userCode=`\n        const ivec2 strides = ivec2(${c}, ${d});\n        const ivec2 pads = ivec2(${T}, ${k});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${y};\n              wR += ${m}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${C};\n                wC += ${g}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?a?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${C} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let G=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(G="avgValue / max(count, 1.0)");const K=4*Math.floor(i/4),ae=i%4,le=`\n      if (${D}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${c}, ${d});\n      const ivec2 pads = ivec2(${T}, ${k});\n      const float initializationValue = ${$};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${$});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${y};\n            wR += ${m}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${K}; wC += 4) {\n            int xC = xCCorner + wC * ${g};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${g}, d),\n              getValue(batch, xR, xC + 2 * ${g}, d),\n              getValue(batch, xR, xC + 3 * ${g}, d)\n            );\n\n            ${le}\n          }\n\n          int xC = xCCorner + ${K};\n          if (${1===ae}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${le}\n          } else if (${2===ae}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${g}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${le}\n          } else if (${3===ae}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${g}, d),\n              getValue(batch, xR, xC + 2 * ${g}, d),\n              initializationValue\n            );\n\n            ${le}\n          }\n        }\n        setOutput(${G});\n      }\n    `}}class BR{constructor(t,e,r,s=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,c=t.strideDepth,d=t.strideHeight,m=t.strideWidth,g=t.dilationDepth,y=t.dilationHeight,C=t.dilationWidth,T=t.effectiveFilterDepth,k=t.effectiveFilterHeight,D=t.effectiveFilterWidth,M=t.padInfo.front,R=t.padInfo.top,$=t.padInfo.left;this.outputShape=t.outShape;const V="avg"===e;let G="0.0";if(V||(G="-1.0 / 1e-20"),r)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${c}, ${d}, ${m});\n        const ivec3 pads = ivec3(${M}, ${R}, ${$});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${T};\n              wD += ${g}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${k};\n                wR += ${y}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${D};\n                  wC += ${C}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${k} * ${D} +\n                      wR * ${D} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let ae=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(ae="avgValue / max(count, 1.0)");const le=4*Math.floor(i/4),he=i%4,Ae=`\n      if (${V}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${c}, ${d}, ${m});\n      const ivec3 pads = ivec3(${M}, ${R}, ${$});\n      const float initializationValue = ${G};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${G});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${T};\n            wD += ${g}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${k};\n            wR += ${y}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${le}; wC += 4) {\n              int xC = xCCorner + wC * ${C};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${C}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${C}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${C}, ch)\n              );\n\n              ${Ae}\n            }\n\n            int xC = xCCorner + ${le};\n            if (${1===he}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${Ae}\n            } else if (${2===he}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${C}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${Ae}\n            } else if (${3===he}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${C}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${C}, ch),\n                initializationValue\n              );\n\n              ${Ae}\n            }\n          }\n        }\n        setOutput(${ae});\n      }\n    `}}const Q8={kernelName:Ss,backendName:"webgl",kernelFunc:function J8(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;Og(s,"avgPool");const{filterSize:a,strides:i,pad:c,dimRoundingMode:d}=r;q(ds(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const g=ma(s.shape,a,i,1,c,d);if(1===g.filterWidth&&1===g.filterHeight&&_t(g.inShape,g.outShape))return ui({inputs:{x:s},backend:e});const y=new Wb(g,"avg",!1);return e.runWebGLProgram(y,[s],"float32")}},tH={kernelName:Go,backendName:"webgl",kernelFunc:function eH(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:c,dimRoundingMode:d,dataFormat:m}=r,y=Ri(s.shape,a,i,[1,1,1],c,d,m),C=new BR(y,"avg",!1);return e.runWebGLProgram(C,[s],"float32")}};class nH{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const d=t.effectiveFilterHeight,m=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${d-1-t.padInfo.top}, ${m-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${m};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rH{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const y=t.effectiveFilterDepth,C=t.effectiveFilterHeight,T=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${y-1-t.padInfo.front}, ${C-1-t.padInfo.top}, ${T-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${y};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${C};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${T};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const aH={kernelName:$d,backendName:"webgl",kernelFunc:function sH(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a,{filterSize:c,strides:d,pad:m,dimRoundingMode:g}=r,C=Ri(i.shape,c,d,[1,1,1],m,g),T=new rH(C);return e.runWebGLProgram(T,[s],i.dtype)}},oH={kernelName:Wo,backendName:"webgl",kernelFunc:function iH(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a;Og([s,a],"avgPoolGrad");const{filterSize:c,strides:d,pad:m}=r,g=ma(i.shape,c,d,1,m),y=new nH(g);return e.runWebGLProgram(y,[s],i.dtype)}},lH={kernelName:rr,backendName:"webgl",kernelFunc:function uH(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a}=t,{transposeA:i,transposeB:c}=r;return RI({a:s,b:a,transposeA:i,transposeB:c,backend:e})}};class cH{constructor(t,e,r,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],An(t,e),An(t,r);let c="0.0";null!=s&&(An(t,s),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let d="1.0";null!=a&&(An(t,a),this.variableNames.push("scale"),d="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${c};\n        float scale = ${d};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class fH{constructor(t,e,r,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],An(t,e),An(t,r);let c="vec4(0.0)";null!=s&&(An(t,s),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let d="vec4(1.0)";null!=a&&(An(t,a),this.variableNames.push("scale"),d="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${c};\n        vec4 scale = ${d};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const hH={kernelName:If,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,mean:s,variance:a,offset:i,scale:c}=n;q(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),q(null==i||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),q(null==c||s.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:d}=e;null==d&&(d=.001);const m=[r,s,a];let g=null;null!=i&&(g=i.shape,m.push(i));let y=null;null!=c&&(y=c.shape,m.push(c));const C=He().getBool("WEBGL_PACK_NORMALIZATION")?new fH(r.shape,s.shape,a.shape,g,y,d):new cH(r.shape,s.shape,a.shape,g,y,d);return t.runWebGLProgram(C,m,m[0].dtype)}};class dH{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=yr(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=function pH(n){if(1===n)return"sourceLoc";if(n<=6)return PR.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((i,c)=>`sourceLoc.${PR[c]} = start[${c}] + coords.${PR[c]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}}const PR=["x","y","z","w","u","v"];class mH{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=yr(this.rank),r=_a("coords",this.rank),s=_a("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${a})`,c=`\n      result.x = ${i};\n      if (++${r[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,d=1===this.rank?"":`\n      --${r[this.rank-1]};\n      if (++${r[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${r[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,m=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((g,y)=>`start[${y}]`).join()});`:t.map((g,y)=>`${s[y]} = ${r[y]} + start[${y}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${m}\n        vec4 result = vec4(0.);\n        ${c}\n        ${d}\n        setOutput(result);\n      }\n    `}}function Ug(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,size:i}=r,[c,d]=xo(s,a,i);if(Bv(s,c,d),0===ze(d))return e.makeTensorInfo(d,s.dtype,[]);if(e.shouldExecuteOnCPU([s])||"string"===s.dtype){const y=e.texData.get(s.dataId),C=uq(y.values,c,d,s.shape,s.dtype);return e.makeTensorInfo(d,s.dtype,C)}const{isPacked:m}=e.texData.get(s.dataId),g=Pv(s.shape,c,d);if(m||!g){const y=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mH(d):new dH(d);return e.runWebGLProgram(y,[s],s.dtype,[c])}return e.uploadToGPU(s.dataId),function gH(n,t,e,r){const s=r.texData.get(n.dataId),a=r.makeTensorInfo(e,n.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=e,i.dtype=n.dtype;let c=vi(t,tn(n.shape));s.slice&&(c+=s.slice.flatOffset),i.slice={flatOffset:c,origDataId:s.slice&&s.slice.origDataId||n.dataId};const d=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,d+1),a}(s,c,d,e)}const vH={kernelName:Hf,backendName:"webgl",kernelFunc:Ug},yH={kernelName:sn,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,crops:i}=r;q(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=a.reduce(($,V)=>$*V),d=qc(s.shape,a,c),m=Zh(d.length,a.length),g=jh(s.shape,a,c),y=zm(i,a.length),C=r0(g,i,a.length),T=[],k=zt({inputs:{x:s},backend:e,attrs:{shape:d}}),D=Ta({inputs:{x:k},backend:e,attrs:{perm:m}}),M=zt({inputs:{x:D},backend:e,attrs:{shape:g}}),R=Ug({inputs:{x:M},backend:e,attrs:{begin:y,size:C}});return T.push(k),T.push(D),T.push(M),T.forEach($=>e.disposeIntermediateTensorInfo($)),R}},xH={kernelName:ka,backendName:"webgl",kernelFunc:function bH(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i}=r,c=e.readSync(s.dataId),d=e.readSync(a.dataId),m=SL(c,d,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,m)}},NH={kernelName:Ru,backendName:"webgl",kernelFunc:function wH(n){const{inputs:t,backend:e}=n,{s0:r,s1:s}=t,a=e.readSync(r.dataId),i=e.readSync(s.dataId),c=An(Array.from(a),Array.from(i));return e.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},XL=Js({opSnippet:"return float(a != b);",cpuKernelImpl:Q9,dtype:"bool"}),SH={kernelName:Of,backendName:"webgl",kernelFunc:XL};function Gb(n){const{inputs:t,backend:e}=n,{input:r}=t;return ui({inputs:{x:e.texData.get(r.dataId).complexTensorInfos.real},backend:e})}const CH={kernelName:Vf,backendName:"webgl",kernelFunc:Gb},TH={kernelName:Zs,backendName:"webgl",kernelFunc:function zR(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return ui({inputs:{x:s},backend:e});const i=ns(s.shape),c=zR({inputs:{x:s},backend:e,attrs:{dtype:"float32"}}),d=of({inputs:{real:c,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(c),d}if("complex64"===s.dtype){const i=Gb({inputs:{input:s},backend:e}),c=zR({inputs:{x:i},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(i),c}if(!ku(s.dtype,a)){const i=ui({inputs:{x:s},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(e.shouldExecuteOnCPU([s])){const i=e.texData.get(s.dataId).values,[c,d,m]=R9(i,s.shape,s.dtype,a);return e.makeTensorInfo(c,d,m)}if("int32"===a)return function _H(n,t){const e=new Iu(n.shape,"return float(int(x));"),r=t.runWebGLProgram(e,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,e);if("bool"===a){const i=e.makeTensorInfo([],"bool",jr("bool",1)),d=XL({inputs:{a:s,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),d}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}},YL="return ceil(x);",AH=tr({opSnippet:YL,packedOpSnippet:YL,cpuKernelImpl:$9}),EH={kernelName:$u,backendName:"webgl",kernelFunc:AH};class kH{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class MH{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const RH={kernelName:Ma,backendName:"webgl",kernelFunc:function DH(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let c;return c=He().getBool("WEBGL_PACK_CLIP")?new MH(s.shape):new kH(s.shape),e.runWebGLProgram(c,[s],s.dtype,[[a],[i]])}};class $H{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function JL(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}const FH={kernelName:Hl,backendName:"webgl",kernelFunc:function OH(n){const{inputs:t,backend:e}=n,{x:r}=t,s=e.texData.get(r.dataId),a=new $H(r.shape),i=[JL(r,s.complexTensorInfos.real),JL(r,s.complexTensorInfos.imag)];return e.runWebGLProgram(a,i,i[0].dtype)}};class LH{constructor(t){this.outputShape=[],this.outputShape=yi(t,1),this.variableNames=t.map((i,c)=>`T${c}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const r=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++)r.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${e[i-1]}));`);r.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${r.join("\n        ")}\n      }\n    `}}class BH{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=yi(t,e);const r=this.outputShape,s=r.length,a=yr(s),i=_a("coords",s),c=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map((D,M)=>`T${M}`);const d=new Array(t.length-1);d[0]=t[0][e];for(let D=1;D<d.length;D++)d[D]=d[D-1]+t[D][e];const m=c[e],g=c.slice(-2),y=c.join();let C=`if (${m} < ${d[0]}) {\n        return getChannel(\n            getT0(${y}), vec2(${g.join()}));\n        }`;for(let D=1;D<d.length;D++){const M=d[D-1];C+=`\n        if (${m} < ${d[D]}  && ${m} >= ${d[D-1]}) {\n          return getChannel(\n            getT${D}(${OI(c,m,M)}),\n            vec2(${OI(g,m,M)}));\n        }`}const k=d[d.length-1];C+=`\n        return getChannel(\n          getT${d.length}(${OI(c,m,k)}),\n          vec2(${OI(g,m,k)}));`,this.userCode=`\n      float getValue(${c.map(D=>"int "+D)}) {\n        ${C}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${r[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${r[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${r[s-2]} &&\n            ${i[s-1]} < ${r[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function OI(n,t,e){const r=n.indexOf(t);return n.map((a,i)=>i===r?`${a} - ${e}`:a).join()}function FI(n){const{inputs:t,backend:e}=n,{input:r}=t;return ui({inputs:{x:e.texData.get(r.dataId).complexTensorInfos.imag},backend:e})}const PH={kernelName:Xd,backendName:"webgl",kernelFunc:FI};function qb(n,t,e){const r=n[0].dtype;if("complex64"===r){const T=n.map($=>Gb({inputs:{input:$},backend:e})),k=n.map($=>FI({inputs:{input:$},backend:e})),D=qb(T,t,e),M=qb(k,t,e),R=of({inputs:{real:D,imag:M},backend:e});return T.forEach($=>e.disposeIntermediateTensorInfo($)),k.forEach($=>e.disposeIntermediateTensorInfo($)),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(M),R}let s=e.shouldExecuteOnCPU(n);if("string"===r&&(s=!0),s){const T=n.map(G=>{const K=ze(G.shape.slice(t));return zt({inputs:{x:G},backend:e,attrs:{shape:[-1,K]}})}),k=T.map(G=>({vals:e.readSync(G.dataId),shape:G.shape})),D=yi(T.map(G=>G.shape),1),R=O9(k,D,r,1===T[0].shape[0]),$=yi(n.map(G=>G.shape),t),V=e.makeTensorInfo($,r,R);return T.forEach(G=>e.disposeIntermediateTensorInfo(G)),V}const a=n.filter(T=>ze(T.shape)>0),i=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const T=i?new Iu(n[0].shape,sf):new af(n[0].shape,sf);return e.runWebGLProgram(T,n,r)}const c=He().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>c){const T=[];for(let D=0;D<a.length;D+=c){const M=a.slice(D,D+c);T.push(qb(M,t,e))}const k=qb(T,t,e);for(const D of T)e.disposeIntermediateTensorInfo(D);return k}if(i){const T=new BH(a.map(k=>k.shape),t);return e.runWebGLProgram(T,a,r)}const{tensors2D:d,outShape:m}=function zH(n,t,e){const r=yi(n.map(a=>a.shape),t);return{tensors2D:n.map(a=>zt({inputs:{x:a},attrs:{shape:[-1,ze(a.shape.slice(t))]},backend:e})),outShape:r}}(a,t,e),g=new LH(d.map(T=>T.shape)),y=e.runWebGLProgram(g,d,r);d.forEach(T=>e.disposeIntermediateTensorInfo(T));const C=zt({inputs:{x:y},attrs:{shape:m},backend:e});return e.disposeIntermediateTensorInfo(y),C}function QL(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r,a=Mn(s,t[0].shape)[0];e0(t.map(m=>m.shape),a);const c=yi(t.map(m=>m.shape),a);if(0===ze(c))return e.makeTensorInfo(c,t[0].dtype,[]);const d=t.filter(m=>ze(m.shape)>0);return 1===d.length?ui({inputs:{x:d[0]},backend:e}):qb(d,a,e)}const VH={kernelName:Kl,backendName:"webgl",kernelFunc:QL};class eB{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,c=t.padInfo.left,d=t.strideHeight,m=t.strideWidth,g=t.dilationHeight,y=t.dilationWidth,C=t.filterHeight,T=t.filterWidth,k=4*Math.floor(t.inChannels/4),D=t.inChannels%4,M="channelsLast"===t.dataFormat,R=M?1:2,$=M?2:3,V=M?3:1;let G="",K="";r&&(G=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${r}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${r}\n        }`:`\n          float activation(float x) {\n            ${r}\n          }\n        `,K="result = activation(result);");const ae=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${G}\n\n      const ivec2 strides = ivec2(${d}, ${m});\n      const ivec2 pads = ivec2(${i}, ${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${V}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${R}], coords[${$}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${C}; wR++) {\n          int xR = xRCorner + wR * ${g};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${T}; wC++) {\n            int xC = xCCorner + wC * ${y};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${k}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${M}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===D}) {\n\n              if (${M}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${k}) *\n                    getW(wR, wC, ${k}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${k}, xR, xC) *\n                    getW(wR, wC, ${k}, d2);\n              }\n\n            } else if (${2===D}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${k}, d2),\n                getW(wR, wC, ${k} + 1, d2)\n              );\n\n              if (${M}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${k}),\n                  getX(batch, xR, xC, ${k} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${k}, xR, xC),\n                  getX(batch, ${k} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===D}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${k}, d2),\n                getW(wR, wC, ${k} + 1, d2),\n                getW(wR, wC, ${k} + 2, d2)\n              );\n\n              if (${M}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${k}),\n                  getX(batch, xR, xC, ${k} + 1),\n                  getX(batch, xR, xC, ${k} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${k}, xR, xC),\n                  getX(batch, ${k} + 1, xR, xC),\n                  getX(batch, ${k} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${ae}\n        ${K}\n        setOutput(result);\n      }\n    `}}class UH{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,r=t.padInfo.top,s=t.padInfo.left,a=t.strideDepth,i=t.strideHeight,c=t.strideWidth,d=t.dilationDepth,m=t.dilationHeight,g=t.dilationWidth,y=t.filterDepth,C=t.filterHeight,T=t.filterWidth,k=4*Math.floor(t.inChannels/4),D=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${i}, ${c});\n      const ivec3 pads = ivec3(${e}, ${r}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${y}; wF++) {\n          int xF = xFCorner + wF * ${d};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${C}; wR++) {\n            int xR = xRCorner + wR * ${m};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${T}; wC++) {\n              int xC = xCCorner + wC * ${g};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${k}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===D}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${k}) *\n                  getW(wF, wR, wC, ${k}, d2);\n              } else if (${2===D}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${k}),\n                  getX(batch, xF, xR, xC, ${k} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${k}, d2),\n                  getW(wF, wR, wC, ${k} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===D}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${k}),\n                  getX(batch, xF, xR, xC, ${k} + 1),\n                  getX(batch, xF, xR, xC, ${k} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${k}, d2),\n                  getW(wF, wR, wC, ${k} + 1, d2),\n                  getW(wF, wR, wC, ${k} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tB{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ha(this.outputShape.length);const i=t.padInfo.left,c=t.strideWidth,d=t.dilationWidth,m=t.filterHeight,g=t.filterWidth,y=g;let C="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let M=0;M<g;M++)C+=`\n           vec4 xTexelC${2*M};\n           int xTexelC${2*M}Ready;\n           vec4 xTexelC${2*M+1};\n           int xTexelC${2*M+1}Ready;\n           vec4 xC${M};`;C+=`\n     for (int r = 0; r < ${m}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let M=0;M<g;M++)C+=`\n           xTexelC${2*M} = vec4(0.0);\n           xTexelC${2*M}Ready = 0;\n           xTexelC${2*M+1} = vec4(0.0);\n           xTexelC${2*M+1}Ready = 0;\n           xC${M} = vec4(0.0);`;C+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let M=0;M<(y+1)/2;M++){const R=2*M;if(C+=`\n           xC = xCCorner + ${R*d};\n           `,1===c){if(R<g&&(i%2==1?(C+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R}Ready == 0) {\n                   xTexelC${R} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${R}.zw = vec2(0.0);\n                   }\n                   xTexelC${R}Ready = 1;\n                 }\n               `,C+=1===d&&R>0?`\n                 xC${R} = vec4(xTexelC${R-2}.zw, xTexelC${R}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${R} = vec4(previous.zw, xTexelC${R}.xy);\n                   } else {\n                     xC${R} = vec4(0.0, 0.0, xTexelC${R}.xy);\n                   }\n                   `):C+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${R}Ready == 0) {\n                   xTexelC${R} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${R}.zw = vec2(0.0);\n                   }\n                   xTexelC${R}Ready = 1;\n                 }\n\n                 xC${R} = xTexelC${R};\n                 `,R+1<g)){const $=i%2==0?Au(d):d;d%2==0&&i%2==1||d%2!=0&&i%2!=1?(C+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${$};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R+1}Ready == 0) {\n                     xTexelC${R+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${R+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${R+1}Ready = 1;\n                   }\n                   `,C+=d>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${R+1} = vec4(previous.zw, xTexelC${R+1}.xy);\n                     } else {\n                      xC${R+1} = vec4(0.0, 0.0, xTexelC${R+1}.xy);\n                     }\n                     `:`\n                     xC${R+1} = vec4(xTexelC${R}.zw, xTexelC${R+1}.xy);\n                     `):C+=1===$?`\n                     xC${R+1} = xTexelC${R};\n                     `:`\n                     xCOffset = xC + ${$};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R+1}Ready == 0) {\n                       xTexelC${R+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${R+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${R+1}Ready = 1;\n                     }\n\n                     xC${R+1} = xTexelC${R+1};\n                     `}}else R<g&&(i%2==1?(C+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R}Ready == 0) {\n                   xTexelC${R} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${R}.zw = vec2(0.0);\n                   }\n                   xTexelC${R}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${R+1}Ready == 0) {\n                   xTexelC${R+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${R+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${R+1}Ready = 1;\n                 }\n\n                 xC${R} = vec4(xTexelC${R}.zw, xTexelC${R+1}.zw);\n               `,R+1<g&&(C+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${R+1} = vec4(xTexelC${R+1}.xy, final.xy);\n                 `)):(C+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${R}Ready == 0) {\n                   xTexelC${R} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${R}.zw = vec2(0.0);\n                   }\n                   xTexelC${R}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R+1}Ready == 0) {\n                   xTexelC${R+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${R+1}.zw = vec2(0.);\n                   }\n                   xTexelC${R+1}Ready = 1;\n                 }\n\n                 xC${R} = vec4(\n                   xTexelC${R}.xy, xTexelC${R+1}.xy);\n               `,R+1<g&&(C+=`\n                   xC${R+1} = vec4(xTexelC${R}.zw, xTexelC${R+1}.zw);\n                 `)));R<g&&(C+=`\n             wTexel = getW(r, ${R}, d1, d2);\n             dotProd += xC${R}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${R}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,R+1<g&&(C+=`\n               wTexel = getW(r, ${R+1}, d1, d2);\n               dotProd += xC${R+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${R+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}C+="\n     }\n   ",C+="\n     }\n   ",C+="\n     }\n   ";let T="",k="";r&&(T=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${r}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${r}\n         }`:`vec4 activation(vec4 x) {\n           ${r}\n         }`,k="result = activation(result);");const D=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${T}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${C}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${D}\n         ${k}\n         setOutput(result);\n       }\n     `}}class WH{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=ha(this.outputShape.length);const{dataFormat:r}=e,s=Ia(),a="channelsLast"===r,i=a?1:2,c=a?2:3,d=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let m="";for(let g=0;g<=1;g++)for(let y=0;y<=1;y++)m+=`\n          blockIndex = rc.z + ${y};\n          pos = rc.y + ${g};\n\n          ${d}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${c}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*g+y}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*g+y}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${m}\n\n        ${s.output} = result;\n      }\n    `}}function LI(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&1===e&&n[0]>1?[n[0],1]:null}function nB({x:n,filter:t,convInfo:e,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:c=null}){const d=n.shape,m=r.texData.get(n.dataId),g=e.inChannels,y=d[0]*d[1]*d[2],C=e.outChannels,T="channelsLast"===e.dataFormat;let M;const R=[];if(null!=a){const G=LI(a.shape,T);null!=G&&(a=zt({inputs:{x:a},backend:r,attrs:{shape:G}}),R.push(a))}if(null!=s){const G=LI(s.shape,T);null!=G&&(s=zt({inputs:{x:s},backend:r,attrs:{shape:G}}),R.push(s))}if((1!==y&&1!==C||!(g>1e3))&&m.isPacked&&T&&null!=m.texture&&d[2]%2!=0&&_t(m.shape.slice(-3),d.slice(-3))){const K={dataId:n.dataId,shape:[1,d[0]*d[1]*(d[2]+1),e.inChannels],dtype:n.dtype},ae=m.shape;m.shape=m.shape.slice(),m.shape[m.shape.length-2]++,q(Pb(m.shape,K.shape),()=>`packed reshape ${m.shape} to ${K.shape} isn't free`);const le=zt({inputs:{x:t},backend:r,attrs:{shape:[1,e.inChannels,e.outChannels]}});R.push(le);const he=RI({a:K,b:le,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:c,preluActivationWeights:a,leakyreluAlpha:i}),Ae=r.texData.get(he.dataId);q(Ae.isPacked,()=>"batchMatMul result is expected to be packed"),m.shape=ae,Ae.shape=e.outShape,M=ui({inputs:{x:he},backend:r}),M.shape=e.outShape,R.push(he)}else{const G=e.outHeight*e.outWidth,K=zt({inputs:{x:n},backend:r,attrs:{shape:T?[e.batchSize,G,e.inChannels]:[e.batchSize,e.inChannels,G]}}),ae=zt({inputs:{x:t},backend:r,attrs:{shape:[1,e.inChannels,e.outChannels]}}),le=RI({a:T?K:ae,b:T?ae:K,transposeA:!T,transposeB:!1,backend:r,bias:s,activation:c,preluActivationWeights:a,leakyreluAlpha:i});M=zt({inputs:{x:le},backend:r,attrs:{shape:e.outShape}}),R.push(K),R.push(ae),R.push(le)}for(const G of R)r.disposeIntermediateTensorInfo(G);return M}function rB({x:n,filter:t,convInfo:e,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:c=null}){const{filterWidth:d,filterHeight:m,inChannels:g,outWidth:y,outHeight:C,dataFormat:T}=e,k="channelsLast"===T,D=d*m*g,M=C*y,R=[e.batchSize,D,M],G=[];if(null!=a){const ut=LI(a.shape,k);null!=ut&&(a=zt({inputs:{x:a},backend:r,attrs:{shape:ut}}),G.push(a))}if(null!=s){const ut=LI(s.shape,k);null!=ut&&(s=zt({inputs:{x:s},backend:r,attrs:{shape:ut}}),G.push(s))}const K=zt({inputs:{x:t},backend:r,attrs:{shape:[1,D,ze(t.shape)/D]}});G.push(K);const ae=new WH(R,e),he=r.runWebGLProgram(ae,[n],"float32",[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]]),Ae=zt({inputs:{x:he},backend:r,attrs:{shape:R}});G.push(he),G.push(Ae);const ke=null!=s,Ue=null!=a,Je="leakyrelu"===c,st=c?Ub(c,!0):null,at=new PL(k?Ae.shape:K.shape,k?K.shape:Ae.shape,k?[e.batchSize,M,e.outChannels]:[e.batchSize,e.outChannels,M],!0,!1,ke,st,Ue,Je),ot=k?[Ae,K]:[K,Ae];if(s&&ot.push(s),Ue&&ot.push(a),Je){const ut=r.makeTensorInfo([],"float32",Qo(i,"float32"));ot.push(ut),G.push(ut)}const ct=r.runWebGLProgram(at,ot,"float32"),pt=zt({inputs:{x:ct},backend:r,attrs:{shape:e.outShape}});G.push(ct);for(const ut of G)r.disposeIntermediateTensorInfo(ut);return pt}const qH={kernelName:Ou,backendName:"webgl",kernelFunc:function GH(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:c,dataFormat:d,dilations:m,dimRoundingMode:g}=r,y=No(d),C=Rr(s.shape,a.shape,i,m,c,g,!1,y);let T;if(1!==C.filterHeight||1!==C.filterWidth||1!==C.dilationHeight||1!==C.dilationWidth||1!==C.strideHeight||1!==C.strideWidth||"SAME"!==C.padInfo.type&&"VALID"!==C.padInfo.type)if(C.strideWidth<=2&&"channelsLast"===y&&He().getBool("WEBGL_EXP_CONV")){const D=new tB(C);T=e.runWebGLProgram(D,[s,a],"float32",[[C.padInfo.top,C.padInfo.left],[C.strideHeight,C.strideWidth],[C.dilationHeight,C.dilationWidth],[C.inHeight,C.inWidth]])}else if(He().getBool("WEBGL_CONV_IM2COL"))T=rB({x:s,filter:a,convInfo:C,backend:e});else{const D=new eB(C);T=e.runWebGLProgram(D,[s,a],"float32")}else T=nB({x:s,filter:a,convInfo:C,backend:e});const k=zt({inputs:{x:T},backend:e,attrs:{shape:C.outShape}});return e.disposeIntermediateTensorInfo(T),k}};class HH{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===t.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KH{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,r=t.filterWidth,i="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${i?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${i?1:2}], coords[${i?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${r} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZH{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jH{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,r=t.filterHeight,s=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${r-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${r}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${r} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YH={kernelName:fi,backendName:"webgl",kernelFunc:function XH(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:c,dataFormat:d,dimRoundingMode:m,filterShape:g}=r,y=No(d),C=Rr(s.shape,g,i,1,c,m,!1,y),T=new HH(C);return e.runWebGLProgram(T,[s,a],"float32")}};class JH{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=ha(this.outputShape.length);const e=t.filterHeight,r=t.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            int wCPerm = ${r} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const e7={kernelName:Zl,backendName:"webgl",kernelFunc:function QH(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{inputShape:i,strides:c,pad:d,dataFormat:m,dimRoundingMode:g}=r,y=No(m),C=Rr(i,a.shape,c,1,d,g,!1,y);if(He().getBool("WEBGL_PACK")&&"channelsLast"===y){const T=[[C.strideHeight,C.strideWidth]],k=new JH(C);return e.runWebGLProgram(k,[s,a],"float32",T)}{const T=new KH(C);return e.runWebGLProgram(T,[s,a],"float32")}}},n7={kernelName:Fu,backendName:"webgl",kernelFunc:function t7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:c,dilations:d}=r,m=wo(s.shape,a.shape,i,d,c),g=new UH(m);return e.runWebGLProgram(g,[s,a],"float32")}},s7={kernelName:Od,backendName:"webgl",kernelFunc:function r7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:c,filterShape:d}=r,m=wo(s.shape,d,i,1,c),g=new ZH(m);return e.runWebGLProgram(g,[s,a],"float32")}},i7={kernelName:Fd,backendName:"webgl",kernelFunc:function a7(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{pad:i,strides:c,inputShape:d}=r,m=wo(d,a.shape,c,1,i),g=new jH(m);return e.runWebGLProgram(g,[s,a],"float32")}},l7=tr({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Nd}\n  return result;\n`}),c7={kernelName:hi,backendName:"webgl",kernelFunc:l7},f7=tr({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),h7={kernelName:oo,backendName:"webgl",kernelFunc:f7};class d7{constructor(t,e,r,s,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,c,d,m]=t,[g]=e,[y,C]=r;this.outputShape=[g,y,C,m];const T="bilinear"===s?1:0,[k,D]=[c-1+".0",d-1+".0"],[M,R,$]=y>1?[""+(c-1)/(y-1),"(y2-y1) * height_ratio",`y1*${k} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${k}`],[V,G,K]=C>1?[""+(d-1)/(C-1),"(x2-x1) * width_ratio",`x1*${D} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${D}`];this.userCode=`\n      const float height_ratio = float(${M});\n      const float width_ratio = float(${V});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${R};\n        float width_scale = ${G};\n\n        float in_y = ${$};\n        if( in_y < 0.0 || in_y > ${k} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${K};\n        if( in_x < 0.0 || in_x > ${D} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${T} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const p7={kernelName:bf,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{image:s,boxes:a,boxInd:i}=t,{cropSize:c,method:d,extrapolationValue:m}=r,g=new d7(s.shape,a.shape,c,d,m);return e.runWebGLProgram(g,[s,a,i],"float32")}};var Wg=(()=>{return(n=Wg||(Wg={})).Prod="*",n.Sum="+",Wg;var n})();class sB{constructor(t,e,r,s){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,c=r?this.op===Wg.Prod?"1.0":"0.0":`getX(${aB(a,"coords",this.op)})`,d=this.outputShape[this.outputShape.length-1];let m="",g="";r?(m=s?"end != "+(d-1):"end != 0",g=s?"end + 1":"end - 1"):(m=s?`end + pow2 < ${d}`:"end >= pow2",g=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${yr(a)} coords = getOutputCoords();\n        int end = ${iB(a,"coords",this.op)};\n        float val = ${c};\n        int pow2 = int(pow(2.0, index));\n        if (${m}) {\n          int idx = ${g};\n          ${iB(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${aB(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function aB(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.x, ${t}.y`;if(3===n)return`${t}.x, ${t}.y, ${t}.z`;if(4===n)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function iB(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.y`;if(3===n)return`${t}.z`;if(4===n)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function oB(n,t,e,r,s,a){const i=t.shape.length,c=Or([r],i);let d=t;null!=c&&(d=Ta({inputs:{x:t},backend:e,attrs:{perm:c}}));const m=Br(1,i)[0];if(m!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const g=d.shape[m];let y=ui({inputs:{x:d},backend:e});for(let C=0;C<=Math.ceil(Math.log2(g))-1;C++){const T=new sB(n,d.shape,!1,a),D=y;y=e.runWebGLProgram(T,[y],y.dtype,[[C]]),e.disposeIntermediateTensorInfo(D)}if(s){const C=new sB(n,d.shape,s,a),T=y;y=e.runWebGLProgram(C,[y],y.dtype),e.disposeIntermediateTensorInfo(T)}if(null!=c){const T=Ta({inputs:{x:y},backend:e,attrs:{perm:fu(c)}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(d),T}return y}const g7={kernelName:yf,backendName:"webgl",kernelFunc:function m7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:c}=r;return oB(Wg.Prod,s,e,a,i,c)}},y7={kernelName:Lu,backendName:"webgl",kernelFunc:function v7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:c}=r;return oB(Wg.Sum,s,e,a,i,c)}},x7={kernelName:Ld,backendName:"webgl",kernelFunc:function b7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i,binaryOutput:c}=r;if(1===s.shape.length){const d=e.readSync(s.dataId),m=e.readSync(a.dataId),g=SL(d,m,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,g)}if(2===s.shape.length){const d=e.bufferSync(s),m=e.bufferSync(a),g=D9(d,m,i,c);return e.makeTensorInfo(g.shape,a.dtype,g.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class w7{constructor(t,e,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=r,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const S7={kernelName:Bd,backendName:"webgl",kernelFunc:function N7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockSize:a,dataFormat:i}=r,c=s.shape[0],y=("NHWC"===i?s.shape[1]:s.shape[2])*a,C=("NHWC"===i?s.shape[2]:s.shape[3])*a,T=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),D=new w7("NHWC"===i?[c,y,C,T]:[c,T,y,C],a,i);return e.runWebGLProgram(D,[s],s.dtype)}};class uB{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ha(this.outputShape.length);const i=t.filterHeight,c=t.filterWidth,d=t.outChannels/t.inChannels;let m="",g="";r&&(m=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${r}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${r}\n        }`:`\n          float activation(float x) {\n            ${r}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${m}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${d};\n        int q = d2 - d1 * ${d};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class lB{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ha(this.outputShape.length);const i=t.outChannels/t.inChannels,c=t.padInfo.left,d=t.strideWidth,m=t.dilationWidth,g=t.filterHeight,y=t.filterWidth,C=y;let T="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let R=0;R<y;R++)T+=`\n          vec4 xTexelC${2*R};\n          int xTexelC${2*R}Ready;\n          vec4 xTexelC${2*R+1};\n          int xTexelC${2*R+1}Ready;\n          vec4 xC${R};`;T+=`\n    for (int r = 0; r < ${g}; r++) {\n      `;for(let R=0;R<y;R++)T+=`\n          xTexelC${2*R} = vec4(0.0);\n          xTexelC${2*R}Ready = 0;\n          xTexelC${2*R+1} = vec4(0.0);\n          xTexelC${2*R+1}Ready = 0;\n          xC${R} = vec4(0.0);`;T+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let R=0;R<(C+1)/2;R++){const $=2*R;if(T+=`\n          xC = xCCorner + ${$*m};\n          `,1===d){if($<y&&(c%2==1?(T+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {\n                  xTexelC${$} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${$}.zw = vec2(0.0);\n                  }\n                  xTexelC${$}Ready = 1;\n                }\n              `,T+=1===m&&$>0?`\n                xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${$} = vec4(previous.zw, xTexelC${$}.xy);\n                  } else {\n                    xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);\n                  }\n                  `):T+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {\n                  xTexelC${$} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${$}.zw = vec2(0.0);\n                  }\n                  xTexelC${$}Ready = 1;\n                }\n\n                xC${$} = xTexelC${$};\n                `,$+1<y)){const V=c%2==0?Au(m):m;m%2==0&&c%2==1||m%2!=0&&c%2!=1?(T+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${V};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {\n                    xTexelC${$+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${$+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${$+1}Ready = 1;\n                  }\n                  `,T+=m>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);\n                    } else {\n                     xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);\n                    }\n                    `:`\n                    xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);\n                    `):T+=1===V?`\n                    xC${$+1} = xTexelC${$};\n                    `:`\n                    xCOffset = xC + ${V};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {\n                      xTexelC${$+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${$+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${$+1}Ready = 1;\n                    }\n\n                    xC${$+1} = xTexelC${$+1};\n                    `}}else $<y&&(c%2==1?(T+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {\n                  xTexelC${$} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${$}.zw = vec2(0.0);\n                  }\n                  xTexelC${$}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {\n                  xTexelC${$+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${$+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${$+1}Ready = 1;\n                }\n\n                xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);\n              `,$+1<y&&(T+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);\n                `)):(T+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {\n                  xTexelC${$} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${$}.zw = vec2(0.0);\n                  }\n                  xTexelC${$}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {\n                  xTexelC${$+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${$+1}.zw = vec2(0.);\n                  }\n                  xTexelC${$+1}Ready = 1;\n                }\n\n                xC${$} = vec4(\n                  xTexelC${$}.xy, xTexelC${$+1}.xy);\n              `,$+1<y&&(T+=`\n                  xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);\n                `)));$<y&&(T+=`\n            wTexel = getW(r, ${$}, d1, q);\n            dotProd += xC${$} * vec4(wTexel.xz, wTexel.xz);\n          `,$+1<y&&(T+=`\n              wTexel = getW(r, ${$+1}, d1, q);\n              dotProd += xC${$+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}T+="\n    }\n  ",T+="\n      }\n    ";let k="",D="";r&&(k=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${r}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${r}\n        }`:`vec4 activation(vec4 x) {\n          ${r}\n        }`,D="result = activation(result);");const M=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${k}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${T}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${M}\n        ${D}\n        setOutput(result);\n      }\n    `}}const I7={kernelName:xf,backendName:"webgl",kernelFunc:function C7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:c,dilations:d,dimRoundingMode:m}=r;let g=d;null==g&&(g=[1,1]),q(ds(i,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${g}'`);const y=Rr(s.shape,a.shape,i,g,c,m,!0);let C;return C=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1?new lB(y):new uB(y),e.runWebGLProgram(C,[s,a],"float32",[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]])}};class _7{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class T7{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,r=t.filterWidth,d=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${r} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${d}; dm++) {\n              int d2 = d1 * ${d} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const E7={kernelName:Pd,backendName:"webgl",kernelFunc:function A7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,dilations:c,pad:d,dimRoundingMode:m,filterShape:g}=r,y=Rr(s.shape,g,i,c,d,m,!0),C=new _7(y);return e.runWebGLProgram(C,[s,a],"float32")}},M7={kernelName:zd,backendName:"webgl",kernelFunc:function k7(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{strides:i,dilations:c,pad:d,dimRoundingMode:m,inputShape:g}=r,y=Rr(g,a.shape,i,c,d,m,!0),C=new T7(y);return e.runWebGLProgram(C,[s,a],"float32")}};class D7{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const $7={kernelName:Vd,backendName:"webgl",kernelFunc:function R7(n){const{inputs:t,backend:e}=n,{x:r}=t,s=[...r.shape,...r.shape],a=ze(r.shape),i=zt({inputs:{x:r},backend:e,attrs:{shape:[a]}}),c=new D7(a),d=e.runWebGLProgram(c,[i],i.dtype),m=zt({inputs:{x:d},backend:e,attrs:{shape:s}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(d),m}};class O7{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:r,padInfo:s,strideHeight:a,strideWidth:i,filterHeight:c,filterWidth:d,dilationHeight:m,dilationWidth:g}=t,{top:y,left:C}=s;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${y}, ${C});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${c}; h++) {\n          int hIn = hBeg + h * ${m};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${d}; w++) {\n              int wIn = wBeg + w * ${g};\n\n              if (wIn >= 0 && wIn < ${r}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const L7={kernelName:wf,backendName:"webgl",kernelFunc:function F7(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:c,dilations:d}=r,m=Ch(s.shape,a.shape,i,c,"NHWC",d);let g;const y=new O7(m);g=e.runWebGLProgram(y,[s,a],"float32");const C=zt({inputs:{x:g},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(g),C}},P7={kernelName:Gd,backendName:"webgl",kernelFunc:function B7(n){const{inputs:t,backend:e,attrs:r}=n,{equation:s}=r,a=t,{allDims:i,summedDims:c,idDims:d}=Wm(s,a.length);h0(i.length,d,a);const{path:m,steps:g}=Gm(c,d),y=g.length;let C=null,T=i.length;const k=[];for(let D=0;D<y;++D){for(const M of g[D]){const{permutationIndices:R,expandDims:$}=f0(T,d[M]);let V;d0(R)?V=a[M]:(V=Ta({inputs:{x:a[M]},backend:e,attrs:{perm:R}}),k.push(V));const G=V.shape.slice();for(let K=0;K<$.length;++K)G.splice($[K],0,1);_t(V.shape,G)||(V=zt({inputs:{x:V},backend:e,attrs:{shape:G}}),k.push(V)),null===C?C=V:(C=LR({inputs:{a:V,b:C},backend:e}),k.push(C))}D<y-1&&(m[D]>=0&&(C=DI({inputs:{x:C},backend:e,attrs:{axis:m[D]-(i.length-T),keepDims:!1}}),k.push(C)),T--)}for(const D of k)D!==C&&e.disposeIntermediateTensorInfo(D);return C}},z7=tr({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),V7={kernelName:Xl,backendName:"webgl",kernelFunc:z7},G7={kernelName:qd,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:r,y:s}=t,a=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vb("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new zg("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return e.runWebGLProgram(a,[r,s],r.dtype)}},q7=Js({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:F9}),H7={kernelName:Nf,backendName:"webgl",kernelFunc:q7},Z7=tr({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s0};\n  float a1 = ${a0};\n  float a2 = ${Xh};\n  float a3 = ${i0};\n  float a4 = ${o0};\n  float a5 = ${u0};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),j7={kernelName:Yl,backendName:"webgl",kernelFunc:Z7},cB=tr({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:L9,dtype:"float32"}),Y7={kernelName:Bu,backendName:"webgl",kernelFunc:cB};function VR(n){const{inputs:t,attrs:e,backend:r}=n,{dim:s}=e,{input:a}=t,i=a.shape.length,c=a.shape.slice();let d=s;return s<0&&(q(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),d=i+s+1),c.splice(d,0,1),zt({inputs:{x:a},backend:r,attrs:{shape:c}})}const J7={kernelName:Sf,backendName:"webgl",kernelFunc:VR},fB="return exp(x) - 1.0;",Q7=tr({opSnippet:fB,packedOpSnippet:fB,cpuKernelImpl:B9}),eK={kernelName:Jl,backendName:"webgl",kernelFunc:Q7};class hB{constructor(t,e,r){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const a=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${s}.0`:"1.0";let c;if("real"===t)c="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);c="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${c}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function dB(n,t,e){const r=e.texData.get(n.dataId),s=ze(n.shape),a=n.shape[n.shape.length-1],c=zt({inputs:{x:n},backend:e,attrs:{shape:[s/a,a]}}),d=c.shape,m=new hB("real",d,t),g=new hB("imag",d,t),y=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:d},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:d}],C=e.runWebGLProgram(m,y,"float32"),T=e.runWebGLProgram(g,y,"float32"),k=of({inputs:{real:C,imag:T},backend:e});e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(T);const D=zt({inputs:{x:k},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(k),D}const nK={kernelName:Hd,backendName:"webgl",kernelFunc:function tK(n){const{inputs:t,backend:e}=n,{input:r}=t;return dB(r,!1,e)}};class rK{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Hb(n){const{backend:t,attrs:e}=n,{shape:r,value:s}=e;let{dtype:a}=e;if(a=a||ao(s),"string"===a){const i=Wn(a,ze(r));return i.fill(s),t.makeTensorInfo(r,a,i)}{const i=new rK(r,s);return t.runWebGLProgram(i,[],a,[[s]])}}const sK={kernelName:Kd,backendName:"webgl",kernelFunc:Hb};class aK{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const iK={kernelName:Cf,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,r=t,s=new aK(e.shape);return r.runWebGLProgram(s,[e],e.dtype)}},pB="return floor(x);",oK=tr({opSnippet:pB,packedOpSnippet:pB,cpuKernelImpl:P9}),uK={kernelName:Ql,backendName:"webgl",kernelFunc:oK},lK=Js({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),cK={kernelName:ec,backendName:"webgl",kernelFunc:lK};class fK{constructor(t){this.variableNames=["A"];const e=Ia(),[r,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class hK{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Ia(),[r,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${r}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const dK={kernelName:th,backendName:"webgl",kernelFunc:function pK(n){const{inputs:t,backend:e,attrs:r}=n;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[d,m]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],g=[m,d],y=[m,d,a];if(c||i){const D=He().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Gg||D!==UR)&&(UR=D,Gg=document.createElement("canvas").getContext("2d",{willReadFrequently:UR})),Gg.canvas.width=d,Gg.canvas.height=m,Gg.drawImage(s,0,0,d,m),s=Gg.canvas}const C=e.makeTensorInfo(g,"int32");e.texData.get(C.dataId).usage=oi.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(C.dataId),s);const T=He().getBool("WEBGL_PACK")?new hK(y):new fK(y),k=e.runWebGLProgram(T,[C],"int32");return e.disposeData(C.dataId),k}};let Gg,UR=He().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const gK={kernelName:nh,backendName:"webgl",kernelFunc:function mK(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:c}=t,{strides:d,pad:m,dataFormat:g,dilations:y,dimRoundingMode:C,activation:T,leakyreluAlpha:k}=r,D=No(g),M=Rr(s.shape,a.shape,d,y,m,C,!1,D);let R;const $=[],V=null!=i,G=null!=c,K="leakyrelu"===T,ae=()=>{const he=[s,a],Ae=(ke,Ue)=>{if("NCHW"===Ue&&1===ke.shape.length&&1!==ke.shape[0]){const Je=zt({inputs:{x:ke},backend:e,attrs:{shape:[ke.shape[0],1,1]}});return $.push(Je),Je}return ke};if(V&&he.push(Ae(i,g)),G&&he.push(Ae(c,g)),K){const ke=e.makeTensorInfo([],"float32",Qo(k,"float32"));he.push(ke),$.push(ke)}return he};if(1!==M.filterHeight||1!==M.filterWidth||1!==M.dilationHeight||1!==M.dilationWidth||1!==M.strideHeight||1!==M.strideWidth||"SAME"!==M.padInfo.type&&"VALID"!==M.padInfo.type)if(M.strideWidth<=2&&"channelsLast"===D&&He().getBool("WEBGL_EXP_CONV")){const he=T?Ub(T,!0):null,Ae=new tB(M,V,he,G,K),ke=[[M.padInfo.top,M.padInfo.left],[M.strideHeight,M.strideWidth],[M.dilationHeight,M.dilationWidth],[M.inHeight,M.inWidth]],Ue=ae();R=e.runWebGLProgram(Ae,Ue,"float32",ke)}else if(He().getBool("WEBGL_CONV_IM2COL"))R=rB({x:s,filter:a,convInfo:M,backend:e,bias:i,activation:T,preluActivationWeights:c,leakyreluAlpha:k});else{const he=T?Ub(T,!1):null,Ae=new eB(M,V,he,G,K),ke=ae();R=e.runWebGLProgram(Ae,ke,"float32")}else R=nB({x:s,filter:a,convInfo:M,backend:e,bias:i,activation:T,preluActivationWeights:c,leakyreluAlpha:k});const le=zt({inputs:{x:R},backend:e,attrs:{shape:M.outShape}});return $.push(R),$.forEach(he=>e.disposeIntermediateTensorInfo(he)),le}},yK={kernelName:rh,backendName:"webgl",kernelFunc:function vK(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:c}=t,{strides:d,pad:m,dilations:g,dimRoundingMode:y,activation:C,leakyreluAlpha:T}=r,k=[];let D=g;null==D&&(D=[1,1]),q(ds(d,D),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${d} and dilations '${D}'`);const M=Rr(s.shape,a.shape,d,D,m,y,!0),R=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&M.strideWidth<=2&&M.outChannels/M.inChannels==1,$=C?Ub(C,R):null,V=[s,a],G=null!=i,K=null!=c,ae="leakyrelu"===C;if(G&&V.push(i),K&&V.push(c),ae){const ke=e.makeTensorInfo([],"float32",Qo(T,"float32"));V.push(ke),k.push(ke)}let le;le=R?new lB(M,G,$,K,ae):new uB(M,G,$,K,ae);const Ae=e.runWebGLProgram(le,V,"float32",[[M.padInfo.top,M.padInfo.left],[M.strideHeight,M.strideWidth],[M.dilationHeight,M.dilationWidth],[M.inHeight,M.inWidth]]);return k.forEach(ke=>e.disposeIntermediateTensorInfo(ke)),Ae}};class bK{constructor(t,e,r,s){this.sliceDim=t,this.strides=e,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const a=yr(r.length);let i="\n    int index;";for(let c=0;c<this.sliceDim;c++)i+=`\n          index = round(getIndices(coords[0], ${c}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[c]};\n          flattenIndex += index * ${this.strides[c]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const wK={kernelName:Zd,backendName:"webgl",kernelFunc:function xK(n){const{inputs:t,backend:e}=n,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],c=ze(r.shape),[d,m,g,y]=Hp(r,s),C=zt({inputs:{x:s},backend:e,attrs:{shape:[m,i]}}),T=zt({inputs:{x:r},backend:e,attrs:{shape:[ze(r.shape)/g,g]}});if(e.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const R=e.readSync(s.dataId),$=e.bufferSync(r),V=z9(R,$,r.dtype,m,i,g,y,r.shape,c);return e.makeTensorInfo(d,r.dtype,V.values)}const k=new bK(i,y,[m,g],r.shape),D=e.runWebGLProgram(k,[T,C],T.dtype),M=zt({inputs:{x:D},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(D),M}};class NK{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const r=yr(this.rank),s=function SK(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)r.push(2===s?"index":`${e[s]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function mB(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,indices:a}=t,{axis:i,batchDims:c}=r,d=Mn(i,s.shape)[0];if(He().get("DEBUG")){const $=e.readSync(a.dataId),V=s.shape[d];for(let G=0;G<$.length;++G){const K=$[G];q(K<=V-1&&K>=0,()=>`GatherV2: the index value ${K} is not in [0, ${V-1}]`)}}const m=Hm(s,a,d,c),g=ze(a.shape),y=[],C=zt({inputs:{x:s},backend:e,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),T=zt({inputs:{x:a},backend:e,attrs:{shape:[m.batchSize,g/m.batchSize]}});y.push(C),y.push(T);const k=[m.batchSize,m.outerSize,g/m.batchSize,m.sliceSize];if(e.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const $=e.bufferSync(T),V=e.bufferSync(C),G=V9(V,$,k);return y.forEach(K=>e.disposeIntermediateTensorInfo(K)),e.makeTensorInfo(m.outputShape,G.dtype,G.values)}const D=new NK(C.shape,k),M=e.runWebGLProgram(D,[C,T],C.dtype);y.push(M);const R=zt({inputs:{x:M},backend:e,attrs:{shape:m.outputShape}});return y.forEach($=>e.disposeIntermediateTensorInfo($)),R}const CK={kernelName:_f,backendName:"webgl",kernelFunc:mB},IK=Js({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:U9,dtype:"bool"}),_K={kernelName:Tf,backendName:"webgl",kernelFunc:IK},TK=Js({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:W9}),AK={kernelName:tc,backendName:"webgl",kernelFunc:TK},kK={kernelName:jd,backendName:"webgl",kernelFunc:function EK(n){const{inputs:t,backend:e}=n,{input:r}=t;return dB(r,!0,e)}},MK=tr({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),DK={kernelName:rc,backendName:"webgl",kernelFunc:MK},RK=tr({opSnippet:"return float(isinf(x));",dtype:"bool"}),$K={kernelName:sc,backendName:"webgl",kernelFunc:RK},OK=tr({opSnippet:"return float(isnan(x));",dtype:"bool"}),FK={kernelName:ac,backendName:"webgl",kernelFunc:OK},LK=Js({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:G9,dtype:"bool"}),BK={kernelName:Ef,backendName:"webgl",kernelFunc:LK},PK=Js({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:q9,dtype:"bool"}),zK={kernelName:kf,backendName:"webgl",kernelFunc:PK},UK={kernelName:Yd,backendName:"webgl",kernelFunc:function VK(n){const{backend:t,attrs:e}=n,{start:r,stop:s,num:a}=e,i=H9(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},GK=tr({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:K9}),qK={kernelName:ic,backendName:"webgl",kernelFunc:GK},KK=tr({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),ZK={kernelName:oc,backendName:"webgl",kernelFunc:KK},jK=Js({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),XK={kernelName:Mf,backendName:"webgl",kernelFunc:jK},YK=tr({opSnippet:"return float(!(x >= 1.0));"}),JK={kernelName:uo,backendName:"webgl",kernelFunc:YK},QK=Js({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),eZ={kernelName:qo,backendName:"webgl",kernelFunc:QK};class tZ{constructor(t,e,r,s,a){this.variableNames=["x"],this.outputShape=[];const i=e,c=t[3]-1;let d;this.outputShape=t;const m=`float(${r}) + float(${s}) * sum`;d=.5===a?`inversesqrt(${m})`:1===a?`1.0/(${m})`:`exp(log(${m}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${c}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${d};\n        setOutput(val);\n      }\n    `}}class nZ{constructor(t,e,r,s,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,c=t[3]-1;let d;this.outputShape=t;const m=`float(${r}) + float(${s}) * sum`;d=.5===a?`inversesqrt(${m})`:1===a?`1.0/(${m})`:`exp(log(${m}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${c}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${d};\n        setOutput(result);\n      }\n    `}}const rZ={kernelName:lo,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{depthRadius:a,bias:i,alpha:c,beta:d}=r,m=He().getBool("WEBGL_PACK_NORMALIZATION")?new nZ(s.shape,a,i,c,d):new tZ(s.shape,a,i,c,d);return e.runWebGLProgram(m,[s],s.dtype)}};class sZ{constructor(t,e,r,s,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=r,this.alpha=s,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${r});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const aZ={kernelName:Pu,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s,y:a,dy:i}=t,{depthRadius:c,bias:d,alpha:m,beta:g}=r,y=new sZ(s.shape,c,d,m,g);return e.runWebGLProgram(y,[s,a,i],s.dtype)}};function gB(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reductionIndices:a,keepDims:i}=r,c=s.shape.length,d=Mn(a,s.shape);let m=d;const g=Or(m,c),y=null!=g,C=e.shouldExecuteOnCPU([s]);let T=s;if(y){if(C){const V=e.texData.get(T.dataId).values,G=new Array(c);for(let le=0;le<G.length;le++)G[le]=s.shape[g[le]];const K=OR(V,s.shape,s.dtype,g,G);T=e.makeTensorInfo(G,s.dtype),e.texData.get(T.dataId).values=K}else T=MI(s,g,e);m=Br(m.length,c)}gs("max",m,c);const[k,D]=ms(T.shape,m);let R,M=k;if(i&&(M=Wr(k,d)),C){const V=e.texData.get(T.dataId).values,G=Z9(V,ze(D),M,s.dtype);R=e.makeTensorInfo(M,s.dtype),e.texData.get(R.dataId).values=G}else R=function iZ(n,t,e,r){const s=ze(t),c=zt({inputs:{x:n},attrs:{shape:[ze(n.shape)/s,s]},backend:r}),d=Sd(c,n.dtype,"max",r),m=zt({inputs:{x:d},attrs:{shape:e},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(d),m}(T,D,M,e);return y&&e.disposeIntermediateTensorInfo(T),R}const oZ={kernelName:nr,backendName:"webgl",kernelFunc:gB},cZ=Js({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:j9}),fZ={kernelName:vn,backendName:"webgl",kernelFunc:cZ},dZ={kernelName:Ko,backendName:"webgl",kernelFunc:function hZ(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;Og(s,"maxPool");const{filterSize:a,strides:i,pad:c,dimRoundingMode:d}=r;q(ds(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const g=ma(s.shape,a,i,1,c,d);if(1===g.filterWidth&&1===g.filterHeight&&_t(g.inShape,g.outShape))return ui({inputs:{x:s},backend:e});const y=new Wb(g,"max",!1);return e.runWebGLProgram(y,[s],s.dtype)}},mZ={kernelName:di,backendName:"webgl",kernelFunc:function pZ(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:c,dataFormat:d,dimRoundingMode:m}=r,y=Ri(s.shape,a,i,[1,1,1],c,m,d),C=new BR(y,"max",!1);return e.runWebGLProgram(C,[s],s.dtype)}};class gZ{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const a=t.effectiveFilterHeight,i=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${a-1-t.padInfo.top}, ${i-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${a*i-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vZ{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const d=t.effectiveFilterDepth,m=t.effectiveFilterHeight,g=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${d-1-t.padInfo.front}, ${m-1-t.padInfo.top}, ${g-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${m};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${g};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d*m*g-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${m} * ${g} +\n                  wR * ${g} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bZ={kernelName:uc,backendName:"webgl",kernelFunc:function yZ(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a,{filterSize:c,strides:d,pad:m,dimRoundingMode:g}=r,C=Ri(i.shape,c,d,[1,1,1],m,g),T=new BR(C,"max",!0),k=e.runWebGLProgram(T,[i],i.dtype),D=new vZ(C),M=e.runWebGLProgram(D,[s,k],i.dtype);return e.disposeIntermediateTensorInfo(k),M}},wZ={kernelName:zu,backendName:"webgl",kernelFunc:function xZ(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a,output:i}=t,c=a;Og([a,i],"maxPoolGrad");const{filterSize:d,strides:m,pad:g,dimRoundingMode:y}=r,C=ma(c.shape,d,m,1,g,y),k=new Wb(C,"max",!0),D=e.runWebGLProgram(k,[c],c.dtype),M=new gZ(C),R=e.runWebGLProgram(M,[s,D],c.dtype);return e.disposeIntermediateTensorInfo(D),R}},SZ={kernelName:Zo,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:r}=n,{filterSize:s,strides:a,pad:i,includeBatchInIndex:c}=t,d=e;q(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const m=[1,1];q(ds(a,m),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);const g=ma(r.shape,s,a,m,i),[y,C]=function NZ(n,t,e,r){let s=new Wb(e,"max",!1);const a=r.runWebGLProgram(s,[n],"float32");return s=new Wb(e,"max",!0,!0,t),[a,r.runWebGLProgram(s,[n],"float32")]}(r,c,g,d);return[y,C]}},IZ={kernelName:Df,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:r}=n,{keepDims:s,axis:a}=t,i=e,c=r.shape.length,d=Mn(a,r.shape);let m=d;const g=Or(m,c),y=null!=g,C=i.shouldExecuteOnCPU([r]),T=[];let k=r;if(y){if(C){const G=i.texData.get(k.dataId).values,K=new Array(c);for(let he=0;he<K.length;he++)K[he]=r.shape[g[he]];const ae=OR(G,r.shape,r.dtype,g,K);k=i.makeTensorInfo(K,r.dtype),i.texData.get(k.dataId).values=ae}else k=MI(r,g,i);T.push(k),m=Br(m.length,c)}gs("sum",m,c);const[D,M]=ms(k.shape,m);let R=D;s&&(R=Wr(D,d));const $=function CZ(n,t,e,r){const s=ze(t),c=zt({inputs:{x:n},attrs:{shape:[ze(n.shape)/s,s]},backend:r}),d=Sd(c,"float32","mean",r),m=zt({inputs:{x:d},attrs:{shape:e},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(d),m}(k,M,R,i);for(const V of T)i.disposeIntermediateTensorInfo(V);return $}},TZ={kernelName:lc,backendName:"webgl",kernelFunc:function _Z(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,c=s.shape.length,d=Mn(a,s.shape);let m=d;const g=Or(m,c);let y=s;null!=g&&(y=Ta({inputs:{x:s},backend:e,attrs:{perm:g}}),m=Br(m.length,s.shape.length)),gs("min",m,c);const[C,T]=ms(y.shape,m),D=zt({inputs:{x:y},backend:e,attrs:{shape:[-1,ze(T)]}}),M=Sd(D,D.dtype,"min",e);let R;return R=zt(i?{inputs:{x:M},backend:e,attrs:{shape:Wr(C,d)}}:{inputs:{x:M},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(M),null!=g&&e.disposeIntermediateTensorInfo(y),R}},kZ=Js({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:X9}),MZ={kernelName:Vu,backendName:"webgl",kernelFunc:kZ};class DZ{constructor(t,e,r){this.variableNames=["x"],this.outputShape=e.map((g,y)=>g[0]+t[y]+g[1]);const s=t.length,a=yr(s),i=e.map(g=>g[0]).join(","),c=e.map((g,y)=>g[0]+t[y]).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),m="reflect"===r?0:1;this.userCode=1!==s?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${c});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${m};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${m};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${d}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${c};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${m};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${m};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class RZ{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((k,D)=>k[0]+t[D]+k[1]);const s=t.length,a=yr(s),i=e.map(k=>k[0]).join(","),c=e.map((k,D)=>k[0]+t[D]).join(","),d=_a("rc",s),m=_a("source",s),g=`${d[s-1]} < ${this.outputShape[s-1]}`,y=1===s?"source":`vec2(${m.slice(-2).join()})`,C="reflect"===r?0:1;let T="";if(1===s){const k=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${C};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${C};\n        }\n        source -= start;\n      `;T=`\n        ${a} rc = outputLoc;\n        ${k}\n        result[0] = getChannel(getX(${m.join()}), ${y});\n        ${d[s-1]} += 1;\n        if(${g}) {\n          ${k}\n          result[1] = getChannel(getX(${m.join()}), ${y});\n        }\n      `}else{const k=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${C}) +\n                gte * ((end - 1) * 2 - source + ${C});\n        source -= start;\n      `;T=`\n        ${a} rc = outputLoc;\n        ${k}\n        result[0] = getChannel(getX(${m.join()}), ${y});\n        ${d[s-1]} += 1;\n        if(${g}) {\n          ${k}\n          result[1] = getChannel(getX(${m.join()}), ${y});\n        }\n        rc = outputLoc;\n        ${d[s-2]} += 1;\n        if(${d[s-2]} < ${this.outputShape[s-2]}) {\n          ${k}\n          result[2] = getChannel(getX(${m.join()}), ${y});\n          ${d[s-1]} += 1;\n          if(${g}) {\n            ${k}\n            result[3] = getChannel(getX(${m.join()}), ${y});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${c});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${T}\n        setOutput(result);\n      }\n    `}}const $Z={kernelName:Rf,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r}=n,{paddings:s,mode:a}=e,i=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RZ(r.shape,s,a):new DZ(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},LZ=Js({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),BZ={kernelName:cc,backendName:"webgl",kernelFunc:LZ};class PZ{constructor(t,e,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,r],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const vB=Js({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),zZ={kernelName:jl,backendName:"webgl",kernelFunc:vB},yB="return a - b;",bB=Js({opSnippet:yB,packedOpSnippet:yB,supportsComplex:!0,cpuKernelImpl:vq}),VZ={kernelName:co,backendName:"webgl",kernelFunc:bB};function xB(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{dim:a}=r,i=Mn([a],s.shape),c=gB({inputs:{x:s},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),d=Wr(c.shape,i),m=zt({inputs:{x:c},backend:e,attrs:{shape:d}}),g=bB({inputs:{a:s,b:m},backend:e}),y=cB({inputs:{x:g},backend:e}),C=DI({inputs:{x:y},backend:e,attrs:{axis:i,keepDims:!1}}),T=zt({inputs:{x:C},backend:e,attrs:{shape:d}}),k=vB({inputs:{a:y,b:T},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(T),k}const UZ={kernelName:Jf,backendName:"webgl",kernelFunc:xB},GZ={kernelName:Jd,backendName:"webgl",kernelFunc:function WZ(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{numSamples:a,seed:i,normalized:c}=r,d=c?s:xB({inputs:{logits:s},backend:e,attrs:{dim:s.shape.length-1}}),y=new PZ(d.shape[0],d.shape[1],a),T=e.runWebGLProgram(y,[d],"int32",[[i]]);return c||e.disposeIntermediateTensorInfo(d),T}},ZZ={kernelName:$f,backendName:"webgl",kernelFunc:function KZ(n){const{inputs:t,backend:e}=n,{x:r}=t;if(e.shouldExecuteOnCPU([r])){const a=e.texData.get(r.dataId),[i,c]=J9(a.values,r.shape,r.dtype);return e.makeTensorInfo(c,r.dtype,i)}let s;return s=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new af(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Iu(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),e.runWebGLProgram(s,[r],r.dtype)}},jZ=Gc,YZ={kernelName:Qd,backendName:"webgl",kernelFunc:function XZ(n){Ra("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:d}=r,m=e.readSync(s.dataId),g=e.readSync(a.dataId),{selectedIndices:y}=jZ(m,g,i,c,d);return e.makeTensorInfo([y.length],"int32",new Int32Array(y))}},JZ=Fm,ej={kernelName:ep,backendName:"webgl",kernelFunc:function QZ(n){Ra("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:m}=r,g=e.readSync(s.dataId),y=e.readSync(a.dataId),{selectedIndices:C,validOutputs:T}=JZ(g,y,i,c,d,m);return[e.makeTensorInfo([C.length],"int32",new Int32Array(C)),e.makeTensorInfo([],"int32",new Int32Array([T]))]}},tj=Lm,rj={kernelName:tp,backendName:"webgl",kernelFunc:function nj(n){Ra("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:d,softNmsSigma:m}=r,g=e.readSync(s.dataId),y=e.readSync(a.dataId),C=i,T=c,k=d,D=m,{selectedIndices:M,selectedScores:R}=tj(g,y,C,T,k,D);return[e.makeTensorInfo([M.length],"int32",new Int32Array(M)),e.makeTensorInfo([R.length],"float32",new Float32Array(R))]}};class sj{constructor(t,e,r,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${r}),\n                      float(index == coords.y)));\n      }\n    `}}const aj={kernelName:Lf,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{indices:s}=t,{dtype:a,depth:i,onValue:c,offValue:d}=r,m=ze(s.shape),g=new sj(m,i,c,d),y=zt({inputs:{x:s},backend:e,attrs:{shape:[m]}}),C=e.runWebGLProgram(g,[y],a);e.disposeIntermediateTensorInfo(y);const k=zt({inputs:{x:C},backend:e,attrs:{shape:[...s.shape,i]}});return e.disposeIntermediateTensorInfo(C),k}};function BI(n){const{inputs:t,backend:e}=n,{x:r}=t;if("complex64"===r.dtype){const s=Gb({inputs:{input:r},backend:e}),a=BI({inputs:{x:s},backend:e}),i=FI({inputs:{input:r},backend:e}),c=BI({inputs:{x:i},backend:e}),d=of({inputs:{real:a,imag:c},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),d}return Hb({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:e})}const ij={kernelName:eh,backendName:"webgl",kernelFunc:BI},oj={kernelName:Ff,backendName:"webgl",kernelFunc:function wB(n){const{inputs:t,backend:e}=n,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const s=Gb({inputs:{input:r},backend:e}),a=wB({inputs:{x:s},backend:e}),i=FI({inputs:{input:r},backend:e}),c=BI({inputs:{x:i},backend:e}),d=of({inputs:{real:a,imag:c},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),d}return Hb({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:e})}},lj={kernelName:Bf,backendName:"webgl",kernelFunc:function uj(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r;if(1===t.length)return VR({inputs:{input:t[0]},backend:e,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(g=>{Ft(a,g.shape,"All tensors passed to stack must have matching shapes"),q(i===g.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],m=QL({inputs:t.map(g=>{const y=VR({inputs:{input:g},backend:e,attrs:{dim:s}});return c.push(y),y}),backend:e,attrs:{axis:s}});return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}};class cj{constructor(t,e,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const s=t.length,a=yr(s),i=e.map(m=>m[0]).join(","),c=e.map((m,g)=>m[0]+t[g]).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${c});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${d}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${c};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class fj{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((D,M)=>D[0]+t[M]+D[1]);const s=t.length,a=yr(s),i=e.map(D=>D[0]).join(","),c=e.map((D,M)=>D[0]+t[M]).join(","),d=_a("rc",s),m=_a("source",s),g=`${d[s-1]} < ${this.outputShape[s-1]}`,y=1===s?"source":`vec2(${m.slice(-2).join()})`,C=[`${a} rc = outputLoc;`,`${d[s-1]} += 1;\n       if(${g}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${d[s-2]} += 1;\n       if(${d[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${d[s-1]} += 1;\n         if(${g}) {`],T=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let k="";for(let D=0,M=1===s?2:4;D<M;D++)k+=`\n        ${C[D]}\n        if (${T}) {\n          result[${D}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${D}] = getChannel(getX(${m.join()}), ${y});\n        }\n      `;k+=1===s?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${c});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${k}\n        setOutput(result);\n      }\n    `}}const NB=n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===ze(s.shape))return Hb({backend:e,attrs:{shape:a.map((g,y)=>g[0]+s.shape[y]+g[1]),value:i,dtype:s.dtype}});const c=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fj(s.shape,a,i):new cj(s.shape,a,i);return e.runWebGLProgram(c,[s],s.dtype,[[i]])},hj={kernelName:Pf,backendName:"webgl",kernelFunc:NB},mj=Js({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),gj={kernelName:hc,backendName:"webgl",kernelFunc:mj},yj={kernelName:zf,backendName:"webgl",kernelFunc:function vj(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,c=s.shape.length,d=[],m=Mn(a,s.shape);let g=m;const y=Or(g,c);let T,C=s;if(null!=y&&(C=Ta({inputs:{x:s},backend:e,attrs:{perm:y}}),g=Br(g.length,c),d.push(C)),gs("prod",g,c),e.shouldExecuteOnCPU([C])){const k=e.texData.get(C.dataId).values,{outVals:D,outShape:M,outDtype:R}=eq(C.shape,C.dtype,k,g);T=e.makeTensorInfo(M,R,D)}else{const[k,D]=ms(C.shape,g),M=ze(D),R=zt({inputs:{x:C},backend:e,attrs:{shape:[-1,M]}}),V=Sd(R,Ip(s.dtype),"prod",e);T=zt({inputs:{x:V},backend:e,attrs:{shape:k}}),d.push(R),d.push(V)}if(i){d.push(T);const k=Wr(T.shape,m);T=zt({inputs:{x:T},backend:e,attrs:{shape:k}})}return d.forEach(k=>e.disposeIntermediateTensorInfo(k)),T}},xj={kernelName:np,backendName:"webgl",kernelFunc:function bj(n){const{inputs:t,backend:e,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:c}=r,d=s.map(R=>e.readSync(R.dataId)),m=s.map(R=>R.shape),g=e.readSync(a.dataId),y=e.readSync(i.dataId),[C,T,k]=tq(d,m,g,a.shape,a.dtype,y,i.shape,c),D=C.map(R=>e.makeTensorInfo([R.length],"int32",R)),M=e.makeTensorInfo(k,a.dtype,T);return D.concat([M])}},Nj={kernelName:rp,backendName:"webgl",kernelFunc:function wj(n){const{inputs:t,backend:e}=n,{starts:r,limits:s,deltas:a}=t,i=e.readSync(r.dataId),c=e.readSync(s.dataId),d=e.readSync(a.dataId),[m,g]=nq(i,r.shape,r.dtype,c,s.shape,d,a.shape);return[e.makeTensorInfo([m.length],"int32",m),e.makeTensorInfo([g.length],r.dtype,g)]}},Cj={kernelName:sp,backendName:"webgl",kernelFunc:function Sj(n){const{inputs:t,backend:e,attrs:r}=n,{shape:s,values:a,defaultValue:i,rowPartitionTensors:c}=t,{rowPartitionTypes:d}=r,m=e.readSync(s.dataId),g=e.readSync(a.dataId),y=e.readSync(i.dataId),C=c.map(M=>e.readSync(M.dataId)),T=c.map(M=>M.shape),[k,D]=rq(m,s.shape,g,a.shape,a.dtype,y,i.shape,C,T,d);return e.makeTensorInfo(k,a.dtype,D)}},SB=n=>{const{backend:t,attrs:e}=n,{start:r,stop:s,step:a,dtype:i}=e,c=sq(r,s,a,i);return t.makeTensorInfo([c.length],i,c)},Ij={kernelName:ap,backendName:"webgl",kernelFunc:SB},_j=tr({opSnippet:"return 1.0 / x;"}),Tj={kernelName:mr,backendName:"webgl",kernelFunc:_j},Ej=tr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),kj={kernelName:hn,backendName:"webgl",kernelFunc:Ej},Dj=tr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Rj={kernelName:Wu,backendName:"webgl",kernelFunc:Dj};class $j{constructor(t,e,r,s,a){this.variableNames=["A"],this.outputShape=[];const[i,c,d,m]=t;this.outputShape=[i,e,r,m];const g=[s&&e>1?c-1:c,s&&r>1?d-1:d],y=[s&&e>1?e-1:e,s&&r>1?r-1:r];let C;C=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${g[0]/y[0]},\n          ${g[1]/y[1]});\n      const vec2 inputShapeRC = vec2(${c}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${C};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Oj{constructor(t,e,r,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,c,d,m]=t;this.outputShape=[i,e,r,m];const g=[s&&e>1?c-1:c,s&&r>1?d-1:d],y=[s&&e>1?e-1:e,s&&r>1?r-1:r];let C;C=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${g[0]/y[0]},\n          ${g[1]/y[1]},\n          ${g[1]/y[1]});\n      const vec3 inputShapeRC = vec3(${c}.0, ${d}.0,\n                                     ${d}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${C};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${m-1};\n        bool hasNextRow = coords.z < ${r-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Lj={kernelName:jo,backendName:"webgl",kernelFunc:function Fj(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:c}=r,[d,m]=c,g=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Oj(s.shape,d,m,a,i):new $j(s.shape,d,m,a,i);return e.runWebGLProgram(g,[s],"float32")}};class Bj{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,a]=e,[,i,c]=t,d=[r&&i>1?s-1:s,r&&c>1?a-1:a],m=[r&&i>1?i-1:i,r&&c>1?c-1:c],g=d[0]/m[0],y=d[1]/m[1],C=1/g,T=1/y,k=2*Math.ceil(C)+2,D=2*Math.ceil(T)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${g});\n        const float widthScale = float(${y});\n\n        const float invHeightScale = float(${C});\n        const float invWidthScale = float(${T});\n\n        const int winHeight = int(${k});\n        const int winWidth = int(${D});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${c}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const zj={kernelName:Xg,backendName:"webgl",kernelFunc:function Pj(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r,c=new Bj(a.shape,s.shape,i);return e.runWebGLProgram(c,[a],a.dtype)}};class Vj{constructor(t,e,r,s,a){this.variableNames=["A"],this.outputShape=[];const[i,c,d,m]=t;this.outputShape=[i,e,r,m];const g=[s&&e>1?c-1:c,s&&r>1?d-1:d],y=[s&&e>1?e-1:e,s&&r>1?r-1:r];let T;T=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${g[0]/y[0]},\n          ${g[1]/y[1]});\n      const vec2 inputShapeRC = vec2(${c}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${T};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${s?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Uj{constructor(t,e,r,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,c,d,m]=t;this.outputShape=[i,e,r,m];const g=[s&&e>1?c-1:c,s&&r>1?d-1:d],y=[s&&e>1?e-1:e,s&&r>1?r-1:r];let T;T=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${g[0]/y[0]},\n          ${g[1]/y[1]},\n          ${g[1]/y[1]});\n      const vec3 inputShapeRC = vec3(${c}.0, ${d}.0,\n                                     ${d}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${T};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${s?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${m-1};\n        bool hasNextRow = coords.z < ${r-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Gj={kernelName:Uu,backendName:"webgl",kernelFunc:function Wj(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:c}=r,[d,m]=c,g=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Uj(s.shape,d,m,a,i):new Vj(s.shape,d,m,a,i);return e.runWebGLProgram(g,[s],s.dtype)}};class qj{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,a]=e,[,i,c]=t,d=[r&&i>1?s-1:s,r&&c>1?a-1:a],m=[r&&i>1?i-1:i,r&&c>1?c-1:c],g=d[0]/m[0],y=d[1]/m[1],C=1/g,T=1/y,k=2*Math.ceil(C)+2,D=2*Math.ceil(T)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${g});\n        const float widthScale = float(${y});\n\n        const float invHeightScale = float(${C});\n        const float invWidthScale = float(${T});\n\n        const int winHeight = int(${k});\n        const int winWidth = int(${D});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${c}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${d[0]}) *\n                (float(dyR) / float(${m[0]}));\n\n            float sourceFracCol =\n                float(${d[1]}) *\n                  (float(dyC) / float(${m[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${r} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${r} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Kj={kernelName:ip,backendName:"webgl",kernelFunc:function Hj(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r,c=new qj(a.shape,s.shape,i);return e.runWebGLProgram(c,[a],a.dtype)}};class Zj{constructor(t,e){this.variableNames=["x"];const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=t,1===r)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const a=t.map((c,d)=>(c=>-1!==e.indexOf(c)&&1!==t[c]?`${t[c]} - coords[${c}] - 1`:`coords[${c}]`)(d)).join(","),i=yr(r);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class jj{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;const s=_a("rc",r),a=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,c=yr(r);function C(k){const D=t.map(($,V)=>function T(k,D){return-1!==e.indexOf(k)&&1!==t[k]?`${t[k]} - ${D[k]} - 1`:`${D[k]}`}(V,k));return`getChannel(getX(${D.join(",")}), vec2(${D.slice(-2).join(",")}))`}this.userCode=1===r?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${c} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function d(k){return C(k)}(s.slice())};\n          if(${a}){\n            result.g = ${function m(k){return k[r-1]="("+k[r-1]+" + 1)",C(k)}(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${function g(k){return k[r-2]="("+k[r-2]+" + 1)",C(k)}(s.slice())};\n            if(${a}) {\n              result.a = ${function y(k){return k[r-1]="("+k[r-1]+" + 1)",k[r-2]="("+k[r-2]+" + 1)",C(k)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Yj={kernelName:op,backendName:"webgl",kernelFunc:function Xj(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dims:a}=r,i=s.shape.length,c=Mn(a,s.shape);if(0===i)return ui({inputs:{x:s},backend:e});const d=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jj(s.shape,c):new Zj(s.shape,c);return e.runWebGLProgram(d,[s],s.dtype)}};class Jj{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=t[1],s=t[2];this.outputShape=t;let a="";a="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Qj={kernelName:mp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:r}=n,{radians:s,fillValue:a,center:i}=t,c=e,d=new Jj(r.shape,a),[m,g]=n0(i,r.shape[1],r.shape[2]),y=[[m,g,Math.sin(s),Math.cos(s)]];return c.runWebGLProgram(d,[r],r.dtype,y)}},eX=tr({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),tX={kernelName:Wf,backendName:"webgl",kernelFunc:eX},nX=tr({opSnippet:"return inversesqrt(x);",cpuKernelImpl:aq}),rX={kernelName:pc,backendName:"webgl",kernelFunc:nX};class WR{constructor(t,e,r,s,a,i,c=!0,d=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const m=yr(a.length),g=yr(i.length);let y="";1===r?y="i":2===r&&(y="i, j");let T="";1===s?T="i":2===s&&(T="i, coords[1]");let D="";d&&(D="coords[0], coords[1]"),this.userCode=`\n        ${m} strides = ${m}(${a});\n\n        void main() {\n          ${g} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${y}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${T});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(${D}), sum, float(found)));\n        }\n      `}}class sX{constructor(t,e,r,s,a,i,c=!0,d=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const m=yr(a.length),g=yr(i.length);let y="";1===r?y="i":2===r&&(y="i, j");let T="";1===s?T="i":2===s&&(T="i, coords[1]");let D="";d&&(D="coords[0], coords[1]"),this.userCode=`\n        ${m} strides = ${m}(${a});\n\n        void main() {\n          ${g} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${t}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${e}; j+=2) {\n              ivec4 index = round(getIndices(${y}));\n              flattenedIndex += index.xz * ${e>1?"strides[j]":"strides"};\n              if (j + 1 < ${e}) {\n                flattenedIndex += index.yw * ${e>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = getUpdates(${T});\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(getDefaultValue(${D}), sum, found));\n        }\n      `}}const iX={kernelName:Qn,backendName:"webgl",kernelFunc:function aX(n){const{inputs:t,backend:e,attrs:r}=n,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:c,numUpdates:d,sliceSize:m,strides:g,outputSize:y}=ou(0,s,i),C=[y/m,m];if(0===y)return e.makeTensorInfo(i,s.dtype);const T=zt({inputs:{x:s},backend:e,attrs:{shape:[d,c]}}),k=zt({inputs:{x:a},backend:e,attrs:{shape:[d,m]}}),D=e.makeTensorInfo([],"float32",new Float32Array([0]));let M;M=He().getBool("WEBGL_PACK")?new sX(d,c,T.shape.length,k.shape.length,g,C):new WR(d,c,T.shape.length,k.shape.length,g,C);const R=e.runWebGLProgram(M,[k,T,D],k.dtype),$=zt({inputs:{x:R},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(k),e.disposeIntermediateTensorInfo(R),e.disposeIntermediateTensorInfo(D),$}};class oX{constructor(t,e,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,r];const i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,c=2===He().getNumber("WEBGL_VERSION")?"while (left < right) {":i;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${c}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===s?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const lX={kernelName:Gf,backendName:"webgl",kernelFunc:function uX(n){const{inputs:t,backend:e,attrs:r}=n,{sortedSequence:s,values:a}=t,{side:i}=r,c=new oX(s.shape[0],s.shape[1],a.shape[1],i);return e.runWebGLProgram(c,[s,a],"int32",[[s.shape[1]]])}};class cX{constructor(t,e,r){let s,a;if(this.variableNames=["c","a","b"],this.outputShape=e,r>4)throw Error(`Where for rank ${r} is not yet supported`);if(1===r)a="resRC",s="resRC";else{const c=["resRC.x","resRC.y","resRC.z","resRC.w"],d=[],m=[];for(let g=0;g<e.length;g++)m.push(`${c[g]}`),g<t&&d.push(`${c[g]}`);s=d.join(),a=m.join()}const i=yr(r);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const hX={kernelName:mc,backendName:"webgl",kernelFunc:function fX(n){const{inputs:t,backend:e}=n,{condition:r,t:s,e:a}=t,i=new cX(r.shape.length,s.shape,s.shape.length);return e.runWebGLProgram(i,[r,s,a],ra(s.dtype,a.dtype))}},pX=tr({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Vm};\n  float scale = ${Um};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),mX={kernelName:qf,backendName:"webgl",kernelFunc:pX},vX=tr({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:oq}),yX={kernelName:gc,backendName:"webgl",kernelFunc:vX},bX=tr({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),xX={kernelName:pe,backendName:"webgl",kernelFunc:bX},SX=tr({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Nd}\n  return result;\n`}),CX={kernelName:Kf,backendName:"webgl",kernelFunc:SX},IX=tr({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),_X={kernelName:Gu,backendName:"webgl",kernelFunc:IX},TX=tr({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),AX={kernelName:Zf,backendName:"webgl",kernelFunc:TX},EX={kernelName:Xf,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,paddings:i}=r;q(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=a.reduce((R,$)=>R*$),d=[[0,0]];d.push(...i);for(let R=1+a.length;R<s.shape.length;++R)d.push([0,0]);const m=[],g=NB({inputs:{x:s},backend:e,attrs:{paddings:d,constantValue:0}}),y=qc(g.shape,a,c,!1),C=Zh(y.length,a.length,!1),T=jh(g.shape,a,c,!1),k=zt({inputs:{x:g},backend:e,attrs:{shape:y}}),D=Ta({inputs:{x:k},backend:e,attrs:{perm:C}}),M=zt({inputs:{x:D},backend:e,attrs:{shape:T}});return m.push(g),m.push(k),m.push(D),m.forEach(R=>e.disposeIntermediateTensorInfo(R)),M}},MX={kernelName:up,backendName:"webgl",kernelFunc:function kX(n){const{inputs:t,backend:e}=n,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const c=e.readSync(r.dataId),d=e.readSync(s.dataId),m=e.readSync(a.dataId),g=e.readSync(i.dataId)[0],[y,C,T,k,D]=lq(c,r.shape,r.dtype,d,s.dtype,m,g);return[e.makeTensorInfo(C,r.dtype,y),e.makeTensorInfo([C[0]],s.dtype,T),e.makeTensorInfo([k.length],"bool",new Uint8Array(k.map(M=>Number(M)))),e.makeTensorInfo([D.length],r.dtype,new Int32Array(D))]}},RX={kernelName:lp,backendName:"webgl",kernelFunc:function DX(n){const{inputs:t,backend:e}=n,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(e.readSync(s.dataId)),c=e.readSync(r.dataId),d=Array.from(e.readSync(a.dataId)),[m,g,y]=cq(c,r.shape,r.dtype,i,d);return[e.makeTensorInfo(g,r.dtype,m),e.makeTensorInfo([y.length],a.dtype,new Int32Array(y))]}},OX={kernelName:Ds,backendName:"webgl",kernelFunc:function $X(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=e.readSync(r.dataId),c=e.readSync(s.dataId),d=e.readSync(a.dataId),[m,g]=IL(i,r.shape,r.dtype,c,d,!0);return e.makeTensorInfo(g,r.dtype,m)}},LX={kernelName:Qt,backendName:"webgl",kernelFunc:function FX(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=e.readSync(r.dataId),c=e.readSync(s.dataId),d=e.readSync(a.dataId),[m,g]=IL(i,r.shape,r.dtype,c,d);return e.makeTensorInfo(g,r.dtype,m)}},PX={kernelName:pi,backendName:"webgl",kernelFunc:function BX(n){const{inputs:t,backend:e,attrs:r}=n,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:c}=r,{sliceRank:d,numUpdates:m,sliceSize:g,strides:y,outputSize:C}=ou(0,s,c);if("string"===a.dtype){const R=e.bufferSync(s),$=e.bufferSync(a),V=fo(e.readSync(i.dataId)[0]),G=iq(R,$,c,C,g,m,d,y,V,!1);return e.makeTensorInfo(c,G.dtype,G.values)}const k=new WR(m,d,s.shape.length,a.shape.length,y,[C,1],!1),D=e.runWebGLProgram(k,[a,s,i],a.dtype),M=zt({inputs:{x:D},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(D),M}},VX={kernelName:Yf,backendName:"webgl",kernelFunc:function zX(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,c=Mn(i,s.shape)[0],d=p0(s,a,c),g=new Array(s.shape.length).fill(0),y=s.shape.slice();return d.map(C=>{const T=[...y];T[c]=C;const k=Ug({inputs:{x:s},backend:e,attrs:{begin:g,size:T}});return g[c]+=C,k})}},CB="return sqrt(x);",UX=tr({opSnippet:CB,packedOpSnippet:CB,cpuKernelImpl:fq}),WX={kernelName:Xo,backendName:"webgl",kernelFunc:UX},GX=tr({opSnippet:"return x * x;"}),qX={kernelName:cp,backendName:"webgl",kernelFunc:GX},IB="return (a - b) * (a - b);",HX=Js({opSnippet:IB,packedOpSnippet:IB}),KX={kernelName:vc,backendName:"webgl",kernelFunc:HX},jX={kernelName:yc,backendName:"webgl",kernelFunc:function ZX(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const i=ko(e.readSync(s.dataId)),c=hq(i,"string",r);return e.makeTensorInfo(s.shape,"string",c)}},YX={kernelName:wc,backendName:"webgl",kernelFunc:function XX({inputs:n,attrs:t,backend:e}){const{x:r}=n,a=new Iu(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return e.runWebGLProgram(a,[r],r.dtype)}};class JX{constructor(t,e,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,a=yr(r.length),i=yr(r.length);let c="";if(1===s)c="coords * strides + begin";else{let d=0;c=r.map((m,g)=>(d++,1===r.length?`coords * strides[${g}] + begin[${g}]`:`coords[${d-1}] * strides[${g}] + begin[${g}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${c}));\n      }\n    `}}const eY={kernelName:fp,backendName:"webgl",kernelFunc:function QX(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,end:i,strides:c,beginMask:d,endMask:m,ellipsisMask:g,newAxisMask:y,shrinkAxisMask:C}=r,{finalShapeSparse:T,finalShape:k,isIdentity:D,sliceDim0:M,isSimpleSlice:R,begin:$,end:V,strides:G}=zv(s.shape,a,i,c,d,m,g,y,C);let K;if(D)K=zt({inputs:{x:s},backend:e,attrs:{shape:k}});else if(M||R){q(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const le=Ka($,V,G),he=Ug({inputs:{x:s},backend:e,attrs:{begin:$,size:le}});K=zt({inputs:{x:he},backend:e,attrs:{shape:k}}),e.disposeIntermediateTensorInfo(he)}else if(e.shouldExecuteOnCPU([s])){const he=e.readSync(s.dataId),Ae=En(s.shape,s.dtype,he),ke=dq(T,Ae,G,$);K=e.makeTensorInfo(k,s.dtype,ke.values)}else{const he=new JX($,G,T);K=e.runWebGLProgram(he,[s],s.dtype)}const ae=zt({inputs:{x:K},backend:e,attrs:{shape:k}});return e.disposeIntermediateTensorInfo(K),ae}},nY={kernelName:hp,backendName:"webgl",kernelFunc:function tY(n){const{inputs:t,backend:e,attrs:r}=n,{separator:s,nGramWidths:a,leftPad:i,rightPad:c,padWidth:d,preserveShortSequences:m}=r,{data:g,dataSplits:y}=t,C=e.readSync(g.dataId),T=e.readSync(y.dataId),[k,D]=pq(C,T,s,a,i,c,d,m);return[e.makeTensorInfo([k.length],"string",k),e.makeTensorInfo(y.shape,"int32",D)]}},sY={kernelName:bc,backendName:"webgl",kernelFunc:function rY(n){const{inputs:t,backend:e,attrs:r}=n,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const c=e.readSync(a.dataId),d=e.readSync(i.dataId)[0],[m,g,y]=mq(c,d,s),C=g.length;return[e.makeTensorInfo([C,2],"int32",m),e.makeTensorInfo([C],"string",g),e.makeTensorInfo([2],"int32",new Int32Array(y))]}},iY={kernelName:Ii,backendName:"webgl",kernelFunc:function aY(n){const{inputs:t,backend:e,attrs:r}=n,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(a.dataId),c=gq(i,s);return e.makeTensorInfo(a.shape,"int32",c)}},oY=tr({opSnippet:"return tan(x);"}),uY={kernelName:xc,backendName:"webgl",kernelFunc:oY},lY=tr({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),cY={kernelName:qu,backendName:"webgl",kernelFunc:lY},hY={kernelName:Yg,backendName:"webgl",kernelFunc:function fY(n){const{inputs:t,backend:e}=n,{tensor:s,indices:a,updates:i}=t,{sliceRank:c,numUpdates:d,sliceSize:m,strides:g,outputSize:y}=ou(0,a,s.shape),C=[y/m,m];if(0===y)return e.makeTensorInfo(s.shape,a.dtype);const T=zt({inputs:{x:a},backend:e,attrs:{shape:[d,c]}}),k=zt({inputs:{x:i},backend:e,attrs:{shape:[d,m]}}),D=zt({inputs:{x:s},backend:e,attrs:{shape:C}}),M=new WR(d,c,T.shape.length,k.shape.length,g,C,!1,!0),R=e.runWebGLProgram(M,[k,T,D],D.dtype),$=zt({inputs:{x:R},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(k),e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(R),$}};class dY{constructor(t,e){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[i]*e[i];this.outputShape=r,this.rank=r.length;const s=yr(this.rank),a=function pY(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${e[s]}, ${n[s]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function _B(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const d=e.readSync(s.dataId),m="string"===s.dtype?d.map(C=>fo(C)):d,g=En(s.shape,s.dtype,m),y=yq(g,a);return e.makeTensorInfo(y.shape,y.dtype,y.values)}const i=new dY(s.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}const mY={kernelName:Hu,backendName:"webgl",kernelFunc:_B};class gY{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class vY{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Cd(n,t){null!==t&&n.disposeIntermediateTensorInfo(t)}function TB(n){let t=1;for(;t<n;)t*=2;return t}const bY={kernelName:dp,backendName:"webgl",kernelFunc:function yY(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{k:a,sorted:i}=r,c=He().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),d=He().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),m=s.shape,g=m[m.length-1];if(e.shouldExecuteOnCPU([s])||g<c||a>d){const ke=e.readSync(s.dataId),[Ue,Je]=bq(ke,m,s.dtype,a,i);return[e.makeTensorInfo(Ue.shape,Ue.dtype,Ue.values),e.makeTensorInfo(Je.shape,Je.dtype,Je.values)]}if(0===a)return m[m.length-1]=0,[e.makeTensorInfo(m,s.dtype,[]),e.makeTensorInfo(m,"int32",[])];if(1===g)return[s,Hb({attrs:{shape:m,dtype:"int32",value:0},backend:e})];const y=e.texData.get(s.dataId),C=null!==y&&y.isPacked,T=C?e.unpackTensor(s):s,D=ze(m)/g,M=zt({inputs:{x:T},attrs:{shape:[D,g]},backend:e});C&&Cd(e,T);const R=TB(a),$=TB(g);let V=null;const G=()=>null===V?[M,M]:[M,V],K=(ke,Ue,Je)=>{const st=G(),at=new gY(Je),pt=V;V=e.runWebGLProgram(at,st,"int32",[[g],[null===V?1:0],[Number.NEGATIVE_INFINITY],[ke],[Ue]]),Cd(e,pt)};for(let ke=1;ke<R;ke*=2){const Ue=2*ke;for(let Je=ke;Je>=1;Je/=2)K(Ue,Je,[D,$])}for(let ke=$;ke>R;ke/=2){const Ue=G(),Je=new vY([D,ke/2]),ot=V;V=e.runWebGLProgram(Je,Ue,"int32",[[g],[null===V?1:0],[R]]),Cd(e,ot);const ct=R/2,pt=2*ct;for(let ut=ct;ut>=1;ut/=2)K(pt,ut,V.shape)}let ae=V;V=Ug({inputs:{x:V},backend:e,attrs:{begin:0,size:[D,a]}}),Cd(e,ae);let le=mB({inputs:{x:M,indices:V},backend:e,attrs:{axis:1,batchDims:1}});Cd(e,M);const he=m.slice(0,-1);he.push(a),ae=V,V=zt({inputs:{x:V},attrs:{shape:he},backend:e}),Cd(e,ae);const Ae=le;return le=zt({inputs:{x:le},attrs:{shape:he},backend:e}),Cd(e,Ae),[le,V]}};class xY{constructor(t,e,r,s,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const c="nearest"===r?1:2;let d;switch(s){case"constant":default:d=1;break;case"reflect":d=2;break;case"wrap":d=3;break;case"nearest":d=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${d} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${c} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const NY={kernelName:Ku,backendName:"webgl",kernelFunc:function wY(n){const{inputs:t,backend:e,attrs:r}=n,{image:s,transforms:a}=t,{interpolation:i,fillMode:c,fillValue:d,outputShape:m}=r,[g,y,C,T]=s.shape,[k,D]=null!=m?m:[y,C],R=new xY(y,C,i,c,d,[g,k,D,T]);return e.runWebGLProgram(R,[s,a],"float32")}},CY={kernelName:pp,backendName:"webgl",kernelFunc:function SY(n){const{inputs:t,attrs:e,backend:r}=n,{axis:s}=e,{x:a}=t;Og(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:c,outputShape:d,indices:m}=xq(i,s,a.shape,a.dtype);return[r.makeTensorInfo(d,a.dtype,c),r.makeTensorInfo([m.length],"int32",m)]}},_Y={kernelName:Qf,backendName:"webgl",kernelFunc:function IY(n){const{inputs:t,backend:e,attrs:r}=n,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,c=i.shape.length,d=s.shape[a],m=new Array(c-1);let g=0;for(let D=0;D<c;D++)D!==a&&(m[g++]=i.shape[D]);const y=[],C=new Array(c).fill(0),T=i.shape.slice();T[a]=1;const k=new Array(d);for(let D=0;D<k.length;D++){C[a]=D;const M=Ug({inputs:{x:i},backend:e,attrs:{begin:C,size:T}}),R=zt({inputs:{x:M},backend:e,attrs:{shape:m}});k[D]=R,y.push(M)}return y.forEach(D=>e.disposeIntermediateTensorInfo(D)),k}};class TY{constructor(t,e){this.variableNames=["x","segmentIds"];const r=t.windowSize,s=t.batchSize,a=t.inSize,i=t.numSegments,c=i*Math.ceil(a/r);this.outputShape=[s,c];const g=4*Math.floor(r/4),y=r%4,C="\n        sumValue += dot(values, segFilter);\n    ";let T="";a%r>0&&(T=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let k="";a%r>0&&(k=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${T}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${k}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${r}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${g}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${C}\n        }\n\n        int inIdx = inOffset + ${g};\n        if (${1===y}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${C}\n        } else if (${2===y}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${C}\n        } else if (${3===y}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${C}\n        }\n        setOutput(sumValue);\n      }\n    `}}const kY=[h8,p8,v8,x8,N8,I8,T8,E8,R8,O8,B8,V8,G8,Z8,Y8,Q8,tH,aH,oH,lH,hH,yH,xH,NH,TH,EH,RH,jq,FH,VH,qH,YH,e7,n7,s7,i7,c7,h7,p7,g7,y7,x7,S7,I7,E7,M7,$7,L7,P7,V7,G7,H7,j7,Y7,J7,eK,nK,sK,iK,uK,cK,dK,gK,yK,wK,CK,_K,AK,Zq,kK,PH,DK,$K,FK,Yq,BK,zK,UK,qK,ZK,XK,JK,eZ,rZ,aZ,oZ,fZ,dZ,mZ,bZ,wZ,SZ,IZ,TZ,MZ,$Z,BZ,GZ,e8,ZZ,YZ,ej,rj,SH,aj,oj,lj,hj,gj,Qq,yj,xj,Nj,Cj,Ij,CH,zZ,Tj,kj,Rj,n8,Lj,zj,Gj,Kj,Yj,Qj,tX,rX,iX,lX,hX,mX,yX,xX,CX,_X,vH,UZ,AX,EX,MX,RX,OX,LX,PX,VX,WX,qX,KX,jX,YX,eY,nY,sY,iY,VZ,l8,uY,cY,hY,mY,bY,NY,c8,CY,_Y,{kernelName:Rs,backendName:"webgl",kernelFunc:function AY(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,segmentIds:a}=t,{numSegments:i}=r,c=s.shape.length,d=[];let m=0;const g=Or([m],c);let y=s;null!=g&&(y=Ta({inputs:{x:s},backend:e,attrs:{perm:g}}),d.push(y),m=Br(1,c)[0]);const C=KN(y.shape,m,i),T=ze([y.shape[m]]),k=zt({inputs:{x:y},backend:e,attrs:{shape:[-1,T]}});d.push(k);const D=Ip(s.dtype),M=(G,K,ae,le,he)=>{const Ae=G.shape[0],ke=G.shape[1],Ue=HN(ke,he),st=new TY({windowSize:Ue,inSize:ke,batchSize:Ae,numSegments:he},K),at=e.compileAndRun(st,[G,ae],le);if(d.push(at),at.shape[1]===he)return at;const ot=SB({backend:e,attrs:{start:0,stop:he,step:1,dtype:"float32"}}),ct=_B({inputs:{x:ot},backend:e,attrs:{reps:[ke/Ue]}});return d.push(ot),d.push(ct),M(at,K,ct,le,he)},$=zt({inputs:{x:M(k,"unsortedSegmentSum",a,D,i)},backend:e,attrs:{shape:C}});let V=$;if(null!=g){d.push($);const G=fu(g);V=Ta({inputs:{x:V},backend:e,attrs:{perm:G}})}return d.forEach(G=>e.disposeIntermediateTensorInfo(G)),V}},ij];for(const n of kY)gp(n);const DY={"tfjs-core":qv,"tfjs-backend-cpu":c3,"tfjs-backend-webgl":RL,"tfjs-data":fF,"tfjs-layers":Z0,"tfjs-converter":qO,tfjs:"4.4.0"};var qg=(()=>{return(n=qg||(qg={}))[n.Complete=0]="Complete",n[n.Progess=1]="Progess",n[n.Error=2]="Error",qg;var n})();function RY(n,t){let e=n[0],s=t[0],c=(s-e)*Math.PI/180,d=(t[1]-n[1])*Math.PI/180,m=Math.sin(c/2)*Math.sin(c/2)+Math.cos(e*Math.PI/180)*Math.cos(s*Math.PI/180)*Math.sin(d/2)*Math.sin(d/2);return 2*Math.atan2(Math.sqrt(m),Math.sqrt(1-m))*6371}function $Y(n,t){let r=new no.KMeans({nClusters:n,randomState:0}).fit(t).predict(t).arraySync(),s=new Set(r).size,a=new Array(s);for(let i=0;i<a.length;i++)a[i]=[];console.log("unique labels "+s);for(let i=0;i<t.length;i++){let c=r[i];a[c].push(t[i]),t[i].push(c)}return[a,t]}function OY(n,t){for(let e=0;e<n.length;e++)if(!FY(n[e],t))return!1;return!0}function FY(n,t){for(let e=0;e<n.length;e++)for(let r=e+1;r<n.length;r++)if(RY(n[e],n[r])>t)return!1;return!0}addEventListener("message",({data:n})=>{var t,e,r;(0,no.setBackend)(Ms),t=n.points,e=n.clusters,r=n.minimumClusters,[t,e,r]=function LY(n,t,e,r,s){for(let a=e;a<r;a++){console.log(`Checking for a valid ${a} cluster solution`);let i={};i.status=qg.Progess,i.message=`Checking for a valid ${a} cluster solution`,postMessage(i),n.length>0&&n[0].length>2&&(console.log("Length is greater than 2"),n=n.map(function(d){return d.slice(0,-1)})),n[0].length>2&&console.log("Length is still greater than 2");let c=[];if([c,n]=$Y(a,n),OY(c,s))return[n,c,e]}return console.log(`Unable to find a valid cluster solution between ${e} and ${r} clusters`),[null,null,0]}(n.points,0,n.minimumClusters,n.maximumClusters,n.maxDistance);const s={points:t,clusters:e,minimumClusters:r};let a={};null!=t?(a.status=qg.Complete,a.data=s):(a.status=qg.Error,a.message=`Unable to find a valid cluster solution between ${n.minimumClusters} and ${n.maximumClusters} clusters`),postMessage(a)})})()})();